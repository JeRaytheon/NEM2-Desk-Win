{"version":3,"sources":["webpack:///./src/views/wallet/wallet-import-mnemonic/WalletImportMnemonic.vue?5612","webpack:///./src/views/wallet/wallet-import-mnemonic/WalletImportMnemonic.vue?5e28","webpack:///./src/views/wallet/wallet-import-mnemonic/WalletImportMnemonic.vue?e4b9","webpack:///./src/views/wallet/wallet-import-mnemonic/WalletImportMnemonic.vue","webpack:///./src/views/wallet/wallet-import-mnemonic/WalletImportMnemonic.vue?f507","webpack:///./src/views/wallet/wallet-import-mnemonic/WalletImportMnemonic.vue?90a8","webpack:///./src/views/wallet/wallet-import-mnemonic/WalletImportMnemonic.vue?add0"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_s","$t","directives","name","rawName","value","form","expression","domProps","on","input","$event","target","composing","$set","attrs","placeholder","model","callback","$$v","_l","item","key","label","type","click","toBack","importWallet","staticRenderFns","WalletImportMnemonicvue_type_script_lang_ts_WalletImportMnemonic","_super","WalletImportMnemonic","_this","apply","arguments","mnemonic","networkType","walletName","password","checkPW","NetworkTypeList","dist","MIJIN_TEST","MAIN_NET","TEST_NET","MIJIN","account","tslib_es6","prototype","checkMnemonic","checkImport","loginWallet","$Notice","error","title","config","PLEASE_SWITCH_NETWORK","INCONSISTENT_PASSWORD_ERROR","PASSWORD_SETTING_INPUT_ERROR","WALLET_NAME_INPUT_ERROR","split","length","MNENOMIC_INPUT_ERROR","createAccount","$store","commit","e","PassPhrase","nem2_hd_wallets_dist","bip32Seed","toSeed","bip32Node","createFromSeed","buf2hex","wallet","getAccount","buffer","byteArray","Uint8Array","hexParts","i","hex","toString","paddedHex","slice","push","join","that","netType","setUserDefault","walletList","state","app","style","sdkWallet","getWallet","privateKey","then","Wallet","storeWallet","result","address","publicKey","publicAccount","mosaics","balance","getMosaicList","data","_a","sent","getMultisigAccount","encryptObj","encrypt","mnemonicEnCodeObj","Object","help","localKey","toWalletDetails","listItem","walletItem","node","currentXEM2","currentXEM1","sdkAccount","getAccountInfo","accountInfoResult","accountInfo","subscribe","mosaicList","map","id","toHex","amount","compact","getMultisigAccountInfo","multisigAccountInfo","esm_typeof","isMultisig","keyObj","localData","isExist","JSON","parse","saveData","ciphertext","iv","assign","unshift","stringify","success","$emit","vue_property_decorator","WalletImportMnemonicvue_type_script_lang_ts_","wallet_import_mnemonic_WalletImportMnemonicvue_type_script_lang_ts_","component","componentNormalizer","__webpack_exports__","_node_modules_vue_style_loader_index_js_ref_10_oneOf_1_0_node_modules_css_loader_index_js_ref_10_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_10_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_10_oneOf_1_3_node_modules_less_loader_dist_cjs_js_ref_10_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_WalletImportMnemonic_vue_vue_type_style_index_0_id_13d558a8_scoped_true_lang_less___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_vue_style_loader_index_js_ref_10_oneOf_1_0_node_modules_css_loader_index_js_ref_10_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_10_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_10_oneOf_1_3_node_modules_less_loader_dist_cjs_js_ref_10_oneOf_1_4_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_WalletImportMnemonic_vue_vue_type_style_index_0_id_13d558a8_scoped_true_lang_less___WEBPACK_IMPORTED_MODULE_0___default","n","exports","module","content","locals","add","default","sourceMap","shadowMode"],"mappings":"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","file":"static/js/chunk-15a2ab0d.d769c1fb.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"mnemonic\"},[_c('div',{staticClass:\"describle\"},[_vm._v(_vm._s(_vm.$t('mnemonic_describle')))]),_c('ul',[_c('li',[_vm._v(\"\\n        \"+_vm._s(_vm.$t('input_mnemonic'))+\"\\n        \"),_c('div',{staticClass:\"tips\"},[_vm._v(\"\\n          \"+_vm._s(_vm.$t('enter_12_words_please_pay_attention_to_the_order_separated_by_a_space_between_each_word'))+\"\\n        \")]),_c('div',{staticClass:\"gray_content textarea\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.form.mnemonic),expression:\"form.mnemonic\"}],staticClass:\"absolute\",domProps:{\"value\":(_vm.form.mnemonic)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.form, \"mnemonic\", $event.target.value)}}})])]),_c('li',[_vm._v(\"\\n        \"+_vm._s(_vm.$t('choose_network'))+\"\\n        \"),_c('div',{staticClass:\"gray_content\"},[_c('Select',{attrs:{\"placeholder\":_vm.$t('choose_network')},model:{value:(_vm.form.networkType),callback:function ($$v) {_vm.$set(_vm.form, \"networkType\", $$v)},expression:\"form.networkType\"}},_vm._l((_vm.NetworkTypeList),function(item){return _c('Option',{key:item.value,attrs:{\"value\":item.value}},[_vm._v(_vm._s(item.label))])}),1)],1)]),_c('li',[_vm._v(\"\\n        \"+_vm._s(_vm.$t('set_the_wallet_name'))+\"\\n        \"),_c('div',{staticClass:\"gray_content\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.form.walletName),expression:\"form.walletName\"}],staticClass:\"absolute\",attrs:{\"type\":\"text\",\"placeholder\":_vm.$t('set_the_wallet_name')},domProps:{\"value\":(_vm.form.walletName)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.form, \"walletName\", $event.target.value)}}})])]),_c('li',[_vm._v(\"\\n        \"+_vm._s(_vm.$t('set_password'))+\"\\n        \"),_c('div',{staticClass:\"tips\"},[_vm._v(\"\\n          \"+_vm._s(_vm.$t('mnemonic_describle_tips'))+\"\\n        \")]),_c('div',{staticClass:\"gray_content\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.form.password),expression:\"form.password\"}],staticClass:\"absolute\",attrs:{\"type\":\"password\",\"placeholder\":_vm.$t('please_set_your_password')},domProps:{\"value\":(_vm.form.password)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.form, \"password\", $event.target.value)}}})])]),_c('li',[_vm._v(\"\\n        \"+_vm._s(_vm.$t('confirm_password'))+\"\\n        \"),_c('div',{staticClass:\"gray_content\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.form.checkPW),expression:\"form.checkPW\"}],staticClass:\"absolute\",attrs:{\"type\":\"password\",\"placeholder\":_vm.$t('please_enter_your_wallet_password_again')},domProps:{\"value\":(_vm.form.checkPW)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.form, \"checkPW\", $event.target.value)}}})])])])]),_c('div',{staticClass:\"bottom_button \"},[_c('span',{staticClass:\"back left\",on:{\"click\":_vm.toBack}},[_vm._v(\" \"+_vm._s(_vm.$t('back')))]),_c('span',{staticClass:\"import right\",on:{\"click\":_vm.importWallet}},[_vm._v(_vm._s(_vm.$t('import')))])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {Message} from \"@/config/index\"\nimport {NetworkType, Crypto} from \"nem2-sdk\"\nimport {Component, Vue} from 'vue-property-decorator'\nimport {walletInterface} from \"@/interface/sdkWallet\"\nimport {accountInterface} from \"@/interface/sdkAccount\"\nimport {strToHexCharCode,localRead, localSave} from '@/help/help'\nimport {MnemonicPassPhrase, ExtendedKey, Wallet} from 'nem2-hd-wallets'\n\n@Component\nexport default class WalletImportMnemonic extends Vue {\n    form = {\n        mnemonic: '',\n        networkType: 0,\n        walletName: '',\n        password: '',\n        checkPW: '',\n    }\n    NetworkTypeList = [\n        {\n            value: NetworkType.MIJIN_TEST,\n            label: 'MIJIN_TEST'\n        }, {\n            value: NetworkType.MAIN_NET,\n            label: 'MAIN_NET'\n        }, {\n            value: NetworkType.TEST_NET,\n            label: 'TEST_NET'\n        }, {\n            value: NetworkType.MIJIN,\n            label: 'MIJIN'\n        },\n    ]\n    account = {}\n\n    importWallet() {\n        if (!this.checkMnemonic()) return\n        if (!this.checkImport()) return\n        this.loginWallet(this.account)\n    }\n\n    checkImport() {\n        if (this.form.networkType == 0) {\n            this.$Notice.error({\n                title: this.$t(Message.PLEASE_SWITCH_NETWORK) + ''\n            })\n            return false\n        }\n        if (!this.form.walletName || this.form.walletName == '') {\n            this.$Notice.error({\n                title: this.$t(Message.WALLET_NAME_INPUT_ERROR) + ''\n            })\n            return false\n        }\n        if (!this.form.password || this.form.password == '') {\n            this.$Notice.error({\n                title: this.$t(Message.PASSWORD_SETTING_INPUT_ERROR) + ''\n            })\n            return false\n        }\n        if (this.form.password !== this.form.checkPW) {\n            this.$Notice.error({\n                title: this.$t(Message.INCONSISTENT_PASSWORD_ERROR) + ''\n            })\n            return false\n        }\n        return true\n    }\n\n    checkMnemonic() {\n        try {\n            if (!this.form.mnemonic || this.form.mnemonic === '' || this.form.mnemonic.split(' ').length != 12) {\n                this.$Notice.error({\n                    title: this.$t(Message.MNENOMIC_INPUT_ERROR) + ''\n                })\n                return false\n            }\n            const account = this.createAccount(this.form.mnemonic)\n            this.$store.commit('SET_ACCOUNT', account);\n            this.account = account\n            return true\n        } catch (e) {\n            this.$Notice.error({\n                title: this.$t(Message.MNENOMIC_INPUT_ERROR) + ''\n            })\n            return false\n        }\n\n    }\n\n    createAccount(mnemonic) {\n        const PassPhrase = new MnemonicPassPhrase(mnemonic);\n        const bip32Seed = PassPhrase.toSeed();\n        const bip32Node = ExtendedKey.createFromSeed(this.buf2hex(bip32Seed));\n        const wallet = new Wallet(bip32Node);\n        const account = wallet.getAccount();\n        return account\n    }\n\n    buf2hex(buffer) {\n        // buffer is an ArrayBuffer\n        // create a byte array (Uint8Array) that we can use to read the array buffer\n        const byteArray = new Uint8Array(buffer);\n\n        // for each element, we want to get its two-digit hexadecimal representation\n        const hexParts = [];\n        for (let i = 0; i < byteArray.length; i++) {\n            // convert value to hexadecimal\n            const hex = byteArray[i].toString(16);\n\n            // pad with zeros to length 2\n            const paddedHex = ('00' + hex).slice(-2);\n\n            // push to array\n            hexParts.push(paddedHex);\n        }\n\n        // join all the hex values of the elements into a single string\n        return hexParts.join('');\n    }\n\n    loginWallet(account) {\n        const that = this\n        const walletName: any = this.form.walletName;\n        const netType: NetworkType = this.form.networkType;\n        that.setUserDefault(walletName, account, netType)\n    }\n\n    setUserDefault(name, account, netType) {\n        const that = this\n        const walletList = this.$store.state.app.walletList\n        const style = 'walletItem_bg_' + walletList.length % 3\n        walletInterface.getWallet({\n            name: name,\n            networkType: netType,\n            privateKey: account.privateKey\n        }).then(async (Wallet: any) => {\n            let storeWallet = {\n                name: Wallet.result.wallet.name,\n                address: Wallet.result.wallet.address['address'],\n                networkType: Wallet.result.wallet.address['networkType'],\n                privateKey: Wallet.result.privateKey,\n                publicKey: account.publicKey,\n                publicAccount: account.publicAccount,\n                mosaics: [],\n                wallet: Wallet.result.wallet,\n                password: Wallet.result.password,\n                balance: 0,\n                style\n            }\n            await that.getMosaicList(storeWallet).then((data) => {\n                storeWallet = data\n            })\n            await that.getMultisigAccount(storeWallet).then((data) => {\n                storeWallet = data\n            })\n            that.$store.commit('SET_WALLET', storeWallet)\n            const encryptObj = Crypto.encrypt(Wallet.result.privateKey, that.form['password'])\n            const mnemonicEnCodeObj = Crypto.encrypt(strToHexCharCode(this.form.mnemonic), that.form['password'])\n            that.localKey(storeWallet, encryptObj, mnemonicEnCodeObj)\n            this.toWalletDetails()\n        })\n    }\n\n    async getMosaicList(listItem) {\n        let walletItem = listItem\n        let node = this.$store.state.account.node\n        let currentXEM2 = this.$store.state.account.currentXEM2\n        let currentXEM1 = this.$store.state.account.currentXEM1\n        await accountInterface.getAccountInfo({\n            node,\n            address: walletItem.address\n        }).then(async accountInfoResult => {\n            await accountInfoResult.result.accountInfo.subscribe((accountInfo) => {\n                let mosaicList = accountInfo.mosaics\n                mosaicList.map((item) => {\n                    item.hex = item.id.toHex()\n                    if (item.id.toHex() == currentXEM2 || item.id.toHex() == currentXEM1) {\n                        walletItem.balance = item.amount.compact() / 1000000\n                    }\n                })\n                walletItem.mosaics = mosaicList\n            }, () => {\n                walletItem.balance = 0\n            })\n        })\n        return walletItem\n    }\n\n    async getMultisigAccount(listItem) {\n        let walletItem = listItem\n        let node = this.$store.state.account.node\n        await accountInterface.getMultisigAccountInfo({\n            node: node,\n            address: walletItem.address\n        }).then((multisigAccountInfo) => {\n            if (typeof (multisigAccountInfo.result.multisigAccountInfo) == 'object') {\n                multisigAccountInfo.result.multisigAccountInfo['subscribe']((accountInfo) => {\n                    walletItem.isMultisig = true\n                }, () => {\n                    walletItem.isMultisig = false\n                })\n            }\n        })\n        return walletItem\n    }\n\n    localKey(wallet, keyObj, mnemonicEnCodeObj) {\n        let localData: any[] = []\n        let isExist: boolean = false\n        try {\n            localData = JSON.parse(localRead('wallets'))\n        } catch (e) {\n            localData = []\n        }\n        let saveData = {\n            name: wallet.name,\n            ciphertext: keyObj.ciphertext,\n            iv: keyObj.iv,\n            networkType: wallet.networkType,\n            address: wallet.address,\n            publicKey: wallet.publicKey,\n            mnemonicEnCodeObj: mnemonicEnCodeObj\n        }\n        let account = this.$store.state.account.wallet;\n        account = Object.assign(account, saveData)\n        this.$store.commit('SET_WALLET', account)\n        for (let i in localData) {\n            if (localData[i].address === wallet.address) {\n                localData[i] = saveData\n                isExist = true\n            }\n        }\n        if (!isExist) localData.unshift(saveData)\n        localSave('wallets', JSON.stringify(localData))\n    }\n\n    toWalletDetails() {\n        this.$Notice.success({\n            title: this['$t']('Imported_wallet_successfully') + ''\n        });\n        this.$store.commit('SET_HAS_WALLET', true)\n        this.$emit('toWalletDetails')\n    }\n\n    toBack() {\n        this.$emit('closeImport')\n    }\n}\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WalletImportMnemonic.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WalletImportMnemonic.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./WalletImportMnemonic.vue?vue&type=template&id=13d558a8&scoped=true&\"\nimport script from \"./WalletImportMnemonic.vue?vue&type=script&lang=ts&\"\nexport * from \"./WalletImportMnemonic.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./WalletImportMnemonic.vue?vue&type=style&index=0&id=13d558a8&scoped=true&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"13d558a8\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../../node_modules/vue-style-loader/index.js??ref--10-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-3!../../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-4!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WalletImportMnemonic.vue?vue&type=style&index=0&id=13d558a8&scoped=true&lang=less&\"; export default mod; export * from \"-!../../../../node_modules/vue-style-loader/index.js??ref--10-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-3!../../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-4!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WalletImportMnemonic.vue?vue&type=style&index=0&id=13d558a8&scoped=true&lang=less&\"","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".mnemonic[data-v-13d558a8]{padding:0 .19rem .1rem .19rem}.mnemonic .describle[data-v-13d558a8]{position:relative;right:.19rem;font-size:.16rem;font-weight:400;color:#666;padding-bottom:.2rem}.mnemonic li[data-v-13d558a8]{list-style:disc;font-size:.16rem;font-weight:400;color:#222;padding-bottom:.3rem}.mnemonic .tips[data-v-13d558a8]{font-size:.14rem;font-weight:400;color:#999;margin-top:.1rem;position:relative;right:.25rem}.mnemonic .gray_content.textarea[data-v-13d558a8]{height:.9rem}.mnemonic .gray_content.textarea textarea[data-v-13d558a8]{padding:.1rem .3rem}.mnemonic .gray_content[data-v-13d558a8]{right:.25rem;margin-top:.1rem;width:6.8rem;height:.45rem;border:.01rem solid #ccc;border-radius:.04rem;position:relative;padding:.08rem .01rem}.mnemonic .gray_content textarea[data-v-13d558a8]{width:99%;height:95%;font-size:.14rem}.mnemonic .gray_content textarea[data-v-13d558a8]::-webkit-input-placeholder{color:#ccc}.mnemonic .gray_content textarea[data-v-13d558a8]::-moz-placeholder{color:#ccc}.mnemonic .gray_content textarea[data-v-13d558a8]:-ms-input-placeholder{color:#ccc}.mnemonic .gray_content textarea[data-v-13d558a8]::-ms-input-placeholder{color:#ccc}.mnemonic .gray_content textarea[data-v-13d558a8]::placeholder{color:#ccc}.mnemonic .gray_content input[data-v-13d558a8]{width:6.5rem;height:.4rem;border:none;padding-left:.2rem;font-size:.14rem}.mnemonic .gray_content input[data-v-13d558a8]::-webkit-input-placeholder{color:#999}.mnemonic .gray_content input[data-v-13d558a8]::-moz-placeholder{color:#999}.mnemonic .gray_content input[data-v-13d558a8]:-ms-input-placeholder{color:#999}.mnemonic .gray_content input[data-v-13d558a8]::-ms-input-placeholder{color:#999}.mnemonic .gray_content input[data-v-13d558a8]::placeholder{color:#999}.bottom_button[data-v-13d558a8]{width:6.8rem;position:relative;top:.1rem;height:.8rem}.bottom_button span[data-v-13d558a8]{width:2rem;height:.6rem;border-radius:.3rem;border:.01rem solid #20b5ac;display:inline-block;line-height:.6rem;font-size:.16rem;font-weight:400;color:#20b5ac;text-align:center;cursor:pointer;position:relative;bottom:.2rem}.bottom_button .import[data-v-13d558a8]{background:#20b5ac;color:#fff}\", \"\"]);\n\n// exports\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-3!../../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-4!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WalletImportMnemonic.vue?vue&type=style&index=0&id=13d558a8&scoped=true&lang=less&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"a2b146b0\", content, true, {\"sourceMap\":false,\"shadowMode\":false});"],"sourceRoot":""}
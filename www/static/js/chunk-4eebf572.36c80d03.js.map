{"version":3,"sources":["webpack:///./node_modules/bs58check/base.js","webpack:///./node_modules/bs58/index.js","webpack:///./node_modules/core-js/modules/_to-index.js","webpack:///./node_modules/core-js/modules/_typed.js","webpack:///./node_modules/nem2-hd-wallets/dist/src/CurveAlgorithm.js","webpack:///./node_modules/nem2-hd-wallets/dist/src/ExtendedKey.js","webpack:///./node_modules/typeforce/extra.js","webpack:///./node_modules/bip39/src/index.js","webpack:///./node_modules/tiny-secp256k1/js.js","webpack:///./node_modules/bip32/index.js","webpack:///./node_modules/core-js/modules/es6.typed.uint8-array.js","webpack:///./node_modules/core-js/modules/_array-fill.js","webpack:///./node_modules/nem2-hd-wallets/dist/src/MnemonicPassPhrase.js","webpack:///./node_modules/base-x/src/index.js","webpack:///./node_modules/nem2-hd-wallets/dist/src/MACImpl.js","webpack:///./node_modules/nem2-hd-wallets/dist/src/MACType.js","webpack:///./node_modules/typeforce/native.js","webpack:///./node_modules/nem2-hd-wallets/dist/src/Wallet.js","webpack:///./node_modules/bs58check/index.js","webpack:///./node_modules/typeforce/index.js","webpack:///./node_modules/bip32/crypto.js","webpack:///./node_modules/typeforce/errors.js","webpack:///./node_modules/nem2-hd-wallets/dist/src/Network.js","webpack:///./node_modules/bip39/src/_wordlists.js","webpack:///./node_modules/nem2-hd-wallets/dist/src/Curves/NodeEd25519.js","webpack:///./node_modules/wif/index.js","webpack:///mnemonicUtil.ts","webpack:///./node_modules/nem2-hd-wallets/dist/src/Compat/DeterministicKey.js","webpack:///./node_modules/core-js/modules/_array-copy-within.js","webpack:///./node_modules/nem2-hd-wallets/dist/index.js","webpack:///./node_modules/nem2-hd-wallets/dist/src/Cryptography.js","webpack:///./node_modules/nem2-hd-wallets/dist/src/CatapultECC.js","webpack:///./node_modules/nem2-hd-wallets/dist/src/KeyEncoding.js","webpack:///./node_modules/core-js/modules/_typed-array.js","webpack:///./node_modules/core-js/modules/_typed-buffer.js","webpack:///./node_modules/tiny-secp256k1/rfc6979.js"],"names":["base58","__webpack_require__","Buffer","module","exports","checksumFn","encode","payload","checksum","concat","length","decodeRaw","buffer","slice","newChecksum","decodeUnsafe","string","decode","Error","basex","ALPHABET","toInteger","toLength","it","undefined","number","RangeError","Typed","global","hide","uid","TYPED","VIEW","ABV","ArrayBuffer","DataView","CONSTR","i","l","TypedArrayConstructors","split","prototype","Object","defineProperty","value","CurveAlgorithm","__importStar","this","mod","__esModule","result","k","hasOwnProperty","call","bip32","bs58check","index_1","ExtendedKey","[object Object]","node","network","Network","BITCOIN","macType","MACType","HMAC","NodeEd25519","CATAPULT","fromBase58","seed","fromSeed","from","path","derived","derivePath","isNeutered","toBase58","parent","readUInt32BE","neutered","encoding","KeyEncoding","ENC_HEX","encodeAs","privateKey","publicKey","byteLength","key","toString","DEFAULT_MAC_TYPE","NATIVE","ERRORS","_Buffer","isBuffer","Hex","test","_LengthN","type","name","toJSON","Length","tfCustomError","_ArrayN","bind","Array","_BufferN","_HexN","_StringN","String","Range","a","b","f","_range","strict","Number","INT53_MAX","Math","pow","Finite","isFinite","Int8","Int16","Int32","Int53","floor","UInt8","UInt16","UInt32","UInt53","types","ArrayN","BufferN","HexN","StringN","typeName","t","createHash","pbkdf2_1","randomBytes","_wordlists_1","DEFAULT_WORDLIST","_default","INVALID_MNEMONIC","INVALID_ENTROPY","INVALID_CHECKSUM","WORDLIST_REQUIRED","lpad","str","padString","binaryToByte","bin","parseInt","bytesToBinary","bytes","map","x","join","deriveChecksumBits","entropyBuffer","ENT","CS","hash","update","digest","salt","password","mnemonicToSeedSync","mnemonic","mnemonicBuffer","normalize","saltBuffer","pbkdf2Sync","mnemonicToSeed","Promise","resolve","reject","pbkdf2","err","data","error","mnemonicToEntropy","wordlist","words","bits","word","index","indexOf","dividerIndex","entropyBits","checksumBits","entropyBytes","match","entropy","entropyToMnemonic","TypeError","chunks","binary","generateMnemonic","strength","rng","validateMnemonic","e","setDefaultWordlist","language","wordlists","getDefaultWordlist","keys","filter","lang","every","_wordlists_2","BN","EC","ec","secp256k1","deterministicGenerateK","ZERO32","alloc","EC_GROUP_ORDER","EC_P","n","curve","nDiv2","shrn","G","g","THROW_BAD_PRIVATE","THROW_BAD_POINT","THROW_BAD_TWEAK","THROW_BAD_HASH","THROW_BAD_SIGNATURE","THROW_BAD_EXTRA_DATA","isScalar","isOrderScalar","compare","isPoint","p","decodeFrom","y","__isPointCompressed","isPointCompressed","isPrivate","isSignature","r","s","assumeCompression","pubkey","fromBuffer","d","toBuffer","toArrayLike","P","decodePoint","getEncoded","compressed","_encode","pointAdd","pA","pB","__compressed","pp","add","isInfinity","pointAddScalar","tweak","tt","qq","mul","uu","pointCompress","pointFromScalar","dd","pointMultiply","privateAdd","dt","umod","privateSub","sub","sign","__sign","signWithEntropy","addData","checkSig","kI","Q","isZero","invm","cmp","allocUnsafe","copy","verify","q","signature","gtn","sInv","u1","u2","R","mulAdd","xR","v","eq","crypto","ecc","typeforce","wif","UINT256_TYPE","NETWORK_TYPE","compile","public","private","BIP32","chainCode","__d","__Q","depth","parentFingerprint","get","hash160","identifier","enumerable","fromPublicKey","version","writeUInt32BE","writeUInt8","toWIF","HIGHEST_BIT","derive","isHardened","hd","I","hmacSHA512","IL","IR","Ki","ki","fromPrivateKey","fingerprint","UINT31_MAX","UInt31","BIP32Path","readUInt8","X","deriveHardened","splitPath","reduce","prevHd","indexStr","init","byteOffset","toObject","toAbsoluteIndex","O","aLen","arguments","end","endPos","bip39","nem2_sdk_1","MnemonicPassPhrase","plain","DEFAULT_LANGUAGE","DEFAULT_STRENGTH","CATAPULT_RNG","assertLanguageSupported","Crypto","base","BASE_MAP","Uint8Array","fill","charAt","xc","charCodeAt","BASE","LEADER","FACTOR","log","iFACTOR","source","zeroes","pbegin","pend","size","b58","carry","it1","it2","repeat","psz","b256","it3","it4","vch","j","MACImpl","publicSalt","KMAC","Cryptography","constructor","Boolean","Function","Nil","","Null","Wallet","extendedKey","readOnly","getPublicKey","ENC_BIN","networkType","NetworkType","MIJIN_TEST","Account","createFromPrivateKey","getPrivateKey","PublicAccount","createFromPublicKey","DEFAULT_WALLET_PATH","childKeyNode","bs58checkBase","sha256x2","tmp","tfJSON","TfTypeError","TfPropertyTypeError","tfSubError","getValueTypeName","TYPES","arrayOf","options","_arrayOf","array","minLength","maxLength","Infinity","maybe","_maybe","propertyType","propertyKeyType","_map","propertyName","propertyValue","object","uncompiled","typePropertyName","_object","anyOf","_anyOf","some","allOf","_allOf","quacksLike","_quacksLike","tuple","_tuple","values","expected","_value","actual","surrogate","oneOf","EXTRA","createHmac","sha256Hash","native","getTypeName","fn","getValue","JSON","stringify","captureStackTrace","tfErrorString","valueTypeName","valueJson","message","__type","__value","__valueTypeName","tfPropertyErrorString","label","description","property","__label","__property","create","publicKeyPrefix","privateKeyPrefix","ed25519","chinese_simplified","chinese_traditional","korean","french","italian","spanish","japanese","JA","english","EN","CKDPriv","indexBuffer","DeterministicKey","kL","kR","inString","getQ","extract","CatapultECC","extractPublicKey","sha3Hash","getDepth","getIndex","getParentFingerprint","isValidPath","replace","parentKey","secretKey","hasher","createSha3Hasher","encodeRaw","createMnemonic","nem2_hd_wallets__WEBPACK_IMPORTED_MODULE_4__","createRandom","createAccount","PassPhrase","bip32Seed","toSeed","bip32Node","createFromSeed","buf2hex","wallet","account","getAccount","randomMnemonicWord","numberArr","randomWord","randomNum_1","checkRandomArr","push","arr","mnemonicNum","randomNum","includes","random","byteArray","hexParts","hex","paddedHex","__D","__DEPTH","__INDEX","__PARENT_FINGERPRINT","copyWithin","target","start","len","to","count","min","inc","CurveAlgorithm_1","MACType_1","MACImpl_1","KeyEncoding_1","Network_1","Cryptography_1","CatapultECC_1","DeterministicKey_1","NodeEd25519_1","MnemonicPassPhrase_1","ExtendedKey_1","Wallet_1","js_sha3_1","kmac256","dest","SHA3Hasher","func","createHasher","nacl_catapult","sk","hashfunc","HASH_SIZE","clamp","c","prepareForScalarMult","gf","pk","KEY_SIZE","scalarbase","pack","m","reset","finalize","subarray","HALF_HASH_SIZE","SIGNATURE_SIZE","h","HALF_SIGNATURE_SIZE","Float64Array","RawArray","modL","encodedSChecker","requireValid","isCanonical","isZeroFilled","unpackneg","scalarmult","crypto_verify_32","sharedKey","sharedKeyHash","Is_Reduced","Is_Zero","validateEncodedSPart","deepEqual","LIBRARY","fails","$export","$typed","$buffer","ctx","anInstance","propertyDesc","redefineAll","toIndex","toPrimitive","has","classof","isObject","isArrayIter","getPrototypeOf","gOPN","getIterFn","wks","createArrayMethod","createArrayIncludes","speciesConstructor","ArrayIterators","Iterators","$iterDetect","setSpecies","arrayFill","arrayCopyWithin","$DP","$GOPD","dP","gOPD","ARRAY_BUFFER","SHARED_BUFFER","BYTES_PER_ELEMENT","PROTOTYPE","ArrayProto","$ArrayBuffer","$DataView","arrayForEach","arrayFilter","arraySome","arrayEvery","arrayFind","arrayFindIndex","arrayIncludes","arrayIndexOf","arrayValues","arrayKeys","arrayEntries","entries","arrayLastIndexOf","lastIndexOf","arrayReduce","arrayReduceRight","reduceRight","arrayJoin","arraySort","sort","arraySlice","arrayToString","arrayToLocaleString","toLocaleString","ITERATOR","TAG","TYPED_CONSTRUCTOR","DEF_CONSTRUCTOR","ALL_CONSTRUCTORS","TYPED_ARRAY","WRONG_LENGTH","$map","allocate","LITTLE_ENDIAN","Uint16Array","FORCED_SET","set","toOffset","BYTES","offset","validate","C","speciesFromList","list","fromList","addGetter","internal","_d","$from","step","iterator","mapfn","mapping","iterFn","next","done","$of","TO_LOCALE_BUG","$toLocaleString","apply","proto","callbackfn","find","predicate","findIndex","forEach","searchElement","separator","reverse","that","middle","comparefn","begin","$begin","$slice","$set","arrayLike","src","$iterators","isTAIndex","$getDesc","$setDesc","desc","configurable","writable","S","F","getOwnPropertyDescriptor","$TypedArrayPrototype$","KEY","wrapper","CLAMPED","NAME","GETTER","SETTER","TypedArray","Base","TAC","FORCED","TypedArrayPrototype","getter","o","setter","round","addElement","$offset","$length","klass","$len","iter","$nativeIterator","CORRECT_ITER_NAME","$iterator","W","of","DESCRIPTORS","setToStringTag","DATA_VIEW","WRONG_INDEX","BaseBuffer","abs","LN2","BUFFER","BYTE_LENGTH","BYTE_OFFSET","$BUFFER","$LENGTH","$OFFSET","packIEEE754","mLen","nBytes","eLen","eMax","eBias","rt","unpackIEEE754","nBits","NaN","unpackI32","packI8","packI16","packI32","packF64","packF32","view","isLittleEndian","numIndex","intIndex","store","_b","conversion","ArrayBufferProto","$setInt8","setInt8","getInt8","setUint8","bufferLength","getUint8","getInt16","getUint16","getInt32","getUint32","getFloat32","getFloat64","setInt16","setUint16","setInt32","setUint32","setFloat32","setFloat64","ONE1","ZERO1","extraEntropy","T"],"mappings":"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","file":"static/js/chunk-4eebf572.36c80d03.js","sourcesContent":["'use strict'\n\nvar base58 = require('bs58')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function (checksumFn) {\n  // Encode a buffer as a base58-check encoded string\n  function encode (payload) {\n    var checksum = checksumFn(payload)\n\n    return base58.encode(Buffer.concat([\n      payload,\n      checksum\n    ], payload.length + 4))\n  }\n\n  function decodeRaw (buffer) {\n    var payload = buffer.slice(0, -4)\n    var checksum = buffer.slice(-4)\n    var newChecksum = checksumFn(payload)\n\n    if (checksum[0] ^ newChecksum[0] |\n        checksum[1] ^ newChecksum[1] |\n        checksum[2] ^ newChecksum[2] |\n        checksum[3] ^ newChecksum[3]) return\n\n    return payload\n  }\n\n  // Decode a base58-check encoded string to a buffer, no result if checksum is wrong\n  function decodeUnsafe (string) {\n    var buffer = base58.decodeUnsafe(string)\n    if (!buffer) return\n\n    return decodeRaw(buffer)\n  }\n\n  function decode (string) {\n    var buffer = base58.decode(string)\n    var payload = decodeRaw(buffer, checksumFn)\n    if (!payload) throw new Error('Invalid checksum')\n    return payload\n  }\n\n  return {\n    encode: encode,\n    decode: decode,\n    decodeUnsafe: decodeUnsafe\n  }\n}\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","// https://tc39.github.io/ecma262/#sec-toindex\nvar toInteger = require('./_to-integer');\nvar toLength = require('./_to-length');\nmodule.exports = function (it) {\n  if (it === undefined) return 0;\n  var number = toInteger(it);\n  var length = toLength(number);\n  if (number !== length) throw RangeError('Wrong length!');\n  return length;\n};\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar uid = require('./_uid');\nvar TYPED = uid('typed_array');\nvar VIEW = uid('view');\nvar ABV = !!(global.ArrayBuffer && global.DataView);\nvar CONSTR = ABV;\nvar i = 0;\nvar l = 9;\nvar Typed;\n\nvar TypedArrayConstructors = (\n  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'\n).split(',');\n\nwhile (i < l) {\n  if (Typed = global[TypedArrayConstructors[i++]]) {\n    hide(Typed.prototype, TYPED, true);\n    hide(Typed.prototype, VIEW, true);\n  } else CONSTR = false;\n}\n\nmodule.exports = {\n  ABV: ABV,\n  CONSTR: CONSTR,\n  TYPED: TYPED,\n  VIEW: VIEW\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Copyright 2019 NEM\n *\n * Licensed under the BSD 2-Clause License (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://opensource.org/licenses/BSD-2-Clause\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * Enumeration `CurveAlgorithm` lists supported ellyptic curve algorithms\n * for curve points derivation.\n *\n * @see https://github.com/nemtech/NIP/issues/12\n * @since 0.2.0\n */\nvar CurveAlgorithm;\n(function (CurveAlgorithm) {\n    CurveAlgorithm[CurveAlgorithm[\"secp256k1\"] = 0] = \"secp256k1\";\n    CurveAlgorithm[CurveAlgorithm[\"ed25519\"] = 1] = \"ed25519\";\n})(CurveAlgorithm = exports.CurveAlgorithm || (exports.CurveAlgorithm = {}));\n","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Copyright 2019 NEM\n *\n * Licensed under the BSD 2-Clause License (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://opensource.org/licenses/BSD-2-Clause\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nconst bip32 = __importStar(require(\"bip32\"));\nconst bs58check = require('bs58check');\n// internal dependencies\nconst index_1 = require(\"../index\");\n/**\n * Class `ExtendedKey` describes a hierarchical deterministic extended\n * key that can be derived. This hierarchical deterministic child key\n * derivation feature is described in the Bitcoin BIP32 standard which\n * can be found at following URL:\n *\n *     https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n *\n * This class *uses* features provided by the `bitcoinjs/bip32` package\n * and therefor is licensed under the BSD-2 Clause License as mentioned\n * [here](https://github.com/bitcoinjs/bip32/blob/master/LICENSE).\n *\n * @see https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n * @see https://github.com/bitcoinjs/bip32\n * @see https://github.com/nemtech/NIP/issues/12\n * @since 0.1.0\n */\nclass ExtendedKey {\n    /**\n     * Construct an `ExtendedKey` object out of its' base58 payload.\n     *\n     * @see https://github.com/bitcoinjs/bip32/blob/master/ts-src/bip32.ts\n     * @param   node   {BIP32}\n     */\n    constructor(/**\n                 * The hyper-deterministic node.\n                 * @var {BIP32 | NodeEd25519}\n                 */ node, \n    /**\n     * The hyper-deterministic node network.\n     * @var {Network}\n     */\n    network = index_1.Network.BITCOIN, \n    /**\n     * The Message Authentication Code type to use.\n     * Possible values include HMAC and KMAC.\n     * @var {MACType}\n     */\n    macType = index_1.MACType.HMAC) {\n        this.node = node;\n        this.network = network;\n        this.macType = macType;\n        if (this.node instanceof index_1.NodeEd25519\n            && this.network !== index_1.Network.CATAPULT) {\n            throw new Error('Given node is of type NodeEd25519 but network does not match Network.CATAPULT.');\n        }\n        // } else if (this.node instanceof nist256p1) { ..\n        else if (!(this.node instanceof index_1.NodeEd25519)\n            && this.network !== index_1.Network.BITCOIN) {\n            throw new Error('Given node is of type BIP32 but network does not match Network.BITCOIN.');\n        }\n    }\n    /**\n     * Create an extended key hyper-deterministic node by its' Base58\n     * payload.\n     *\n     * This method uses the `bitcoinjs/bip32` function named `fromBase58`\n     * and creates an extended key node by parsing the Base58 binary\n     * representation.\n     *\n     * @param payload\n     */\n    static createFromBase58(payload, network = index_1.Network.BITCOIN, macType = index_1.MACType.HMAC) {\n        if (network === index_1.Network.CATAPULT) {\n            // use NodeEd25519 node implementation\n            // interpret payload\n            const node = index_1.NodeEd25519.fromBase58(payload);\n            // instanciate our ExtendedKey\n            return new ExtendedKey(node, network, macType);\n        }\n        // else {\n        // use BIP32 node implementation\n        // interpret payload\n        const node = bip32.fromBase58(payload);\n        // instanciate our ExtendedKey\n        return new ExtendedKey(node, network, macType);\n    }\n    /**\n     * Create an extended key hyper-deterministic node with the master\n     * seed.\n     *\n     * This method uses the `bitcoinjs/bip32` function named `fromSeed`\n     * and creates an extended key node by creating HMAC-SHA512 hash\n     * of the words 'Bitcoin seed' appended with the `seed` binary\n     * representation.\n     *\n     * The result is split in 2 parts where the left most 32 bytes are\n     * the private and right most 32 bytes are the public key.\n     *\n     * @see https://github.com/bitcoinjs/bip32/blob/master/src/bip32.js#L265\n     * @param   seed    {string}\n     * @param   network {Network}\n     * @return  {ExtendedKey}\n     */\n    static createFromSeed(seed, network = index_1.Network.BITCOIN, macType = index_1.MACType.HMAC) {\n        if (network === index_1.Network.CATAPULT) {\n            // use NodeEd25519 node implementation\n            // use hexadecimal seed\n            const node = index_1.NodeEd25519.fromSeed(Buffer.from(seed, 'hex'), index_1.Network.CATAPULT, macType);\n            // instanciate our ExtendedKey\n            return new ExtendedKey(node, network, macType);\n        }\n        // else {\n        // use BIP32 node implementation\n        // use hexadecimal seed\n        const node = bip32.fromSeed(Buffer.from(seed, 'hex'));\n        // instanciate our ExtendedKey\n        return new ExtendedKey(node, network, macType);\n    }\n    /**\n     * Derive hyper-deterministic node by `path`.\n     *\n     * Default account layer should derive path `m/44'/43'/0'/0/0`.\n     *\n     * @see https://github.com/nemtech/NIP/issues/12\n     * @param path\n     */\n    derivePath(path) {\n        // derive path with specialized `derivePath`\n        const derived = this.node.derivePath(path);\n        if (derived instanceof index_1.NodeEd25519) {\n            // use NodeEd25519 node implementation\n            return new ExtendedKey(derived, this.network, this.macType);\n        }\n        // else {\n        // use BIP32 node implementation\n        return new ExtendedKey(derived, this.network, this.macType);\n    }\n    /**\n     * Return whether an extended key node is neutered or not.\n     *\n     * Neutered = Public Key only\n     * Not Neutered = Private Key available\n     *\n     * @return {boolean}\n     */\n    isNeutered() {\n        // forward to `bitcoinjs/bip32`\n        return this.node.isNeutered();\n    }\n    /**\n     * Return whether the current `node` is a master key node or not.\n     *\n     * @return {boolean}\n     */\n    isMaster() {\n        //XXX read parentFingerprint instead of decode\n        const base58 = this.node.toBase58();\n        const buffer = bs58check.decode(base58);\n        const parent = buffer.readUInt32BE(5);\n        return parent === 0x00000000;\n    }\n    /**\n     * Get a neutered hyper-deterministic node. This corresponds to\n     * a public key only extended key.\n     *\n     * From a neutered HD-node, users can only generate **public child\n     * keys** and no **private child keys**.\n     *\n     * @see https://github.com/bitcoinjs/bip32/blob/master/ts-src/bip32.ts#L118\n     * @return {ExtendedKey}    The neutered HD-node\n     */\n    getPublicNode() {\n        // create new node from neutered\n        const node = this.node.neutered();\n        if (node instanceof index_1.NodeEd25519) {\n            // use NodeEd25519 node implementation\n            return new ExtendedKey(node, this.network, this.macType);\n        }\n        // else {\n        // use BIP32 node implementation\n        return new ExtendedKey(node, this.network, this.macType);\n    }\n    /**\n     * This method proxies the conversion to base58 format\n     * to the `bitcoinjs/bip32` library.\n     *\n     * @return {string}\n     */\n    toBase58() {\n        // forward to `bitcoinjs/bip32`\n        return this.node.toBase58();\n    }\n    /**\n     * Get the private key of the HD-node.\n     *\n     * This method defaults to returning the hexadecimal notation of\n     * the key. Use `KeyEncoding.ENC_BIN` if you need the binary form.\n     *\n     * @see {KeyEncoding}\n     * @return  {string}\n     * @throws  {Error}     On use of this method with neutered extended keys (public keys).\n     */\n    getPrivateKey(encoding = index_1.KeyEncoding.ENC_HEX) {\n        if (this.isNeutered()) {\n            throw new Error('Cannot read private key out of extended public key.');\n        }\n        // return encoded private key (default hexadecimal format)\n        return this.encodeAs(this.node.privateKey, encoding);\n    }\n    /**\n     * Get the public key in hexadecimal notation.\n     *\n     * This method defaults to returning the hexadecimal notation of\n     * the key. Use `KeyEncoding.ENC_BIN` if you need the binary form.\n     *\n     * @see {KeyEncoding}\n     * @return  {string}\n     * @throws  {Error}     On use of this method with neutered extended keys (public keys).\n     */\n    getPublicKey(encoding = index_1.KeyEncoding.ENC_HEX) {\n        // @see https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n        // ser-p(P) serializes the coordinate and prepends either 0x02 or 0x03 to it.\n        // drop first byte for 32-bytes public key\n        let publicKey = this.node.publicKey;\n        if (this.node.publicKey.byteLength === 33) {\n            publicKey = this.node.publicKey.slice(1);\n        }\n        // return encoded public key (default hexadecimal format)\n        return this.encodeAs(publicKey, encoding);\n    }\n    /**\n     * Encode a key into `encoding`. Default `encoding` is `KeyEncoding.ENC_HEX`\n     * which results in a hexadecimal notation of the key.\n     *\n     * @param key\n     * @param encoding\n     */\n    encodeAs(key, encoding = index_1.KeyEncoding.ENC_HEX) {\n        if (encoding === index_1.KeyEncoding.ENC_HEX) {\n            // return hexadecimal notation\n            return key.toString('hex');\n        }\n        // return binary Buffer\n        return key;\n    }\n}\n/**\n * Static property to define which type of\n * message authentication code must be used.\n *\n * @var {MACType}\n */\nExtendedKey.DEFAULT_MAC_TYPE = index_1.MACType.HMAC;\nexports.ExtendedKey = ExtendedKey;\n","var NATIVE = require('./native')\nvar ERRORS = require('./errors')\n\nfunction _Buffer (value) {\n  return Buffer.isBuffer(value)\n}\n\nfunction Hex (value) {\n  return typeof value === 'string' && /^([0-9a-f]{2})+$/i.test(value)\n}\n\nfunction _LengthN (type, length) {\n  var name = type.toJSON()\n\n  function Length (value) {\n    if (!type(value)) return false\n    if (value.length === length) return true\n\n    throw ERRORS.tfCustomError(name + '(Length: ' + length + ')', name + '(Length: ' + value.length + ')')\n  }\n  Length.toJSON = function () { return name }\n\n  return Length\n}\n\nvar _ArrayN = _LengthN.bind(null, NATIVE.Array)\nvar _BufferN = _LengthN.bind(null, _Buffer)\nvar _HexN = _LengthN.bind(null, Hex)\nvar _StringN = _LengthN.bind(null, NATIVE.String)\n\nfunction Range (a, b, f) {\n  f = f || NATIVE.Number\n  function _range (value, strict) {\n    return f(value, strict) && (value > a) && (value < b)\n  }\n  _range.toJSON = function () {\n    return `${f.toJSON()} between [${a}, ${b}]`\n  }\n  return _range\n}\n\nvar INT53_MAX = Math.pow(2, 53) - 1\n\nfunction Finite (value) {\n  return typeof value === 'number' && isFinite(value)\n}\nfunction Int8 (value) { return ((value << 24) >> 24) === value }\nfunction Int16 (value) { return ((value << 16) >> 16) === value }\nfunction Int32 (value) { return (value | 0) === value }\nfunction Int53 (value) {\n  return typeof value === 'number' &&\n    value >= -INT53_MAX &&\n    value <= INT53_MAX &&\n    Math.floor(value) === value\n}\nfunction UInt8 (value) { return (value & 0xff) === value }\nfunction UInt16 (value) { return (value & 0xffff) === value }\nfunction UInt32 (value) { return (value >>> 0) === value }\nfunction UInt53 (value) {\n  return typeof value === 'number' &&\n    value >= 0 &&\n    value <= INT53_MAX &&\n    Math.floor(value) === value\n}\n\nvar types = {\n  ArrayN: _ArrayN,\n  Buffer: _Buffer,\n  BufferN: _BufferN,\n  Finite: Finite,\n  Hex: Hex,\n  HexN: _HexN,\n  Int8: Int8,\n  Int16: Int16,\n  Int32: Int32,\n  Int53: Int53,\n  Range: Range,\n  StringN: _StringN,\n  UInt8: UInt8,\n  UInt16: UInt16,\n  UInt32: UInt32,\n  UInt53: UInt53\n}\n\nfor (var typeName in types) {\n  types[typeName].toJSON = function (t) {\n    return t\n  }.bind(null, typeName)\n}\n\nmodule.exports = types\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst createHash = require(\"create-hash\");\nconst pbkdf2_1 = require(\"pbkdf2\");\nconst randomBytes = require(\"randombytes\");\nconst _wordlists_1 = require(\"./_wordlists\");\nlet DEFAULT_WORDLIST = _wordlists_1._default;\nconst INVALID_MNEMONIC = 'Invalid mnemonic';\nconst INVALID_ENTROPY = 'Invalid entropy';\nconst INVALID_CHECKSUM = 'Invalid mnemonic checksum';\nconst WORDLIST_REQUIRED = 'A wordlist is required but a default could not be found.\\n' +\n    'Please explicitly pass a 2048 word array explicitly.';\nfunction lpad(str, padString, length) {\n    while (str.length < length)\n        str = padString + str;\n    return str;\n}\nfunction binaryToByte(bin) {\n    return parseInt(bin, 2);\n}\nfunction bytesToBinary(bytes) {\n    return bytes.map(x => lpad(x.toString(2), '0', 8)).join('');\n}\nfunction deriveChecksumBits(entropyBuffer) {\n    const ENT = entropyBuffer.length * 8;\n    const CS = ENT / 32;\n    const hash = createHash('sha256')\n        .update(entropyBuffer)\n        .digest();\n    return bytesToBinary([...hash]).slice(0, CS);\n}\nfunction salt(password) {\n    return 'mnemonic' + (password || '');\n}\nfunction mnemonicToSeedSync(mnemonic, password) {\n    const mnemonicBuffer = Buffer.from((mnemonic || '').normalize('NFKD'), 'utf8');\n    const saltBuffer = Buffer.from(salt((password || '').normalize('NFKD')), 'utf8');\n    return pbkdf2_1.pbkdf2Sync(mnemonicBuffer, saltBuffer, 2048, 64, 'sha512');\n}\nexports.mnemonicToSeedSync = mnemonicToSeedSync;\nfunction mnemonicToSeed(mnemonic, password) {\n    return new Promise((resolve, reject) => {\n        try {\n            const mnemonicBuffer = Buffer.from((mnemonic || '').normalize('NFKD'), 'utf8');\n            const saltBuffer = Buffer.from(salt((password || '').normalize('NFKD')), 'utf8');\n            pbkdf2_1.pbkdf2(mnemonicBuffer, saltBuffer, 2048, 64, 'sha512', (err, data) => {\n                if (err)\n                    return reject(err);\n                else\n                    return resolve(data);\n            });\n        }\n        catch (error) {\n            return reject(error);\n        }\n    });\n}\nexports.mnemonicToSeed = mnemonicToSeed;\nfunction mnemonicToEntropy(mnemonic, wordlist) {\n    wordlist = wordlist || DEFAULT_WORDLIST;\n    if (!wordlist) {\n        throw new Error(WORDLIST_REQUIRED);\n    }\n    const words = (mnemonic || '').normalize('NFKD').split(' ');\n    if (words.length % 3 !== 0)\n        throw new Error(INVALID_MNEMONIC);\n    // convert word indices to 11 bit binary strings\n    const bits = words\n        .map(word => {\n        const index = wordlist.indexOf(word);\n        if (index === -1)\n            throw new Error(INVALID_MNEMONIC);\n        return lpad(index.toString(2), '0', 11);\n    })\n        .join('');\n    // split the binary string into ENT/CS\n    const dividerIndex = Math.floor(bits.length / 33) * 32;\n    const entropyBits = bits.slice(0, dividerIndex);\n    const checksumBits = bits.slice(dividerIndex);\n    // calculate the checksum and compare\n    const entropyBytes = entropyBits.match(/(.{1,8})/g).map(binaryToByte);\n    if (entropyBytes.length < 16)\n        throw new Error(INVALID_ENTROPY);\n    if (entropyBytes.length > 32)\n        throw new Error(INVALID_ENTROPY);\n    if (entropyBytes.length % 4 !== 0)\n        throw new Error(INVALID_ENTROPY);\n    const entropy = Buffer.from(entropyBytes);\n    const newChecksum = deriveChecksumBits(entropy);\n    if (newChecksum !== checksumBits)\n        throw new Error(INVALID_CHECKSUM);\n    return entropy.toString('hex');\n}\nexports.mnemonicToEntropy = mnemonicToEntropy;\nfunction entropyToMnemonic(entropy, wordlist) {\n    if (!Buffer.isBuffer(entropy))\n        entropy = Buffer.from(entropy, 'hex');\n    wordlist = wordlist || DEFAULT_WORDLIST;\n    if (!wordlist) {\n        throw new Error(WORDLIST_REQUIRED);\n    }\n    // 128 <= ENT <= 256\n    if (entropy.length < 16)\n        throw new TypeError(INVALID_ENTROPY);\n    if (entropy.length > 32)\n        throw new TypeError(INVALID_ENTROPY);\n    if (entropy.length % 4 !== 0)\n        throw new TypeError(INVALID_ENTROPY);\n    const entropyBits = bytesToBinary([...entropy]);\n    const checksumBits = deriveChecksumBits(entropy);\n    const bits = entropyBits + checksumBits;\n    const chunks = bits.match(/(.{1,11})/g);\n    const words = chunks.map(binary => {\n        const index = binaryToByte(binary);\n        return wordlist[index];\n    });\n    return wordlist[0] === '\\u3042\\u3044\\u3053\\u304f\\u3057\\u3093' // Japanese wordlist\n        ? words.join('\\u3000')\n        : words.join(' ');\n}\nexports.entropyToMnemonic = entropyToMnemonic;\nfunction generateMnemonic(strength, rng, wordlist) {\n    strength = strength || 128;\n    if (strength % 32 !== 0)\n        throw new TypeError(INVALID_ENTROPY);\n    rng = rng || randomBytes;\n    return entropyToMnemonic(rng(strength / 8), wordlist);\n}\nexports.generateMnemonic = generateMnemonic;\nfunction validateMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}\nexports.validateMnemonic = validateMnemonic;\nfunction setDefaultWordlist(language) {\n    const result = _wordlists_1.wordlists[language];\n    if (result)\n        DEFAULT_WORDLIST = result;\n    else\n        throw new Error('Could not find wordlist for language \"' + language + '\"');\n}\nexports.setDefaultWordlist = setDefaultWordlist;\nfunction getDefaultWordlist() {\n    if (!DEFAULT_WORDLIST)\n        throw new Error('No Default Wordlist set');\n    return Object.keys(_wordlists_1.wordlists).filter(lang => {\n        if (lang === 'JA' || lang === 'EN')\n            return false;\n        return _wordlists_1.wordlists[lang].every((word, index) => word === DEFAULT_WORDLIST[index]);\n    })[0];\n}\nexports.getDefaultWordlist = getDefaultWordlist;\nvar _wordlists_2 = require(\"./_wordlists\");\nexports.wordlists = _wordlists_2.wordlists;\n","const BN = require('bn.js')\nconst EC = require('elliptic').ec\nconst secp256k1 = new EC('secp256k1')\nconst deterministicGenerateK = require('./rfc6979')\n\nconst ZERO32 = Buffer.alloc(32, 0)\nconst EC_GROUP_ORDER = Buffer.from('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 'hex')\nconst EC_P = Buffer.from('fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f', 'hex')\n\nconst n = secp256k1.curve.n\nconst nDiv2 = n.shrn(1)\nconst G = secp256k1.curve.g\n\nconst THROW_BAD_PRIVATE = 'Expected Private'\nconst THROW_BAD_POINT = 'Expected Point'\nconst THROW_BAD_TWEAK = 'Expected Tweak'\nconst THROW_BAD_HASH = 'Expected Hash'\nconst THROW_BAD_SIGNATURE = 'Expected Signature'\nconst THROW_BAD_EXTRA_DATA = 'Expected Extra Data (32 bytes)'\n\nfunction isScalar (x) {\n  return Buffer.isBuffer(x) && x.length === 32\n}\n\nfunction isOrderScalar (x) {\n  if (!isScalar(x)) return false\n  return x.compare(EC_GROUP_ORDER) < 0 // < G\n}\n\nfunction isPoint (p) {\n  if (!Buffer.isBuffer(p)) return false\n  if (p.length < 33) return false\n\n  const t = p[0]\n  const x = p.slice(1, 33)\n  if (x.compare(ZERO32) === 0) return false\n  if (x.compare(EC_P) >= 0) return false\n  if ((t === 0x02 || t === 0x03) && p.length === 33) {\n    try { decodeFrom(p) } catch (e) { return false } // TODO: temporary\n    return true\n  }\n\n  const y = p.slice(33)\n  if (y.compare(ZERO32) === 0) return false\n  if (y.compare(EC_P) >= 0) return false\n  if (t === 0x04 && p.length === 65) return true\n  return false\n}\n\nfunction __isPointCompressed (p) {\n  return p[0] !== 0x04\n}\n\nfunction isPointCompressed (p) {\n  if (!isPoint(p)) return false\n  return __isPointCompressed(p)\n}\n\nfunction isPrivate (x) {\n  if (!isScalar(x)) return false\n  return x.compare(ZERO32) > 0 && // > 0\n    x.compare(EC_GROUP_ORDER) < 0 // < G\n}\n\nfunction isSignature (value) {\n  const r = value.slice(0, 32)\n  const s = value.slice(32, 64)\n  return Buffer.isBuffer(value) && value.length === 64 &&\n    r.compare(EC_GROUP_ORDER) < 0 &&\n    s.compare(EC_GROUP_ORDER) < 0\n}\n\nfunction assumeCompression (value, pubkey) {\n  if (value === undefined && pubkey !== undefined) return __isPointCompressed(pubkey)\n  if (value === undefined) return true\n  return value\n}\n\nfunction fromBuffer (d) { return new BN(d) }\nfunction toBuffer (d) { return d.toArrayLike(Buffer, 'be', 32) }\nfunction decodeFrom (P) { return secp256k1.curve.decodePoint(P) }\nfunction getEncoded (P, compressed) { return Buffer.from(P._encode(compressed)) }\n\nfunction pointAdd (pA, pB, __compressed) {\n  if (!isPoint(pA)) throw new TypeError(THROW_BAD_POINT)\n  if (!isPoint(pB)) throw new TypeError(THROW_BAD_POINT)\n\n  const a = decodeFrom(pA)\n  const b = decodeFrom(pB)\n  const pp = a.add(b)\n  if (pp.isInfinity()) return null\n\n  const compressed = assumeCompression(__compressed, pA)\n  return getEncoded(pp, compressed)\n}\n\nfunction pointAddScalar (p, tweak, __compressed) {\n  if (!isPoint(p)) throw new TypeError(THROW_BAD_POINT)\n  if (!isOrderScalar(tweak)) throw new TypeError(THROW_BAD_TWEAK)\n\n  const compressed = assumeCompression(__compressed, p)\n  const pp = decodeFrom(p)\n  if (tweak.compare(ZERO32) === 0) return getEncoded(pp, compressed)\n\n  const tt = fromBuffer(tweak)\n  const qq = G.mul(tt)\n  const uu = pp.add(qq)\n  if (uu.isInfinity()) return null\n\n  return getEncoded(uu, compressed)\n}\n\nfunction pointCompress (p, compressed) {\n  if (!isPoint(p)) throw new TypeError(THROW_BAD_POINT)\n\n  const pp = decodeFrom(p)\n  if (pp.isInfinity()) throw new TypeError(THROW_BAD_POINT)\n\n  return getEncoded(pp, compressed)\n}\n\nfunction pointFromScalar (d, __compressed) {\n  if (!isPrivate(d)) throw new TypeError(THROW_BAD_PRIVATE)\n\n  const dd = fromBuffer(d)\n  const pp = G.mul(dd)\n  if (pp.isInfinity()) return null\n\n  const compressed = assumeCompression(__compressed)\n  return getEncoded(pp, compressed)\n}\n\nfunction pointMultiply (p, tweak, __compressed) {\n  if (!isPoint(p)) throw new TypeError(THROW_BAD_POINT)\n  if (!isOrderScalar(tweak)) throw new TypeError(THROW_BAD_TWEAK)\n\n  const compressed = assumeCompression(__compressed, p)\n  const pp = decodeFrom(p)\n  const tt = fromBuffer(tweak)\n  const qq = pp.mul(tt)\n  if (qq.isInfinity()) return null\n\n  return getEncoded(qq, compressed)\n}\n\nfunction privateAdd (d, tweak) {\n  if (!isPrivate(d)) throw new TypeError(THROW_BAD_PRIVATE)\n  if (!isOrderScalar(tweak)) throw new TypeError(THROW_BAD_TWEAK)\n\n  const dd = fromBuffer(d)\n  const tt = fromBuffer(tweak)\n  const dt = toBuffer(dd.add(tt).umod(n))\n  if (!isPrivate(dt)) return null\n\n  return dt\n}\n\nfunction privateSub (d, tweak) {\n  if (!isPrivate(d)) throw new TypeError(THROW_BAD_PRIVATE)\n  if (!isOrderScalar(tweak)) throw new TypeError(THROW_BAD_TWEAK)\n\n  const dd = fromBuffer(d)\n  const tt = fromBuffer(tweak)\n  const dt = toBuffer(dd.sub(tt).umod(n))\n  if (!isPrivate(dt)) return null\n\n  return dt\n}\n\nfunction sign (hash, x) {\n  return __sign(hash, x)\n}\n\nfunction signWithEntropy (hash, x, addData) {\n  return __sign(hash, x, addData)\n}\n\nfunction __sign (hash, x, addData) {\n  if (!isScalar(hash)) throw new TypeError(THROW_BAD_HASH)\n  if (!isPrivate(x)) throw new TypeError(THROW_BAD_PRIVATE)\n  if (addData !== undefined && !isScalar(addData)) throw new TypeError(THROW_BAD_EXTRA_DATA)\n\n  const d = fromBuffer(x)\n  const e = fromBuffer(hash)\n\n  let r, s\n  const checkSig = function (k) {\n    const kI = fromBuffer(k)\n    const Q = G.mul(kI)\n\n    if (Q.isInfinity()) return false\n\n    r = Q.x.umod(n)\n    if (r.isZero() === 0) return false\n\n    s = kI\n      .invm(n)\n      .mul(e.add(d.mul(r)))\n      .umod(n)\n    if (s.isZero() === 0) return false\n\n    return true\n  }\n\n  deterministicGenerateK(hash, x, checkSig, isPrivate, addData)\n\n  // enforce low S values, see bip62: 'low s values in signatures'\n  if (s.cmp(nDiv2) > 0) {\n    s = n.sub(s)\n  }\n\n  const buffer = Buffer.allocUnsafe(64)\n  toBuffer(r).copy(buffer, 0)\n  toBuffer(s).copy(buffer, 32)\n  return buffer\n}\n\nfunction verify (hash, q, signature) {\n  if (!isScalar(hash)) throw new TypeError(THROW_BAD_HASH)\n  if (!isPoint(q)) throw new TypeError(THROW_BAD_POINT)\n\n  // 1.4.1 Enforce r and s are both integers in the interval [1, n − 1] (1, isSignature enforces '< n - 1')\n  if (!isSignature(signature)) throw new TypeError(THROW_BAD_SIGNATURE)\n\n  const Q = decodeFrom(q)\n  const r = fromBuffer(signature.slice(0, 32))\n  const s = fromBuffer(signature.slice(32, 64))\n\n  // 1.4.1 Enforce r and s are both integers in the interval [1, n − 1] (2, enforces '> 0')\n  if (r.gtn(0) <= 0 /* || r.compareTo(n) >= 0 */) return false\n  if (s.gtn(0) <= 0 /* || s.compareTo(n) >= 0 */) return false\n\n  // 1.4.2 H = Hash(M), already done by the user\n  // 1.4.3 e = H\n  const e = fromBuffer(hash)\n\n  // Compute s^-1\n  const sInv = s.invm(n)\n\n  // 1.4.4 Compute u1 = es^−1 mod n\n  //               u2 = rs^−1 mod n\n  const u1 = e.mul(sInv).umod(n)\n  const u2 = r.mul(sInv).umod(n)\n\n  // 1.4.5 Compute R = (xR, yR)\n  //               R = u1G + u2Q\n  const R = G.mulAdd(u1, Q, u2)\n\n  // 1.4.5 (cont.) Enforce R is not at infinity\n  if (R.isInfinity()) return false\n\n  // 1.4.6 Convert the field element R.x to an integer\n  const xR = R.x\n\n  // 1.4.7 Set v = xR mod n\n  const v = xR.umod(n)\n\n  // 1.4.8 If v = r, output \"valid\", and if v != r, output \"invalid\"\n  return v.eq(r)\n}\n\nmodule.exports = {\n  isPoint,\n  isPointCompressed,\n  isPrivate,\n  pointAdd,\n  pointAddScalar,\n  pointCompress,\n  pointFromScalar,\n  pointMultiply,\n  privateAdd,\n  privateSub,\n  sign,\n  signWithEntropy,\n  verify\n}\n","let Buffer = require('safe-buffer').Buffer\nlet bs58check = require('bs58check')\nlet crypto = require('./crypto')\nlet ecc = require('tiny-secp256k1')\nlet typeforce = require('typeforce')\nlet wif = require('wif')\n\nlet UINT256_TYPE = typeforce.BufferN(32)\nlet NETWORK_TYPE = typeforce.compile({\n  wif: typeforce.UInt8,\n  bip32: {\n    public: typeforce.UInt32,\n    private: typeforce.UInt32\n  }\n})\n\nlet BITCOIN = {\n  wif: 0x80,\n  bip32: {\n    public: 0x0488b21e,\n    private: 0x0488ade4\n  }\n}\n\nfunction BIP32 (d, Q, chainCode, network) {\n  typeforce(NETWORK_TYPE, network)\n\n  this.__d = d || null\n  this.__Q = Q || null\n\n  this.chainCode = chainCode\n  this.depth = 0\n  this.index = 0\n  this.network = network\n  this.parentFingerprint = 0x00000000\n}\n\nObject.defineProperty(BIP32.prototype, 'identifier', { get: function () { return crypto.hash160(this.publicKey) } })\nObject.defineProperty(BIP32.prototype, 'fingerprint', { get: function () { return this.identifier.slice(0, 4) } })\nObject.defineProperty(BIP32.prototype, 'privateKey', {\n  enumerable: false,\n  get: function () { return this.__d }\n})\nObject.defineProperty(BIP32.prototype, 'publicKey', { get: function () {\n  if (!this.__Q) this.__Q = ecc.pointFromScalar(this.__d, this.compressed)\n  return this.__Q\n}})\n\n// Private === not neutered\n// Public === neutered\nBIP32.prototype.isNeutered = function () {\n  return this.__d === null\n}\n\nBIP32.prototype.neutered = function () {\n  let neutered = fromPublicKey(this.publicKey, this.chainCode, this.network)\n  neutered.depth = this.depth\n  neutered.index = this.index\n  neutered.parentFingerprint = this.parentFingerprint\n  return neutered\n}\n\nBIP32.prototype.toBase58 = function () {\n  let network = this.network\n  let version = (!this.isNeutered()) ? network.bip32.private : network.bip32.public\n  let buffer = Buffer.allocUnsafe(78)\n\n  // 4 bytes: version bytes\n  buffer.writeUInt32BE(version, 0)\n\n  // 1 byte: depth: 0x00 for master nodes, 0x01 for level-1 descendants, ....\n  buffer.writeUInt8(this.depth, 4)\n\n  // 4 bytes: the fingerprint of the parent's key (0x00000000 if master key)\n  buffer.writeUInt32BE(this.parentFingerprint, 5)\n\n  // 4 bytes: child number. This is the number i in xi = xpar/i, with xi the key being serialized.\n  // This is encoded in big endian. (0x00000000 if master key)\n  buffer.writeUInt32BE(this.index, 9)\n\n  // 32 bytes: the chain code\n  this.chainCode.copy(buffer, 13)\n\n  // 33 bytes: the public key or private key data\n  if (!this.isNeutered()) {\n    // 0x00 + k for private keys\n    buffer.writeUInt8(0, 45)\n    this.privateKey.copy(buffer, 46)\n\n  // 33 bytes: the public key\n  } else {\n    // X9.62 encoding for public keys\n    this.publicKey.copy(buffer, 45)\n  }\n\n  return bs58check.encode(buffer)\n}\n\nBIP32.prototype.toWIF = function () {\n  if (!this.privateKey) throw new TypeError('Missing private key')\n  return wif.encode(this.network.wif, this.privateKey, true)\n}\n\nlet HIGHEST_BIT = 0x80000000\n\n// https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki#child-key-derivation-ckd-functions\nBIP32.prototype.derive = function (index) {\n  typeforce(typeforce.UInt32, index)\n\n  let isHardened = index >= HIGHEST_BIT\n  let data = Buffer.allocUnsafe(37)\n\n  // Hardened child\n  if (isHardened) {\n    if (this.isNeutered()) throw new TypeError('Missing private key for hardened child key')\n\n    // data = 0x00 || ser256(kpar) || ser32(index)\n    data[0] = 0x00\n    this.privateKey.copy(data, 1)\n    data.writeUInt32BE(index, 33)\n\n  // Normal child\n  } else {\n    // data = serP(point(kpar)) || ser32(index)\n    //      = serP(Kpar) || ser32(index)\n    this.publicKey.copy(data, 0)\n    data.writeUInt32BE(index, 33)\n  }\n\n  let I = crypto.hmacSHA512(this.chainCode, data)\n  let IL = I.slice(0, 32)\n  let IR = I.slice(32)\n\n  // if parse256(IL) >= n, proceed with the next value for i\n  if (!ecc.isPrivate(IL)) return this.derive(index + 1)\n\n  // Private parent key -> private child key\n  let hd\n  if (!this.isNeutered()) {\n    // ki = parse256(IL) + kpar (mod n)\n    let ki = ecc.privateAdd(this.privateKey, IL)\n\n    // In case ki == 0, proceed with the next value for i\n    if (ki == null) return this.derive(index + 1)\n\n    hd = fromPrivateKey(ki, IR, this.network)\n\n  // Public parent key -> public child key\n  } else {\n    // Ki = point(parse256(IL)) + Kpar\n    //    = G*IL + Kpar\n    let Ki = ecc.pointAddScalar(this.publicKey, IL, true)\n\n    // In case Ki is the point at infinity, proceed with the next value for i\n    if (Ki === null) return this.derive(index + 1)\n\n    hd = fromPublicKey(Ki, IR, this.network)\n  }\n\n  hd.depth = this.depth + 1\n  hd.index = index\n  hd.parentFingerprint = this.fingerprint.readUInt32BE(0)\n  return hd\n}\n\nlet UINT31_MAX = Math.pow(2, 31) - 1\nfunction UInt31 (value) {\n  return typeforce.UInt32(value) && value <= UINT31_MAX\n}\n\nBIP32.prototype.deriveHardened = function (index) {\n  typeforce(UInt31, index)\n\n  // Only derives hardened private keys by default\n  return this.derive(index + HIGHEST_BIT)\n}\n\nfunction BIP32Path (value) {\n  return typeforce.String(value) && value.match(/^(m\\/)?(\\d+'?\\/)*\\d+'?$/)\n}\n\nBIP32.prototype.derivePath = function (path) {\n  typeforce(BIP32Path, path)\n\n  let splitPath = path.split('/')\n  if (splitPath[0] === 'm') {\n    if (this.parentFingerprint) throw new TypeError('Expected master, got child')\n\n    splitPath = splitPath.slice(1)\n  }\n\n  return splitPath.reduce(function (prevHd, indexStr) {\n    let index\n    if (indexStr.slice(-1) === \"'\") {\n      index = parseInt(indexStr.slice(0, -1), 10)\n      return prevHd.deriveHardened(index)\n    } else {\n      index = parseInt(indexStr, 10)\n      return prevHd.derive(index)\n    }\n  }, this)\n}\n\nBIP32.prototype.sign = function (hash) {\n  return ecc.sign(hash, this.privateKey)\n}\n\nBIP32.prototype.verify = function (hash, signature) {\n  return ecc.verify(hash, this.publicKey, signature)\n}\n\nfunction fromBase58 (string, network) {\n  let buffer = bs58check.decode(string)\n  if (buffer.length !== 78) throw new TypeError('Invalid buffer length')\n  network = network || BITCOIN\n\n  // 4 bytes: version bytes\n  let version = buffer.readUInt32BE(0)\n  if (version !== network.bip32.private &&\n    version !== network.bip32.public) throw new TypeError('Invalid network version')\n\n  // 1 byte: depth: 0x00 for master nodes, 0x01 for level-1 descendants, ...\n  let depth = buffer[4]\n\n  // 4 bytes: the fingerprint of the parent's key (0x00000000 if master key)\n  let parentFingerprint = buffer.readUInt32BE(5)\n  if (depth === 0) {\n    if (parentFingerprint !== 0x00000000) throw new TypeError('Invalid parent fingerprint')\n  }\n\n  // 4 bytes: child number. This is the number i in xi = xpar/i, with xi the key being serialized.\n  // This is encoded in MSB order. (0x00000000 if master key)\n  let index = buffer.readUInt32BE(9)\n  if (depth === 0 && index !== 0) throw new TypeError('Invalid index')\n\n  // 32 bytes: the chain code\n  let chainCode = buffer.slice(13, 45)\n  let hd\n\n  // 33 bytes: private key data (0x00 + k)\n  if (version === network.bip32.private) {\n    if (buffer.readUInt8(45) !== 0x00) throw new TypeError('Invalid private key')\n    let k = buffer.slice(46, 78)\n\n    hd = fromPrivateKey(k, chainCode, network)\n\n  // 33 bytes: public key data (0x02 + X or 0x03 + X)\n  } else {\n    let X = buffer.slice(45, 78)\n\n    hd = fromPublicKey(X, chainCode, network)\n  }\n\n  hd.depth = depth\n  hd.index = index\n  hd.parentFingerprint = parentFingerprint\n  return hd\n}\n\nfunction fromPrivateKey (privateKey, chainCode, network) {\n  typeforce({\n    privateKey: UINT256_TYPE,\n    chainCode: UINT256_TYPE\n  }, { privateKey, chainCode })\n  network = network || BITCOIN\n\n  if (!ecc.isPrivate(privateKey)) throw new TypeError('Private key not in range [1, n)')\n  return new BIP32(privateKey, null, chainCode, network)\n}\n\nfunction fromPublicKey (publicKey, chainCode, network) {\n  typeforce({\n    publicKey: typeforce.BufferN(33),\n    chainCode: UINT256_TYPE\n  }, { publicKey, chainCode })\n  network = network || BITCOIN\n\n  // verify the X coordinate is a point on the curve\n  if (!ecc.isPoint(publicKey)) throw new TypeError('Point is not on the curve')\n  return new BIP32(null, publicKey, chainCode, network)\n}\n\nfunction fromSeed (seed, network) {\n  typeforce(typeforce.Buffer, seed)\n  if (seed.length < 16) throw new TypeError('Seed should be at least 128 bits')\n  if (seed.length > 64) throw new TypeError('Seed should be at most 512 bits')\n  network = network || BITCOIN\n\n  let I = crypto.hmacSHA512('Bitcoin seed', seed)\n  let IL = I.slice(0, 32)\n  let IR = I.slice(32)\n\n  return fromPrivateKey(IL, IR, network)\n}\n\nmodule.exports = {\n  fromBase58,\n  fromPrivateKey,\n  fromPublicKey,\n  fromSeed\n}\n","require('./_typed-array')('Uint8', 1, function (init) {\n  return function Uint8Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Copyright 2019 NEM\n *\n * Licensed under the BSD 2-Clause License (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://opensource.org/licenses/BSD-2-Clause\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nconst bip39 = __importStar(require(\"bip39\"));\nconst nem2_sdk_1 = require(\"nem2-sdk\");\n/**\n * Class `MnemonicPassPhrase` describes a mnemonic pass phrase generator\n * as defined by the Bitcoin BIP39 standard which can be found at following\n * URL:\n *\n *     https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki\n *\n * This class *uses* features provided by the `bitcoinjs/bip39` package\n * and therefor is licensed under the BSD-2 Clause License as mentioned\n * [here](https://github.com/bitcoinjs/bip39/blob/master/LICENSE).\n *\n * @see https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki\n * @see https://github.com/bitcoinjs/bip39\n * @since 0.1.0\n */\nclass MnemonicPassPhrase {\n    /**\n     * Create a `MnemonicPassPhrase` instance.\n     *\n     * @param plain {string}\n     */\n    constructor(/**\n                        * The mnemonic pass phrase (plain text).\n                        * @var {string}\n                        */ plain) {\n        this.plain = plain;\n    }\n    /**\n     * Create a random mnemonic pass phrase. Arguments to this method are\n     * all optional, default values are static variables of this class.\n     *\n     * This static method returns a sentence built following the Bitcoin\n     * BIP39 standard using the `bitcoinjs/bip39` library.\n     *\n     * @todo `strength` replace by `countWords` for higher level approach\n     *\n     * @param   language    {string}    (Optional) The language used for the wordlist.\n     * @param   strength    {number}    (Optional) Strength of mnemonic pass phrase (% 32 == 0).\n     * @param   rng         {function}  (Optional) Random Number Generator to be used.\n     * @return  {string}    Returns the mnemonic pass phrase in plain text format.\n     * @throws  {Error}     On unsupported `language` argument.\n     */\n    static createRandom(language = MnemonicPassPhrase.DEFAULT_LANGUAGE, strength = MnemonicPassPhrase.DEFAULT_STRENGTH, rng = MnemonicPassPhrase.CATAPULT_RNG) {\n        // check if `language` is supported or throw\n        MnemonicPassPhrase.assertLanguageSupported(language);\n        // check if `strength` is BIP39 compliant\n        if (strength % 32 !== 0 || strength < 128 || strength > 256) {\n            throw new Error('Invalid strength, must be multiple of 32 with: 128 >= strength <= 256.');\n        }\n        // set active wordlist by language\n        if (language !== MnemonicPassPhrase.DEFAULT_LANGUAGE) {\n            bip39.setDefaultWordlist(language);\n        }\n        return new MnemonicPassPhrase(bip39.generateMnemonic(strength, rng));\n    }\n    /**\n     * Convert an entropy value to a mnemonic pass phrase in plain text.\n     *\n     * If the `language` argument is ommited, the default\n     * language 'english' will be used.\n     *\n     * The `bitcoinjs/bip39` package's `entropyToMnemonic` function\n     * validates the entropy value by parsing it, then builds the mnemonic\n     * pass phrase by retrieving and joining words from the wordlist.\n     *\n     * @param   mnemonic    {string}    The mnemonic pass phrase to validate.\n     * @param   language    {string}    (Optional) The language used for the wordlist.\n     * @return  {string}    Returns the mnemonic pass phrase in plain text format.\n     * @throws  {Error}     On unsupported `language` argument.\n     */\n    static createFromEntropy(entropy, language = MnemonicPassPhrase.DEFAULT_LANGUAGE) {\n        // check if `language` is supported or throw\n        MnemonicPassPhrase.assertLanguageSupported(language);\n        return new MnemonicPassPhrase(bip39.entropyToMnemonic(entropy, bip39.wordlists[language]));\n    }\n    /**\n     * Assert whether `language` is a supported language string, or not.\n     *\n     * @internal\n     * @see https://github.com/bitcoinjs/bip39/tree/master/ts_src/wordlists\n     * @return  {boolean}   True for *supported languages*, never false.\n     * @throws  {Error}     On unsupported `language` argument.\n     */\n    static assertLanguageSupported(language) {\n        // check if `language` is supported or throw\n        if (!bip39.wordlists.hasOwnProperty(language)) {\n            throw new Error('Language \"' + language + '\" is not supported.');\n        }\n        return true;\n    }\n    /**\n     * Validate a mnemonic pass phrase with optional `language`.\n     *\n     * If the `language` argument is ommited, the default\n     * language 'english' will be used.\n     *\n     * The `bitcoinjs/bip39` package's `validateMnemonic` function\n     * checks the mnemonic pass phrase by internally converting\n     * to an entropy bytes array with `mnemonicToEntropy`.\n     *\n     * Validation steps include `size`, `checksum bits` and `checksum`\n     * validations.\n     *\n     * @param   mnemonic    {string}    The mnemonic pass phrase to validate.\n     * @param   language    {string}    (Optional) The language used for the wordlist.\n     * @return  {boolean}   True for *valid mnemonic*, False for *invalid mnemonic*.\n     * @throws  {Error}     On unsupported `language` argument.\n     */\n    isValid(language = MnemonicPassPhrase.DEFAULT_LANGUAGE) {\n        // check if `language` is supported or throw\n        MnemonicPassPhrase.assertLanguageSupported(language);\n        return bip39.validateMnemonic(this.plain, bip39.wordlists[language]);\n    }\n    /**\n     * Get the array representation for the mnemonic pass phrase.\n     *\n     * Words are split using a white-space character as a separator.\n     *\n     * @return  {string[]}  Array of plain text words\n     */\n    toArray() {\n        return this.plain.split(' ');\n    }\n    /**\n     * Convert a mnemonic to an **encrypted** hexadecimal seed.\n     *\n     * If the `password` argument is ommited, an empty password will be assumed.\n     *\n     * The `bitcoinjs/bip39` package's `mnemonicToSeedSync` function\n     * will first *normalize* the mnemonic pass phrase Buffer to\n     * [NFKD form](https://en.wikipedia.org/wiki/Unicode_equivalence#Normal_forms).\n     * Afterwards the buffer will be *salted* with the `password` (or empty) prepend\n     * by the string 'mnemonic'.\n     * In its last step, the function will then use PBKDF2 to derivate the password-\n     * protected hexadecimal seed from the salted buffer.\n     *\n     * @see https://en.wikipedia.org/wiki/Unicode_equivalence#Normal_forms\n     * @param   password    {string}\n     * @return  {Buffer}    Buffer containing bytes of the hexadecimal seed.\n     */\n    toSeed(password) {\n        return bip39.mnemonicToSeedSync(this.plain, password || '');\n    }\n    /**\n     * Converts a mnemonic to hexadecimal entropy (of `strength` bits).\n     *\n     * If the `language` argument is ommited, the default\n     * language 'english' will be used.\n     *\n     * The `bitcoinjs/bip39` package's `mnemonicToEntropy` function\n     * converts words into 11 bit binary strings, then validates the\n     * checksum and finally, returns the built entropy hexadecimal\n     * (of `strength` bits).\n     *\n     * It is not recommended to store the result of this function. Please,\n     * have a look at `mnemonicToSeed(m, pw)` instead.\n     *\n     * @see {MnemonicPassPhrase}#mnemonicToSeed\n     * @param   language    {string}    (Optional) The language used for the wordlist.\n     * @return  {string}    Returns the hexadecimal format of the entropy value.\n     * @throws  {Error}     On unsupported `language` argument.\n     */\n    toEntropy(language = MnemonicPassPhrase.DEFAULT_LANGUAGE) {\n        // check if `language` is supported or throw\n        MnemonicPassPhrase.assertLanguageSupported(language);\n        return bip39.mnemonicToEntropy(this.plain, bip39.wordlists[language]);\n    }\n}\n/**\n * Default wordlist language used.\n *\n * @see [List of Supported Languages](https://github.com/bitcoinjs/bip39/tree/master/ts_src/wordlists)\n * @var {string}\n */\nMnemonicPassPhrase.DEFAULT_LANGUAGE = 'english';\n/**\n * Default mnemonic strength.\n *\n * @see https://github.com/bitcoinjs/bip39/blob/master/ts_src/index.ts#L131\n * @see https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki#generating-the-mnemonic\n * @var {number}\n */\nMnemonicPassPhrase.DEFAULT_STRENGTH = 256;\n/**\n * Random number generator using `nacl_catapult`.\n *\n * Implicit conversion to `Buffer` is needed to comply\n * with `bitcoinjs/bip39`.\n *\n * @param   bytes   {number}    Number of bytes to generate.\n * @return  {Buffer}\n */\nMnemonicPassPhrase.CATAPULT_RNG = (bytes) => {\n    return Buffer.from(nem2_sdk_1.Crypto.randomBytes(bytes).buffer);\n};\nexports.MnemonicPassPhrase = MnemonicPassPhrase;\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  BASE_MAP.fill(255)\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Copyright 2019 NEM\n *\n * Licensed under the BSD 2-Clause License (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://opensource.org/licenses/BSD-2-Clause\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n// internal dependencies\nconst index_1 = require(\"../index\");\n/**\n * Enumeration `MACImpl` describes multiple message authentication\n * code implementations.\n *\n * @see https://github.com/nemtech/NIP/issues/12\n * @since 0.3.0\n */\nclass MACImpl {\n    /**\n     * No-Construct\n     */\n    constructor() { }\n    /**\n     * Create a message authentication code with given `type`.\n     * This will use either of HMAC or KMAC code generation.\n     *\n     * @access public\n     * @param   type        {MACType}\n     * @param   key         {Buffer}\n     * @param   data        {Buffer}\n     * @param   publicSalt  {Buffer|undefined}  (Optional)\n     */\n    static create(type, key, data, publicSalt = undefined) {\n        if (index_1.MACType.KMAC === type) {\n            // use KMAC256\n            return index_1.Cryptography.KMAC(key, data, publicSalt);\n        }\n        // by default uses HMAC with SHA512\n        return index_1.Cryptography.HMAC(key, data);\n    }\n}\nexports.MACImpl = MACImpl;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Copyright 2019 NEM\n *\n * Licensed under the BSD 2-Clause License (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://opensource.org/licenses/BSD-2-Clause\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * Enumeration `MACType` lists supported message authentication code\n * algorithms.\n *\n * @see https://github.com/nemtech/NIP/issues/12\n * @since 0.3.0\n */\nvar MACType;\n(function (MACType) {\n    MACType[MACType[\"HMAC\"] = 0] = \"HMAC\";\n    MACType[MACType[\"KMAC\"] = 1] = \"KMAC\";\n})(MACType = exports.MACType || (exports.MACType = {}));\n","var types = {\n  Array: function (value) { return value !== null && value !== undefined && value.constructor === Array },\n  Boolean: function (value) { return typeof value === 'boolean' },\n  Function: function (value) { return typeof value === 'function' },\n  Nil: function (value) { return value === undefined || value === null },\n  Number: function (value) { return typeof value === 'number' },\n  Object: function (value) { return typeof value === 'object' },\n  String: function (value) { return typeof value === 'string' },\n  '': function () { return true }\n}\n\n// TODO: deprecate\ntypes.Null = types.Nil\n\nfor (var typeName in types) {\n  types[typeName].toJSON = function (t) {\n    return t\n  }.bind(null, typeName)\n}\n\nmodule.exports = types\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Copyright 2019 NEM\n *\n * Licensed under the BSD 2-Clause License (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://opensource.org/licenses/BSD-2-Clause\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nconst nem2_sdk_1 = require(\"nem2-sdk\");\n// internal dependencies\nconst index_1 = require(\"../index\");\n/**\n * Class `Wallet` describes a hierarchical deterministic Wallet that\n * produces _Catapult-ED25519_-compatible accounts.\n *\n * This class provides with a bridge between BIP32-ED25519 compatible\n * key pairs and the nem2-sdk `Account` or `PublicAccount` objects.\n *\n * @example Usage of hierarchical deterministic wallets\n *\n * ```typescript\n * const xkey = ExtendedKey.createFromSeed('000102030405060708090a0b0c0d0e0f');\n * const wallet = new Wallet(xkey);\n *\n * // get master account\n * const masterAccount = wallet.getAccount();\n *\n * // get DEFAULT WALLET\n * const defaultWallet = wallet.getChildAccount();\n *\n * // derive specific child path\n * const childWallet = wallet.getChildAccount('m/44\\'/43\\'/0\\'/0\\'/0\\'');\n * ```\n *\n * @see https://github.com/nemtech/NIP/issues/12\n * @since 0.3.0\n */\nclass Wallet {\n    /**\n     * Construct a `Wallet` object from an extended key.\n     *\n     * @param   extendedKey   {ExtendedKey}\n     */\n    constructor(/**\n                 * The extended key.\n                 * @var {ExtendedKey}\n                 */ extendedKey) {\n        this.extendedKey = extendedKey;\n        /**\n         * Whether the wallet is read-only or not.\n         * @var {boolean}\n         */\n        this.readOnly = false;\n        // with an extended public key we have a read-only wallet\n        if (extendedKey.isNeutered()) {\n            this.readOnly = true;\n        }\n        this.publicKey = extendedKey.getPublicKey(index_1.KeyEncoding.ENC_BIN);\n    }\n    /**\n     * Return whether the current wallet is read-only, or not.\n     *\n     * In case of an initialization with an extended *public* key,\n     * the wallet is set to be read-only.\n     *\n     * @return  {boolean}\n     */\n    isReadOnly() {\n        return this.readOnly;\n    }\n    /**\n     * Get a nem2-sdk `Account` object with the extended\n     * key property.\n     *\n     * No derivation is done in this step. Derivation must be done either before\n     * calling this method or using the `getChildAccount` method.\n     *\n     * @param   networkType {NetworkType}   Which network type to use, defaults to MIJIN_TEST.\n     * @return  {Account}\n     * @throws  {Error}     On call of this method with a read-only wallet.\n     */\n    getAccount(networkType = nem2_sdk_1.NetworkType.MIJIN_TEST) {\n        // in case of read-only wallet, not possible to initiate Account\n        // only PublicAccount can be used, see getPublicAccount().\n        if (this.readOnly) {\n            throw new Error(\"Missing private key, please use method getPublicAccount().\");\n        }\n        // note: do not store private key in memory longer than function call\n        return nem2_sdk_1.Account.createFromPrivateKey(this.extendedKey.getPrivateKey(index_1.KeyEncoding.ENC_HEX), networkType);\n    }\n    /**\n     * Get a nem2-sdk `PublicAccount` object with the extended key property.\n     *\n     * No derivation is done in this step. Derivation must be done either before\n     * calling this method or using the `getChildPublicAccount` method.\n     *\n     * @param   networkType {NetworkType}   Which network type to use, defaults to MIJIN_TEST.\n     * @return  {PublicAccount}\n     */\n    getPublicAccount(networkType = nem2_sdk_1.NetworkType.MIJIN_TEST) {\n        return nem2_sdk_1.PublicAccount.createFromPublicKey(this.publicKey.toString('hex'), networkType);\n    }\n    /**\n     * Get a nem2-sdk `Account` object with the derived child account.\n     *\n     * In case no derivation path is provided, the default wallet path\n     * will be used, see `Wallet.DEFAULT_WALLET_PATH`.\n     *\n     * @see Wallet.DEFAULT_WALLET_PATH\n     * @param   path        {string}        Child derivation path, default to `Wallet.DEFAULT_WALLET_PATH`.\n     * @param   networkType {NetworkType}   Which network type to use, defaults to MIJIN_TEST.\n     * @return  {Account | PublicAccount}\n     * @throws  {Error}     On call of this method with a read-only wallet.\n     */\n    getChildAccount(path = Wallet.DEFAULT_WALLET_PATH, networkType = nem2_sdk_1.NetworkType.MIJIN_TEST) {\n        // in case of read-only wallet, get PublicAccount instance\n        if (this.readOnly) {\n            throw new Error(\"Missing private key, please use method getChildPublicAccount().\");\n        }\n        // child key derivation with `ExtendedKeyNode.derivePath()`\n        const childKeyNode = this.extendedKey.derivePath(path);\n        // non-read-only, get Account instance\n        return nem2_sdk_1.Account.createFromPrivateKey(childKeyNode.getPrivateKey(index_1.KeyEncoding.ENC_HEX), networkType);\n    }\n    /**\n     * Get a nem2-sdk `PublicAccount` object with the derived child account.\n     *\n     * In case no derivation path is provided, the default wallet path\n     * will be used, see `Wallet.DEFAULT_WALLET_PATH`.\n     *\n     * @see Wallet.DEFAULT_WALLET_PATH\n     * @param   path        {string}        Child derivation path, default to `Wallet.DEFAULT_WALLET_PATH`.\n     * @param   networkType {NetworkType}   Which network type to use, defaults to MIJIN_TEST.\n     * @return  {Account | PublicAccount}\n     */\n    getChildPublicAccount(path = Wallet.DEFAULT_WALLET_PATH, networkType = nem2_sdk_1.NetworkType.MIJIN_TEST) {\n        // child key derivation with `ExtendedKeyNode.derivePath()`\n        const childKeyNode = this.extendedKey.derivePath(path);\n        return nem2_sdk_1.PublicAccount.createFromPublicKey(childKeyNode.getPublicKey(index_1.KeyEncoding.ENC_HEX), networkType);\n    }\n}\n/**\n * The default wallet derivaton path.\n * @var {string}\n */\nWallet.DEFAULT_WALLET_PATH = 'm/44\\'/43\\'/0\\'/0\\'/0\\'';\nexports.Wallet = Wallet;\n","'use strict'\n\nvar createHash = require('create-hash')\nvar bs58checkBase = require('./base')\n\n// SHA256(SHA256(buffer))\nfunction sha256x2 (buffer) {\n  var tmp = createHash('sha256').update(buffer).digest()\n  return createHash('sha256').update(tmp).digest()\n}\n\nmodule.exports = bs58checkBase(sha256x2)\n","var ERRORS = require('./errors')\nvar NATIVE = require('./native')\n\n// short-hand\nvar tfJSON = ERRORS.tfJSON\nvar TfTypeError = ERRORS.TfTypeError\nvar TfPropertyTypeError = ERRORS.TfPropertyTypeError\nvar tfSubError = ERRORS.tfSubError\nvar getValueTypeName = ERRORS.getValueTypeName\n\nvar TYPES = {\n  arrayOf: function arrayOf (type, options) {\n    type = compile(type)\n    options = options || {}\n\n    function _arrayOf (array, strict) {\n      if (!NATIVE.Array(array)) return false\n      if (NATIVE.Nil(array)) return false\n      if (options.minLength !== undefined && array.length < options.minLength) return false\n      if (options.maxLength !== undefined && array.length > options.maxLength) return false\n      if (options.length !== undefined && array.length !== options.length) return false\n\n      return array.every(function (value, i) {\n        try {\n          return typeforce(type, value, strict)\n        } catch (e) {\n          throw tfSubError(e, i)\n        }\n      })\n    }\n    _arrayOf.toJSON = function () {\n      var str = '[' + tfJSON(type) + ']'\n      if (options.length !== undefined) {\n        str += '{' + options.length + '}'\n      } else if (options.minLength !== undefined || options.maxLength !== undefined) {\n        str += '{' +\n          (options.minLength === undefined ? 0 : options.minLength) + ',' +\n          (options.maxLength === undefined ? Infinity : options.maxLength) + '}'\n      }\n      return str\n    }\n\n    return _arrayOf\n  },\n\n  maybe: function maybe (type) {\n    type = compile(type)\n\n    function _maybe (value, strict) {\n      return NATIVE.Nil(value) || type(value, strict, maybe)\n    }\n    _maybe.toJSON = function () { return '?' + tfJSON(type) }\n\n    return _maybe\n  },\n\n  map: function map (propertyType, propertyKeyType) {\n    propertyType = compile(propertyType)\n    if (propertyKeyType) propertyKeyType = compile(propertyKeyType)\n\n    function _map (value, strict) {\n      if (!NATIVE.Object(value)) return false\n      if (NATIVE.Nil(value)) return false\n\n      for (var propertyName in value) {\n        try {\n          if (propertyKeyType) {\n            typeforce(propertyKeyType, propertyName, strict)\n          }\n        } catch (e) {\n          throw tfSubError(e, propertyName, 'key')\n        }\n\n        try {\n          var propertyValue = value[propertyName]\n          typeforce(propertyType, propertyValue, strict)\n        } catch (e) {\n          throw tfSubError(e, propertyName)\n        }\n      }\n\n      return true\n    }\n\n    if (propertyKeyType) {\n      _map.toJSON = function () {\n        return '{' + tfJSON(propertyKeyType) + ': ' + tfJSON(propertyType) + '}'\n      }\n    } else {\n      _map.toJSON = function () { return '{' + tfJSON(propertyType) + '}' }\n    }\n\n    return _map\n  },\n\n  object: function object (uncompiled) {\n    var type = {}\n\n    for (var typePropertyName in uncompiled) {\n      type[typePropertyName] = compile(uncompiled[typePropertyName])\n    }\n\n    function _object (value, strict) {\n      if (!NATIVE.Object(value)) return false\n      if (NATIVE.Nil(value)) return false\n\n      var propertyName\n\n      try {\n        for (propertyName in type) {\n          var propertyType = type[propertyName]\n          var propertyValue = value[propertyName]\n\n          typeforce(propertyType, propertyValue, strict)\n        }\n      } catch (e) {\n        throw tfSubError(e, propertyName)\n      }\n\n      if (strict) {\n        for (propertyName in value) {\n          if (type[propertyName]) continue\n\n          throw new TfPropertyTypeError(undefined, propertyName)\n        }\n      }\n\n      return true\n    }\n    _object.toJSON = function () { return tfJSON(type) }\n\n    return _object\n  },\n\n  anyOf: function anyOf () {\n    var types = [].slice.call(arguments).map(compile)\n\n    function _anyOf (value, strict) {\n      return types.some(function (type) {\n        try {\n          return typeforce(type, value, strict)\n        } catch (e) {\n          return false\n        }\n      })\n    }\n    _anyOf.toJSON = function () { return types.map(tfJSON).join('|') }\n\n    return _anyOf\n  },\n\n  allOf: function allOf () {\n    var types = [].slice.call(arguments).map(compile)\n\n    function _allOf (value, strict) {\n      return types.every(function (type) {\n        try {\n          return typeforce(type, value, strict)\n        } catch (e) {\n          return false\n        }\n      })\n    }\n    _allOf.toJSON = function () { return types.map(tfJSON).join(' & ') }\n\n    return _allOf\n  },\n\n  quacksLike: function quacksLike (type) {\n    function _quacksLike (value) {\n      return type === getValueTypeName(value)\n    }\n    _quacksLike.toJSON = function () { return type }\n\n    return _quacksLike\n  },\n\n  tuple: function tuple () {\n    var types = [].slice.call(arguments).map(compile)\n\n    function _tuple (values, strict) {\n      if (NATIVE.Nil(values)) return false\n      if (NATIVE.Nil(values.length)) return false\n      if (strict && (values.length !== types.length)) return false\n\n      return types.every(function (type, i) {\n        try {\n          return typeforce(type, values[i], strict)\n        } catch (e) {\n          throw tfSubError(e, i)\n        }\n      })\n    }\n    _tuple.toJSON = function () { return '(' + types.map(tfJSON).join(', ') + ')' }\n\n    return _tuple\n  },\n\n  value: function value (expected) {\n    function _value (actual) {\n      return actual === expected\n    }\n    _value.toJSON = function () { return expected }\n\n    return _value\n  }\n}\n\n// TODO: deprecate\nTYPES.oneOf = TYPES.anyOf\n\nfunction compile (type) {\n  if (NATIVE.String(type)) {\n    if (type[0] === '?') return TYPES.maybe(type.slice(1))\n\n    return NATIVE[type] || TYPES.quacksLike(type)\n  } else if (type && NATIVE.Object(type)) {\n    if (NATIVE.Array(type)) {\n      if (type.length !== 1) throw new TypeError('Expected compile() parameter of type Array of length 1')\n      return TYPES.arrayOf(type[0])\n    }\n\n    return TYPES.object(type)\n  } else if (NATIVE.Function(type)) {\n    return type\n  }\n\n  return TYPES.value(type)\n}\n\nfunction typeforce (type, value, strict, surrogate) {\n  if (NATIVE.Function(type)) {\n    if (type(value, strict)) return true\n\n    throw new TfTypeError(surrogate || type, value)\n  }\n\n  // JIT\n  return typeforce(compile(type), value, strict)\n}\n\n// assign types to typeforce function\nfor (var typeName in NATIVE) {\n  typeforce[typeName] = NATIVE[typeName]\n}\n\nfor (typeName in TYPES) {\n  typeforce[typeName] = TYPES[typeName]\n}\n\nvar EXTRA = require('./extra')\nfor (typeName in EXTRA) {\n  typeforce[typeName] = EXTRA[typeName]\n}\n\ntypeforce.compile = compile\ntypeforce.TfTypeError = TfTypeError\ntypeforce.TfPropertyTypeError = TfPropertyTypeError\n\nmodule.exports = typeforce\n","let createHash = require('create-hash')\nlet createHmac = require('create-hmac')\n\nfunction hash160 (buffer) {\n  const sha256Hash = createHash('sha256').update(buffer).digest()\n  try {\n    return createHash('rmd160').update(sha256Hash).digest()\n  } catch (err) {\n    return createHash('ripemd160').update(sha256Hash).digest()\n  }\n}\n\nfunction hmacSHA512 (key, data) {\n  return createHmac('sha512', key).update(data).digest()\n}\n\nmodule.exports = { hash160, hmacSHA512 }\n","var native = require('./native')\n\nfunction getTypeName (fn) {\n  return fn.name || fn.toString().match(/function (.*?)\\s*\\(/)[1]\n}\n\nfunction getValueTypeName (value) {\n  return native.Nil(value) ? '' : getTypeName(value.constructor)\n}\n\nfunction getValue (value) {\n  if (native.Function(value)) return ''\n  if (native.String(value)) return JSON.stringify(value)\n  if (value && native.Object(value)) return ''\n  return value\n}\n\nfunction captureStackTrace (e, t) {\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(e, t)\n  }\n}\n\nfunction tfJSON (type) {\n  if (native.Function(type)) return type.toJSON ? type.toJSON() : getTypeName(type)\n  if (native.Array(type)) return 'Array'\n  if (type && native.Object(type)) return 'Object'\n\n  return type !== undefined ? type : ''\n}\n\nfunction tfErrorString (type, value, valueTypeName) {\n  var valueJson = getValue(value)\n\n  return 'Expected ' + tfJSON(type) + ', got' +\n    (valueTypeName !== '' ? ' ' + valueTypeName : '') +\n    (valueJson !== '' ? ' ' + valueJson : '')\n}\n\nfunction TfTypeError (type, value, valueTypeName) {\n  valueTypeName = valueTypeName || getValueTypeName(value)\n  this.message = tfErrorString(type, value, valueTypeName)\n\n  captureStackTrace(this, TfTypeError)\n  this.__type = type\n  this.__value = value\n  this.__valueTypeName = valueTypeName\n}\n\nTfTypeError.prototype = Object.create(Error.prototype)\nTfTypeError.prototype.constructor = TfTypeError\n\nfunction tfPropertyErrorString (type, label, name, value, valueTypeName) {\n  var description = '\" of type '\n  if (label === 'key') description = '\" with key type '\n\n  return tfErrorString('property \"' + tfJSON(name) + description + tfJSON(type), value, valueTypeName)\n}\n\nfunction TfPropertyTypeError (type, property, label, value, valueTypeName) {\n  if (type) {\n    valueTypeName = valueTypeName || getValueTypeName(value)\n    this.message = tfPropertyErrorString(type, label, property, value, valueTypeName)\n  } else {\n    this.message = 'Unexpected property \"' + property + '\"'\n  }\n\n  captureStackTrace(this, TfTypeError)\n  this.__label = label\n  this.__property = property\n  this.__type = type\n  this.__value = value\n  this.__valueTypeName = valueTypeName\n}\n\nTfPropertyTypeError.prototype = Object.create(Error.prototype)\nTfPropertyTypeError.prototype.constructor = TfTypeError\n\nfunction tfCustomError (expected, actual) {\n  return new TfTypeError(expected, {}, actual)\n}\n\nfunction tfSubError (e, property, label) {\n  // sub child?\n  if (e instanceof TfPropertyTypeError) {\n    property = property + '.' + e.__property\n\n    e = new TfPropertyTypeError(\n      e.__type, property, e.__label, e.__value, e.__valueTypeName\n    )\n\n  // child?\n  } else if (e instanceof TfTypeError) {\n    e = new TfPropertyTypeError(\n      e.__type, property, label, e.__value, e.__valueTypeName\n    )\n  }\n\n  captureStackTrace(e)\n  return e\n}\n\nmodule.exports = {\n  TfTypeError: TfTypeError,\n  TfPropertyTypeError: TfPropertyTypeError,\n  tfCustomError: tfCustomError,\n  tfSubError: tfSubError,\n  tfJSON: tfJSON,\n  getValueTypeName: getValueTypeName\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Copyright 2019 NEM\n *\n * Licensed under the BSD 2-Clause License (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://opensource.org/licenses/BSD-2-Clause\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n// internal dependencies\nconst index_1 = require(\"../index\");\n/**\n * Class `Network` describes an extended key prefix of 4 bytes. This object\n * is defined by `public` and `private` fields containing the unsigned\n * integer value of the prefix.\n *\n * For the BITCOIN protocol, the prefixes result to `xprv` and `xpub`\n * for the mainnet network.\n *\n * For the CATAPULT protocol, we will be using the same prefixes and\n * extended key sizes and formats.\n *\n * @see https://github.com/bitcoinjs/bip32/blob/master/src/bip32.js#L19\n * @see https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n * @see https://github.com/bitcoinjs/bip32\n * @see https://github.com/nemtech/NIP/issues/12\n * @since 0.1.0\n */\nclass Network {\n    /**\n     * Construct an `Network` object out of its' base58 payload.\n     *\n     * Result in Base58 notation to `xpub` and `xprv`.\n     *\n     * @param   base58Payload   {string}\n     */\n    constructor(/**\n                 * Prefix for extended public key (4 bytes unsigned integer)\n                 * @var {number}\n                 */ publicKeyPrefix, \n    /**\n     * Prefix for extended private key (4 bytes unsigned integer)\n     * @var {number}\n     */\n    privateKeyPrefix, \n    /**\n     * The ellyptic curve algorithm\n     * @var {CurveAlgorithm}\n     */\n    curve = index_1.CurveAlgorithm.secp256k1) {\n        this.publicKeyPrefix = publicKeyPrefix;\n        this.privateKeyPrefix = privateKeyPrefix;\n        this.curve = curve;\n    }\n}\n/**\n * BITCOIN protocol extended key prefixes\n *\n * Result in Base58 notation to `xpub` and `xprv`.\n *\n * @see https://github.com/bitcoinjs/bip32/blob/master/src/bip32.js#L19\n * @var {Network}\n */\nNetwork.BITCOIN = new Network(0x0488b21e, 0x0488ade4, index_1.CurveAlgorithm.secp256k1);\n/**\n * CATAPULT protocol extended key prefixes\n *\n * Result in Base58 notation to `xpub` and `xprv`.\n *\n * @var {Network}\n */\nNetwork.CATAPULT = new Network(0x0488b21e, 0x0488ade4, index_1.CurveAlgorithm.ed25519);\nexports.Network = Network;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// browserify by default only pulls in files that are hard coded in requires\n// In order of last to first in this file, the default wordlist will be chosen\n// based on what is present. (Bundles may remove wordlists they don't need)\nconst wordlists = {};\nexports.wordlists = wordlists;\nlet _default;\nexports._default = _default;\ntry {\n    exports._default = _default = require('./wordlists/chinese_simplified.json');\n    wordlists.chinese_simplified = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/chinese_traditional.json');\n    wordlists.chinese_traditional = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/korean.json');\n    wordlists.korean = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/french.json');\n    wordlists.french = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/italian.json');\n    wordlists.italian = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/spanish.json');\n    wordlists.spanish = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/japanese.json');\n    wordlists.japanese = _default;\n    wordlists.JA = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/english.json');\n    wordlists.english = _default;\n    wordlists.EN = _default;\n}\ncatch (err) { }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Copyright 2019 NEM\n *\n * Licensed under the BSD 2-Clause License (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://opensource.org/licenses/BSD-2-Clause\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nconst bs58check = require('bs58check');\nconst createHash = require('create-hash');\nconst createHmac = require('create-hmac');\n// internal dependencies\nconst index_1 = require(\"../../index\");\n/**\n * Implementation of CKDPriv() function as described in SLIP-10\n * for multi-curve BIP32 compatibility with ED25519.\n *\n * Difference to BIP32:\n *  - Using 64-bytes master private key instead 32-bytes.\n *\n * @see https://cardanolaunch.com/assets/Ed25519_BIP.pdf\n * @see https://github.com/satoshilabs/slips/blob/master/slip-0010.md\n * @see https://github.com/alepop/ed25519-hd-key/blob/master/src/index.ts#L36\n * @param   parent      {NodeEd25519}\n * @param   index       {number}\n * @param   macType     {MACType}\n * @return  {NodeEd25519}\n */\nconst CKDPriv = (parent, index, macType = index_1.MACType.HMAC) => {\n    const indexBuffer = Buffer.allocUnsafe(4);\n    indexBuffer.writeUInt32BE(index, 0);\n    // 0x00 || privateKey || index\n    const data = Buffer.concat([Buffer.alloc(1, 0), parent.privateKey, indexBuffer]);\n    // derive with said `macType` MAC algorithm\n    const I = index_1.MACImpl.create(macType, parent.chainCode, data);\n    // const I = createHmac('sha512', parent.chainCode)\n    //     .update(data)\n    //     .digest();\n    const IL = I.slice(0, 32);\n    const IR = I.slice(32);\n    // IL = privateKey ; IR = chainCode\n    return new NodeEd25519(IL, undefined, IR);\n};\n/**\n * Class `NodeEd25519` describes a hyper-deterministic BIP32 node\n * implementation, compatible with ed25519 EC-curve as described in\n * following paper :\n *\n *     https://cardanolaunch.com/assets/Ed25519_BIP.pdf\n *\n * It is an implementation of BIP32 that is adapted to work with\n * ED25519 ellyptic curve keys rather than secp256k1 keys.\n *\n * This class *uses* features provided by the `bitcoinjs/bip32` package\n * and therefor is licensed under the BSD-2 Clause License as mentioned\n * [here](https://github.com/bitcoinjs/bip32/blob/master/LICENSE).\n *\n * @see https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n * @see https://github.com/satoshilabs/slips/blob/master/slip-0010.md\n * @see https://github.com/bitcoinjs/bip32\n * @see https://github.com/nemtech/NIP/issues/12\n * @since 0.2.0\n */\nclass NodeEd25519 extends index_1.DeterministicKey {\n    /**\n     * Create a hyper-deterministic ED25519 node from a\n     * binary seed.\n     *\n     * @see https://github.com/bitcoinjs/bip32/blob/master/src/bip32.js#L258\n     * @param   seed    {Buffer}\n     * @param   network {Network}\n     * @return  {NodeInterface}\n     */\n    static fromSeed(seed, network = index_1.Network.CATAPULT, macType = index_1.MACType.HMAC) {\n        if (seed.length < 16)\n            throw new TypeError('Seed should be at least 128 bits');\n        if (seed.length > 64)\n            throw new TypeError('Seed should be at most 512 bits');\n        // (1) Create KMAC seeded with `ed25519 seed`\n        const I = index_1.MACImpl.create(macType, Buffer.from('ed25519 seed', 'utf8'), seed);\n        // const hmac = createHmac('sha512', Buffer.from('ed25519 seed', 'utf8'));\n        // const I = hmac.update(seed).digest();\n        // (2) Split in 2 parts: privateKey and chainCode\n        const kL = I.slice(0, 32);\n        const kR = I.slice(32);\n        // kL = privateKey ; kR = chainCode\n        return new NodeEd25519(kL, undefined, kR, network);\n    }\n    /**\n     * Decode a base58 extended key payload into its'\n     * `NodeEd25519` object representation.\n     *\n     * This method parses the base58 binary data and\n     * uses read fields to initialize a BIP32-ED25519\n     * hyper-deterministic node.\n     *\n     * No ED25519 changes have been done here.\n     *\n     * @see https://github.com/bitcoinjs/bip32/blob/master/ts-src/bip32.ts#L286\n     * @param   inString    {string}    The base58 payload of the extended key.\n     * @param   network     {Network}   (Optional) The network of the key, default to `Network.CATAPULT`.\n     * @return  {NodeEd25519}\n     */\n    static fromBase58(inString, network = index_1.Network.CATAPULT) {\n        // decode base58\n        const buffer = bs58check.decode(inString);\n        if (buffer.length !== 78) {\n            throw new TypeError('Base58 payload must be exactly 78 bytes, but got: ' + buffer.length + ' bytes.');\n        }\n        // 4 bytes: version bytes\n        const version = buffer.readUInt32BE(0);\n        if (version !== index_1.Network.CATAPULT.privateKeyPrefix\n            && version !== index_1.Network.CATAPULT.publicKeyPrefix) {\n            throw new TypeError('Payload Version must be one of: ' + index_1.Network.CATAPULT.privateKeyPrefix\n                + ' or ' + index_1.Network.CATAPULT.publicKeyPrefix + '.');\n        }\n        // 1 byte: depth: 0x00 for master nodes, 0x01 for level-1 descendants, ...\n        const depth = buffer[4];\n        // 4 bytes: the fingerprint of the parent's key (0x00000000 if master key)\n        const parentFingerprint = buffer.readUInt32BE(5);\n        // if depth is 0, parentFingerprint must be 0x00000000 (master node)\n        if (depth === 0 && parentFingerprint !== 0x00000000) {\n            throw new TypeError('Expected master node but got child with parentFingerprint: ' + parentFingerprint + '.');\n        }\n        // 4 bytes: child number. This is the number i in xi = xpar/i, with xi the key being serialized.\n        // This is encoded in MSB order. (0x00000000 if master key)\n        const index = buffer.readUInt32BE(9);\n        // If depth is 0, index must also be 0 (master node)\n        if (depth === 0 && index !== 0) {\n            throw new TypeError('Expected index 0 with depth 0 but got index: ' + index + '.');\n        }\n        // 32 bytes: the chain code\n        const chainCode = buffer.slice(13, 45);\n        let hd;\n        if (version === index_1.Network.CATAPULT.privateKeyPrefix) {\n            // 33 bytes: private key data (0x00 + k)\n            if (buffer.readUInt8(45) !== 0x00) {\n                throw new TypeError('Private key must start be prepended by 0x00.');\n            }\n            // extract private key (32 bytes)\n            const k = buffer.slice(46, 78);\n            // k = privateKey (createFromPrivateKey)\n            hd = new NodeEd25519(k, undefined, chainCode, network, depth, index, parentFingerprint);\n        }\n        else {\n            // 33 bytes: public key data (0x02 + X or 0x03 + X)\n            // extract public key (33 bytes)\n            const X = buffer.slice(45, 78);\n            // X = publicKey\n            hd = new NodeEd25519(undefined, X, chainCode, network, depth, index, parentFingerprint);\n        }\n        return hd;\n    }\n    /**\n     * Getter for the `publicKey` of the key.\n     *\n     * @access public\n     * @return {Buffer}\n     */\n    get publicKey() {\n        if (this.getQ() !== undefined) {\n            return this.getQ();\n        }\n        // if the publicKey is not set, derive from private key\n        const extract = index_1.CatapultECC.extractPublicKey(this.privateKey, index_1.Cryptography.sha3Hash);\n        return Buffer.from(extract);\n    }\n    /**\n     * Get the neutered node.\n     *\n     * @access public\n     * @return {NodeInterface}\n     */\n    neutered() {\n        return new NodeEd25519(undefined, this.publicKey, this.chainCode, this.network, this.getDepth(), this.getIndex(), this.getParentFingerprint());\n    }\n    /**\n     * Generic child derivation.\n     *\n     * This method reads the derivation paths and uses `derive`\n     * and `deriveHardened` accordingly.\n     *\n     * Derivation paths starting with `m/` are only possible\n     * with master nodes (for example created from seed).\n     *\n     * @param   index   {number}\n     * @return  {NodeInterface}\n     */\n    derivePath(path) {\n        if (!this.isValidPath(path)) {\n            throw new TypeError('Invalid BIP32 derivation path provided.');\n        }\n        let splitPath = path.split('/');\n        // check whether current node is a master node,\n        // if not: \"m/\" derivation is not possible.\n        if (splitPath[0] === 'm' && this.getParentFingerprint()) {\n            throw new TypeError('Expected master node with \"m\" derivation, but got child with parentFingerprint.');\n        }\n        // drop first level path \"m\"\n        if (splitPath[0] === 'm') {\n            splitPath = splitPath.slice(1);\n        }\n        // apply derivation for each path level\n        return splitPath.reduce((prevHd, indexStr) => {\n            let index;\n            // Always use hardened key derivation\n            index = parseInt(indexStr.replace(/'/, ''), 10);\n            return prevHd.deriveHardened(index);\n        }, this);\n    }\n    /**\n     * Hardened child derivation (derives private key).\n     *\n     * @internal Do not use this method directly, please use the `derivePath()` method instead.\n     * @param   index   {number}\n     * @return  {NodeInterface}\n     */\n    deriveHardened(index) {\n        const UINT31_MAX = Math.pow(2, 31) - 1;\n        if (index > UINT31_MAX) {\n            throw new TypeError('Hardened derivation maximum index overflow.');\n        }\n        // Only derives hardened private keys by default\n        return this.derive(index + NodeEd25519.HIGHEST_BIT);\n    }\n    /**\n     * Derive a child node with `index`.\n     *\n     * When the node is *not neutered*, an extended private\n     * key will be created and when the node is *neutered*,\n     * an extended public key will be created.\n     *\n     * This method  is an overload of the `bitcoinjs/bip32`\n     * package's `derive` method adapted to use *our* child\n     * key derivation functions `CKDPriv` and `CKDPub`.\n     *\n     * @see https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki#child-key-derivation-ckd-functions\n     * @internal Do not use this method directly, please use the `derivePath()` method instead.\n     * @param   index   {number}\n     * @return  {NodeInterface}\n     */\n    derive(index) {\n        // check derivation validity\n        const isHardened = index >= NodeEd25519.HIGHEST_BIT;\n        if (isHardened && this.isNeutered()) {\n            throw new TypeError('Missing private key for hardened child key derivation.');\n        }\n        // Parent key is current node\n        const parentKey = this;\n        if (!this.isNeutered()) {\n            // (1) Private parent key -> private child key\n            // use ED25519-adapted child key derivation function\n            return CKDPriv(parentKey, index);\n        }\n        // (2) Public parent key -> public child key\n        // This is not possible with our implementation\n        throw new Error(\"Non-Hardened key derivation is not permitted with ED25519 curve.\");\n    }\n    /**\n     * Sign binary data with current node.\n     *\n     * Overloads the `bitcoinjs/bip32` method named `sign` in order to\n     * be ED25519 compliant and use `CatapultECC` with ed25519 instead\n     * of secp256k1.\n     *\n     * @see https://github.com/bitcoinjs/bip32/blob/master/ts-src/bip32.ts#L277\n     * @param   hash    {Buffer}    The binary data to sign.\n     * @param   length  {number}    (Optional) The byte size of the produced SHA3 hash, defaults to 64\n     * @return  {NodeInterface}\n     */\n    sign(hash) {\n        const secretKey = this.privateKey;\n        const hasher = index_1.Cryptography.createSha3Hasher(64); // 64=size\n        const signature = index_1.CatapultECC.sign(hash, this.publicKey, secretKey, hasher);\n        return Buffer.from(signature);\n    }\n    /**\n     * Verify a signature `signature` for data\n     * `hash` with the current node.\n     *\n     * Overloads the `bitcoinjs/bip32` method named `verify` in order to\n     * be ED25519 compliant and use `CatapultECC` with ed25519 instead\n     * of secp256k1.\n     *\n     * @see https://github.com/bitcoinjs/bip32/blob/master/ts-src/bip32.ts#L281\n     * @param   hash        {Buffer}    The binary data that was supposedly signed.\n     * @param   signature   {Buffer}    The signature binary data that needs to be verified.\n     * @return  {boolean}   Returns true for a valid signature, false otherwise.\n     */\n    verify(hash, signature) {\n        const length = signature.byteLength === 32 ? 32 : 64;\n        const hasher = index_1.Cryptography.createSha3Hasher(length);\n        return index_1.CatapultECC.verify(hash, this.publicKey, signature, hasher);\n    }\n    /**\n     * Validate a BIP32/BIP44 path by regular expression.\n     *\n     * @see https://github.com/bitcoinjs/bip32/blob/master/src/bip32.js#L26\n     * @param   path    {string}\n     * @return  {boolean}\n     */\n    isValidPath(path) {\n        return path.match(/^(m\\/)?(\\d+'?\\/)*\\d+'?$/) !== null;\n    }\n}\n/**\n * Hardened key derivation uses HIGHEST_BIT.\n * @var number\n */\nNodeEd25519.HIGHEST_BIT = 0x80000000;\nexports.NodeEd25519 = NodeEd25519;\n","var bs58check = require('bs58check')\n\nfunction decodeRaw (buffer, version) {\n  // check version only if defined\n  if (version !== undefined && buffer[0] !== version) throw new Error('Invalid network version')\n\n  // uncompressed\n  if (buffer.length === 33) {\n    return {\n      version: buffer[0],\n      privateKey: buffer.slice(1, 33),\n      compressed: false\n    }\n  }\n\n  // invalid length\n  if (buffer.length !== 34) throw new Error('Invalid WIF length')\n\n  // invalid compression flag\n  if (buffer[33] !== 0x01) throw new Error('Invalid compression flag')\n\n  return {\n    version: buffer[0],\n    privateKey: buffer.slice(1, 33),\n    compressed: true\n  }\n}\n\nfunction encodeRaw (version, privateKey, compressed) {\n  var result = new Buffer(compressed ? 34 : 33)\n\n  result.writeUInt8(version, 0)\n  privateKey.copy(result, 1)\n\n  if (compressed) {\n    result[33] = 0x01\n  }\n\n  return result\n}\n\nfunction decode (string, version) {\n  return decodeRaw(bs58check.decode(string), version)\n}\n\nfunction encode (version, privateKey, compressed) {\n  if (typeof version === 'number') return bs58check.encode(encodeRaw(version, privateKey, compressed))\n\n  return bs58check.encode(\n    encodeRaw(\n      version.version,\n      version.privateKey,\n      version.compressed\n    )\n  )\n}\n\nmodule.exports = {\n  decode: decode,\n  decodeRaw: decodeRaw,\n  encode: encode,\n  encodeRaw: encodeRaw\n}\n","import { ExtendedKey, MnemonicPassPhrase, Wallet } from \"nem2-hd-wallets\";\r\nexport var createMnemonic = function () {\r\n    var mnemonic = MnemonicPassPhrase.createRandom('english', 128);\r\n    return mnemonic.plain;\r\n};\r\nexport var createAccount = function (mnemonic) {\r\n    var PassPhrase = new MnemonicPassPhrase(mnemonic);\r\n    var bip32Seed = PassPhrase.toSeed();\r\n    var bip32Node = ExtendedKey.createFromSeed(buf2hex(bip32Seed));\r\n    var wallet = new Wallet(bip32Node);\r\n    var account = wallet.getAccount();\r\n    return account;\r\n};\r\nexport var randomMnemonicWord = function (mnemonic) {\r\n    var numberArr = [];\r\n    var randomWord = [];\r\n    for (var i = 0; i < mnemonic.length; i++) {\r\n        var randomNum_1 = checkRandomArr(numberArr, mnemonic);\r\n        numberArr.push(randomNum_1);\r\n        randomWord.push(mnemonic[randomNum_1]);\r\n    }\r\n    return randomWord;\r\n};\r\nfunction checkRandomArr(arr, mnemonic) {\r\n    var mnemonicNum = randomNum(mnemonic);\r\n    if (arr.includes(mnemonicNum)) {\r\n        return checkRandomArr(arr, mnemonic);\r\n    }\r\n    else {\r\n        return mnemonicNum;\r\n    }\r\n}\r\nfunction randomNum(mnemonic) {\r\n    return Math.floor(Math.random() * (mnemonic.length));\r\n}\r\nfunction buf2hex(buffer) {\r\n    // buffer is an ArrayBuffer\r\n    // create a byte array (Uint8Array) that we can use to read the array buffer\r\n    var byteArray = new Uint8Array(buffer);\r\n    // for each element, we want to get its two-digit hexadecimal representation\r\n    var hexParts = [];\r\n    for (var i = 0; i < byteArray.length; i++) {\r\n        // convert value to hexadecimal\r\n        var hex = byteArray[i].toString(16);\r\n        // pad with zeros to length 2\r\n        var paddedHex = ('00' + hex).slice(-2);\r\n        // push to array\r\n        hexParts.push(paddedHex);\r\n    }\r\n    // join all the hex values of the elements into a single string\r\n    return hexParts.join('');\r\n}\r\n//# sourceMappingURL=mnemonicUtil.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Copyright 2019 NEM\n *\n * Licensed under the BSD 2-Clause License (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://opensource.org/licenses/BSD-2-Clause\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nconst bs58check = require('bs58check');\n// internal dependencies\nconst index_1 = require(\"../../index\");\n/**\n * Class `DeterministicKey` describes hierarchical deterministic\n * keys that are compatible with the `bitcoinjs/bip32` implementation.\n *\n * This class is used to provide with compatibility for both schemes:\n * BIP32 and NIP6.\n *\n * @see https://github.com/nemtech/NIP/issues/12\n * @since 0.2.0\n */\nclass DeterministicKey {\n    /**\n     * Construct a `NodeEd25519` object.\n     *\n     * @param ___D      {Buffer|undefined}  The private key of the node.\n     * @param ___Q      {Buffer|undefined}  The public key of the node.\n     * @param chainCode {Buffer}            The chain code of the node (32 bytes).\n     * @param network   {Network}           The network of the node, defaults to `Network.CATAPULT`.\n     * @param ___DEPTH  {number}            The depth of the node (0 for master).\n     * @param ___INDEX  {number}            The account index (0 for master).\n     * @param ___PARENT_FINGERPRINT     {number}    The parent fingerprint (0x00000000 for master)\n     */\n    constructor(__D, // private Key\n    __Q, // public Key\n    chainCode, network = index_1.Network.CATAPULT, __DEPTH = 0, __INDEX = 0, __PARENT_FINGERPRINT = 0x00000000) {\n        this.__D = __D;\n        this.__Q = __Q;\n        this.chainCode = chainCode;\n        this.network = network;\n        this.__DEPTH = __DEPTH;\n        this.__INDEX = __INDEX;\n        this.__PARENT_FINGERPRINT = __PARENT_FINGERPRINT;\n    }\n    /// end-region: Abstract methods\n    /**\n     * Getter for the `depth` of the key.\n     *\n     * @access private\n     * @return {number}\n     */\n    get depth() {\n        return this.__DEPTH;\n    }\n    /**\n     * Getter for the `index` (account index) of the key.\n     *\n     * @access private\n     * @return {number}\n     */\n    get index() {\n        return this.__INDEX;\n    }\n    /**\n     * Getter for the `parentFingerprint` parent fingerprint of the key.\n     *\n     * @access private\n     * @return {number}\n     */\n    get parentFingerprint() {\n        return this.__PARENT_FINGERPRINT;\n    }\n    /**\n     * Getter for the `privateKey` of the key.\n     *\n     * @access public\n     * @return {Buffer}\n     */\n    get privateKey() {\n        if (!this.__D) {\n            throw new Error('Missing private key.');\n        }\n        return this.__D;\n    }\n    /**\n     * Getter for the `identifier` of the key.\n     *\n     * The identifier is build as follows:\n     * - Step 1: Sha3-256 of the public key\n     * - Step 2: RIPEMD160 of the sha3 hash\n     *\n     * @access public\n     * @return {Buffer}\n     */\n    get identifier() {\n        return index_1.Cryptography.hash160(this.publicKey);\n    }\n    /**\n     * Getter for the `fingerprint` of the key.\n     *\n     * The fingerprint are the first 4 bytes of the\n     * identifier of the key.\n     *\n     * @access public\n     * @return {Buffer}\n     */\n    get fingerprint() {\n        return this.identifier.slice(0, 4);\n    }\n    /**\n     * Return whether the node is neutered or not.\n     *\n     * Neutered keys = Extended Public Keys\n     * Non-Neutered keys = Extended Private Keys\n     *\n     * @access public\n     * @return {Buffer}\n     */\n    isNeutered() {\n        return this.__D === undefined;\n    }\n    /**\n     * Getter for private field `__D`.\n     *\n     * This method is added to explicitely expose the\n     * `__D` field to allow sub-classes to make\n     * use of it.\n     *\n     * The `__D` field represents the private key.\n     *\n     * @access  public\n     * @return  {Buffer}\n     */\n    getD() {\n        return this.__D;\n    }\n    /**\n     * Getter for private field `__Q`.\n     *\n     * This method is added to explicitely expose the\n     * `__Q` field to allow sub-classes to make\n     * use of it.\n     *\n     * The `__Q` field represents the public key.\n     *\n     * @access  public\n     * @return  {Buffer}\n     */\n    getQ() {\n        return this.__Q;\n    }\n    /**\n     * Getter for private field `depth`.\n     *\n     * This method is added to explicitely expose the\n     * `depth` field to allow sub-classes to make\n     * use of it.\n     *\n     * @access  public\n     * @return  {Buffer}\n     */\n    getDepth() {\n        return this.depth;\n    }\n    /**\n     * Getter for private field `index`.\n     *\n     * This method is added to explicitely expose the\n     * `index` field to allow sub-classes to make\n     * use of it.\n     *\n     * @access  public\n     * @return  {Buffer}\n     */\n    getIndex() {\n        return this.index;\n    }\n    /**\n     * Getter for private field `parentFingerprint`.\n     *\n     * This method is added to explicitely expose the\n     * `parentFingerprint` field to allow sub-classes to make\n     * use of it.\n     *\n     * @access  public\n     * @return  {Buffer}\n     */\n    getParentFingerprint() {\n        return this.parentFingerprint;\n    }\n    /**\n     * Get the Base58 representation of said key.\n     *\n     * This method is modified to use the `Network` class to\n     * determine privateKey and publicKey prefixes (version field).\n     *\n     * The Base58 representation is laid on 78 bytes with following\n     * specification (with `||` concatenation operator) :\n     *\n     * `version || depth || parent || index || chain code || priv/pub`\n     *\n     * Private keys are prepended with `0x00`, public keys are encoded\n     * in X9.62 format.\n     *\n     * @see https://github.com/bitcoinjs/bip32/blob/master/src/bip32.js#L73\n     * @access  public\n     * @return  {string}\n     */\n    toBase58() {\n        // determine whether we create a XPRV or XPUB\n        const version = !this.isNeutered()\n            ? this.network.privateKeyPrefix\n            : this.network.publicKeyPrefix;\n        // prepare extended key buffer\n        const buffer = Buffer.allocUnsafe(78);\n        // 4 bytes: version bytes\n        buffer.writeUInt32BE(version, 0);\n        // 1 byte: depth: 0x00 for master nodes, 0x01 for level-1 descendants, ....\n        buffer.writeUInt8(this.depth, 4);\n        // 4 bytes: the fingerprint of the parent's key (0x00000000 if master key)\n        buffer.writeUInt32BE(this.parentFingerprint, 5);\n        // 4 bytes: child number. This is the number i in xi = xpar/i, with xi the key being serialized.\n        // This is encoded in big endian. (0x00000000 if master key)\n        buffer.writeUInt32BE(this.index, 9);\n        // 32 bytes: the chain code\n        this.chainCode.copy(buffer, 13);\n        // 33 bytes: the public key or private key data\n        if (!this.isNeutered()) {\n            // 0x00 + k for private keys\n            buffer.writeUInt8(0, 45);\n            this.privateKey.copy(buffer, 46);\n        }\n        else {\n            // X9.62 encoding for public keys\n            this.publicKey.copy(buffer, 45);\n        }\n        // return Base58 encoded buffer\n        return bs58check.encode(buffer);\n    }\n    //XXX hidden usage of toHex() ?\n    toWIF() {\n        throw new TypeError(\"Catapult BIP32 keys cannot be converted to WIF. Please use the toHex() method.\");\n    }\n}\nexports.DeterministicKey = DeterministicKey;\n","// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\n\nmodule.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {\n  var O = toObject(this);\n  var len = toLength(O.length);\n  var to = toAbsoluteIndex(target, len);\n  var from = toAbsoluteIndex(start, len);\n  var end = arguments.length > 2 ? arguments[2] : undefined;\n  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);\n  var inc = 1;\n  if (from < to && to < from + count) {\n    inc = -1;\n    from += count - 1;\n    to += count - 1;\n  }\n  while (count-- > 0) {\n    if (from in O) O[to] = O[from];\n    else delete O[to];\n    to += inc;\n    from += inc;\n  } return O;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Copyright 2019 Grégory Saive for NEM Foundation\n *\n * Licensed under the BSD 2-Clause License (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://opensource.org/licenses/BSD-2-Clause\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nvar CurveAlgorithm_1 = require(\"./src/CurveAlgorithm\");\nexports.CurveAlgorithm = CurveAlgorithm_1.CurveAlgorithm;\nvar MACType_1 = require(\"./src/MACType\");\nexports.MACType = MACType_1.MACType;\nvar MACImpl_1 = require(\"./src/MACImpl\");\nexports.MACImpl = MACImpl_1.MACImpl;\nvar KeyEncoding_1 = require(\"./src/KeyEncoding\");\nexports.KeyEncoding = KeyEncoding_1.KeyEncoding;\nvar Network_1 = require(\"./src/Network\");\nexports.Network = Network_1.Network;\nvar Cryptography_1 = require(\"./src/Cryptography\");\nexports.Cryptography = Cryptography_1.Cryptography;\nvar CatapultECC_1 = require(\"./src/CatapultECC\");\nexports.CatapultECC = CatapultECC_1.CatapultECC;\nvar DeterministicKey_1 = require(\"./src/Compat/DeterministicKey\");\nexports.DeterministicKey = DeterministicKey_1.DeterministicKey;\nvar NodeEd25519_1 = require(\"./src/Curves/NodeEd25519\");\nexports.NodeEd25519 = NodeEd25519_1.NodeEd25519;\nvar MnemonicPassPhrase_1 = require(\"./src/MnemonicPassPhrase\");\nexports.MnemonicPassPhrase = MnemonicPassPhrase_1.MnemonicPassPhrase;\nvar ExtendedKey_1 = require(\"./src/ExtendedKey\");\nexports.ExtendedKey = ExtendedKey_1.ExtendedKey;\nvar Wallet_1 = require(\"./src/Wallet\");\nexports.Wallet = Wallet_1.Wallet;\n","\"use strict\";\n/**\n * Copyright 2019 NEM\n *\n * Licensed under the BSD 2-Clause License (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://opensource.org/licenses/BSD-2-Clause\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst nem2_sdk_1 = require(\"nem2-sdk\");\nconst js_sha3_1 = require(\"js-sha3\");\nconst createHash = require('create-hash');\nconst createHmac = require('create-hmac');\nclass Cryptography {\n    /**\n     *\n     * @param buffer\n     */\n    static hash160(buffer) {\n        // step 1: SHA256(buffer)\n        const sha256Hash = createHash('sha256').update(buffer).digest();\n        // step 2: RIPEMD160(shaHash)\n        try {\n            return createHash('rmd160').update(sha256Hash).digest();\n        }\n        catch (err) {\n            return createHash('ripemd160').update(sha256Hash).digest();\n        }\n    }\n    /**\n     * Creates a Hash Message Authentication Code.\n     *\n     * This method uses SHA512 algorithm and `create-hmac`\n     * dependency for the MAC generation.\n     *\n     * @param   key     {Buffer}\n     * @param   data    {Buffer}\n     * @return  {Buffer}\n     */\n    static HMAC(key, data) {\n        return createHmac('sha512', key).update(data).digest();\n    }\n    /**\n     * Creates a Keccak Message Authentication Code.\n     *\n     * @internal This method is used internally for key derivation\n     * @param   key         {Buffer}\n     * @param   data        {Buffer}\n     * @param   publicSalt  {string}\n     * @return  {Buffer}\n     */\n    static KMAC(key, data, publicSalt) {\n        const hex = js_sha3_1.kmac256(key, data, 512, publicSalt || '');\n        return Buffer.from(hex, 'hex');\n    }\n    /**\n     * Calculates the hash of data.\n     * @param {Uint8Array} dest The computed hash destination.\n     * @param {Uint8Array} data The data to hash.\n     * @param {numeric} length The hash length in bytes.\n     */\n    static sha3Hash(dest, data, length = 64) {\n        nem2_sdk_1.SHA3Hasher.func(dest, data, length);\n        return dest;\n    }\n    /**\n     * Creates a SHA3 hasher object.\n     * @param {numeric} length The hash length in bytes.\n     * @returns {object} The hasher.\n     */\n    static createSha3Hasher(length = 64) {\n        return nem2_sdk_1.SHA3Hasher.createHasher(length);\n    }\n}\nexports.Cryptography = Cryptography;\n","\"use strict\";\n/**\n * Copyright 2019 NEM\n *\n * Licensed under the BSD 2-Clause License (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://opensource.org/licenses/BSD-2-Clause\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst nacl_catapult = __importStar(require(\"nem2-sdk\"));\nconst nem2_sdk_1 = require(\"nem2-sdk\");\nclass CatapultECC {\n    /**\n     *\n     * @param d\n     */\n    static clamp(d) {\n        d[0] &= 248;\n        d[31] &= 127;\n        d[31] |= 64;\n    }\n    /**\n     *\n     * @param sk\n     * @param hashfunc\n     */\n    static prepareForScalarMult(sk, hashfunc) {\n        const d = new Uint8Array(CatapultECC.HASH_SIZE);\n        hashfunc(d, sk);\n        CatapultECC.clamp(d);\n        return d;\n    }\n    static extractPublicKey(sk, hashfunc) {\n        const c = nacl_catapult;\n        const d = CatapultECC.prepareForScalarMult(sk, hashfunc);\n        const p = [c.gf(), c.gf(), c.gf(), c.gf()];\n        const pk = new Uint8Array(CatapultECC.KEY_SIZE);\n        c.scalarbase(p, d);\n        c.pack(pk, p);\n        return pk;\n    }\n    static sign(m, pk, sk, hasher) {\n        const c = nacl_catapult;\n        const d = new Uint8Array(CatapultECC.HASH_SIZE);\n        hasher.reset();\n        hasher.update(sk);\n        hasher.finalize(d);\n        CatapultECC.clamp(d);\n        const r = new Uint8Array(CatapultECC.HASH_SIZE);\n        hasher.reset();\n        hasher.update(d.subarray(CatapultECC.HALF_HASH_SIZE));\n        hasher.update(m);\n        hasher.finalize(r);\n        const p = [c.gf(), c.gf(), c.gf(), c.gf()];\n        const signature = new Uint8Array(CatapultECC.SIGNATURE_SIZE);\n        c.reduce(r);\n        c.scalarbase(p, r);\n        c.pack(signature, p);\n        const h = new Uint8Array(CatapultECC.HASH_SIZE);\n        hasher.reset();\n        hasher.update(signature.subarray(0, CatapultECC.HALF_SIGNATURE_SIZE));\n        hasher.update(pk);\n        hasher.update(m);\n        hasher.finalize(h);\n        c.reduce(h);\n        // muladd\n        const x = new Float64Array(CatapultECC.HASH_SIZE);\n        nem2_sdk_1.RawArray.copy(x, r, CatapultECC.HALF_HASH_SIZE);\n        for (let i = 0; i < CatapultECC.HALF_HASH_SIZE; ++i) {\n            for (let j = 0; j < CatapultECC.HALF_HASH_SIZE; ++j)\n                x[i + j] += h[i] * d[j];\n        }\n        c.modL(signature.subarray(CatapultECC.HALF_SIGNATURE_SIZE), x);\n        CatapultECC.encodedSChecker.requireValid(signature.subarray(CatapultECC.HALF_SIGNATURE_SIZE));\n        return signature;\n    }\n    static verify(pk, m, signature, hasher) {\n        // reject non canonical signature\n        if (!CatapultECC.encodedSChecker.isCanonical(signature.subarray(CatapultECC.HALF_SIGNATURE_SIZE)))\n            return false;\n        // reject weak (zero) public key\n        if (nem2_sdk_1.RawArray.isZeroFilled(pk))\n            return false;\n        const c = nacl_catapult;\n        const p = [c.gf(), c.gf(), c.gf(), c.gf()];\n        const q = [c.gf(), c.gf(), c.gf(), c.gf()];\n        if (c.unpackneg(q, pk))\n            return false;\n        const h = new Uint8Array(CatapultECC.HASH_SIZE);\n        hasher.reset();\n        hasher.update(signature.subarray(0, CatapultECC.HALF_SIGNATURE_SIZE));\n        hasher.update(pk);\n        hasher.update(m);\n        hasher.finalize(h);\n        c.reduce(h);\n        c.scalarmult(p, q, h);\n        const t = new Uint8Array(CatapultECC.SIGNATURE_SIZE);\n        c.scalarbase(q, signature.subarray(CatapultECC.HALF_SIGNATURE_SIZE));\n        c.add(p, q);\n        c.pack(t, p);\n        return 0 === c.crypto_verify_32(signature, 0, t, 0);\n    }\n    static deriveSharedKey(salt, sk, pk, hashfunc) {\n        const c = nacl_catapult;\n        const d = CatapultECC.prepareForScalarMult(sk, hashfunc);\n        // sharedKey = pack(p = d (derived from sk) * q (derived from pk))\n        const q = [c.gf(), c.gf(), c.gf(), c.gf()];\n        const p = [c.gf(), c.gf(), c.gf(), c.gf()];\n        const sharedKey = new Uint8Array(CatapultECC.KEY_SIZE);\n        c.unpackneg(q, pk);\n        c.scalarmult(p, q, d);\n        c.pack(sharedKey, p);\n        // salt the shared key\n        for (let i = 0; i < CatapultECC.KEY_SIZE; ++i)\n            sharedKey[i] ^= salt[i];\n        // return the hash of the result\n        const sharedKeyHash = new Uint8Array(CatapultECC.KEY_SIZE);\n        hashfunc(sharedKeyHash, sharedKey, CatapultECC.KEY_SIZE);\n        return sharedKeyHash;\n    }\n    static keyToUint8(key) {\n        const buffer = Buffer.from(key);\n        return Uint8Array.from(buffer);\n    }\n}\nCatapultECC.KEY_SIZE = 32;\nCatapultECC.SIGNATURE_SIZE = 64;\nCatapultECC.HALF_SIGNATURE_SIZE = CatapultECC.SIGNATURE_SIZE / 2;\nCatapultECC.HASH_SIZE = 64;\nCatapultECC.HALF_HASH_SIZE = CatapultECC.HASH_SIZE / 2;\n/**\n *\n */\nCatapultECC.encodedSChecker = (function () {\n    const Is_Reduced = 1;\n    const Is_Zero = 2;\n    function validateEncodedSPart(s) {\n        if (nem2_sdk_1.RawArray.isZeroFilled(s))\n            return Is_Zero | Is_Reduced;\n        const copy = new Uint8Array(CatapultECC.SIGNATURE_SIZE);\n        nem2_sdk_1.RawArray.copy(copy, s, CatapultECC.HALF_SIGNATURE_SIZE);\n        nacl_catapult.reduce(copy);\n        return nem2_sdk_1.RawArray.deepEqual(s, copy, CatapultECC.HALF_SIGNATURE_SIZE) ? Is_Reduced : 0;\n    }\n    return {\n        isCanonical: (s) => Is_Reduced === validateEncodedSPart(s),\n        requireValid: (s) => {\n            if (0 === (validateEncodedSPart(s) & Is_Reduced))\n                throw Error('S part of signature invalid');\n        }\n    };\n})();\nexports.CatapultECC = CatapultECC;\n","\"use strict\";\n/**\n * Copyright 2019 NEM\n *\n * Licensed under the BSD 2-Clause License (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://opensource.org/licenses/BSD-2-Clause\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Enum `KeyEncoding` describes available key encoding methods.\n *\n * @see https://github.com/nemtech/NIP/issues/12\n * @since 0.1.0\n */\nvar KeyEncoding;\n(function (KeyEncoding) {\n    KeyEncoding[KeyEncoding[\"ENC_HEX\"] = 0] = \"ENC_HEX\";\n    KeyEncoding[KeyEncoding[\"ENC_BIN\"] = 1] = \"ENC_BIN\";\n})(KeyEncoding = exports.KeyEncoding || (exports.KeyEncoding = {}));\n","'use strict';\nif (require('./_descriptors')) {\n  var LIBRARY = require('./_library');\n  var global = require('./_global');\n  var fails = require('./_fails');\n  var $export = require('./_export');\n  var $typed = require('./_typed');\n  var $buffer = require('./_typed-buffer');\n  var ctx = require('./_ctx');\n  var anInstance = require('./_an-instance');\n  var propertyDesc = require('./_property-desc');\n  var hide = require('./_hide');\n  var redefineAll = require('./_redefine-all');\n  var toInteger = require('./_to-integer');\n  var toLength = require('./_to-length');\n  var toIndex = require('./_to-index');\n  var toAbsoluteIndex = require('./_to-absolute-index');\n  var toPrimitive = require('./_to-primitive');\n  var has = require('./_has');\n  var classof = require('./_classof');\n  var isObject = require('./_is-object');\n  var toObject = require('./_to-object');\n  var isArrayIter = require('./_is-array-iter');\n  var create = require('./_object-create');\n  var getPrototypeOf = require('./_object-gpo');\n  var gOPN = require('./_object-gopn').f;\n  var getIterFn = require('./core.get-iterator-method');\n  var uid = require('./_uid');\n  var wks = require('./_wks');\n  var createArrayMethod = require('./_array-methods');\n  var createArrayIncludes = require('./_array-includes');\n  var speciesConstructor = require('./_species-constructor');\n  var ArrayIterators = require('./es6.array.iterator');\n  var Iterators = require('./_iterators');\n  var $iterDetect = require('./_iter-detect');\n  var setSpecies = require('./_set-species');\n  var arrayFill = require('./_array-fill');\n  var arrayCopyWithin = require('./_array-copy-within');\n  var $DP = require('./_object-dp');\n  var $GOPD = require('./_object-gopd');\n  var dP = $DP.f;\n  var gOPD = $GOPD.f;\n  var RangeError = global.RangeError;\n  var TypeError = global.TypeError;\n  var Uint8Array = global.Uint8Array;\n  var ARRAY_BUFFER = 'ArrayBuffer';\n  var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;\n  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';\n  var PROTOTYPE = 'prototype';\n  var ArrayProto = Array[PROTOTYPE];\n  var $ArrayBuffer = $buffer.ArrayBuffer;\n  var $DataView = $buffer.DataView;\n  var arrayForEach = createArrayMethod(0);\n  var arrayFilter = createArrayMethod(2);\n  var arraySome = createArrayMethod(3);\n  var arrayEvery = createArrayMethod(4);\n  var arrayFind = createArrayMethod(5);\n  var arrayFindIndex = createArrayMethod(6);\n  var arrayIncludes = createArrayIncludes(true);\n  var arrayIndexOf = createArrayIncludes(false);\n  var arrayValues = ArrayIterators.values;\n  var arrayKeys = ArrayIterators.keys;\n  var arrayEntries = ArrayIterators.entries;\n  var arrayLastIndexOf = ArrayProto.lastIndexOf;\n  var arrayReduce = ArrayProto.reduce;\n  var arrayReduceRight = ArrayProto.reduceRight;\n  var arrayJoin = ArrayProto.join;\n  var arraySort = ArrayProto.sort;\n  var arraySlice = ArrayProto.slice;\n  var arrayToString = ArrayProto.toString;\n  var arrayToLocaleString = ArrayProto.toLocaleString;\n  var ITERATOR = wks('iterator');\n  var TAG = wks('toStringTag');\n  var TYPED_CONSTRUCTOR = uid('typed_constructor');\n  var DEF_CONSTRUCTOR = uid('def_constructor');\n  var ALL_CONSTRUCTORS = $typed.CONSTR;\n  var TYPED_ARRAY = $typed.TYPED;\n  var VIEW = $typed.VIEW;\n  var WRONG_LENGTH = 'Wrong length!';\n\n  var $map = createArrayMethod(1, function (O, length) {\n    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);\n  });\n\n  var LITTLE_ENDIAN = fails(function () {\n    // eslint-disable-next-line no-undef\n    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;\n  });\n\n  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {\n    new Uint8Array(1).set({});\n  });\n\n  var toOffset = function (it, BYTES) {\n    var offset = toInteger(it);\n    if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');\n    return offset;\n  };\n\n  var validate = function (it) {\n    if (isObject(it) && TYPED_ARRAY in it) return it;\n    throw TypeError(it + ' is not a typed array!');\n  };\n\n  var allocate = function (C, length) {\n    if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {\n      throw TypeError('It is not a typed array constructor!');\n    } return new C(length);\n  };\n\n  var speciesFromList = function (O, list) {\n    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);\n  };\n\n  var fromList = function (C, list) {\n    var index = 0;\n    var length = list.length;\n    var result = allocate(C, length);\n    while (length > index) result[index] = list[index++];\n    return result;\n  };\n\n  var addGetter = function (it, key, internal) {\n    dP(it, key, { get: function () { return this._d[internal]; } });\n  };\n\n  var $from = function from(source /* , mapfn, thisArg */) {\n    var O = toObject(source);\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var iterFn = getIterFn(O);\n    var i, length, values, result, step, iterator;\n    if (iterFn != undefined && !isArrayIter(iterFn)) {\n      for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {\n        values.push(step.value);\n      } O = values;\n    }\n    if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);\n    for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {\n      result[i] = mapping ? mapfn(O[i], i) : O[i];\n    }\n    return result;\n  };\n\n  var $of = function of(/* ...items */) {\n    var index = 0;\n    var length = arguments.length;\n    var result = allocate(this, length);\n    while (length > index) result[index] = arguments[index++];\n    return result;\n  };\n\n  // iOS Safari 6.x fails here\n  var TO_LOCALE_BUG = !!Uint8Array && fails(function () { arrayToLocaleString.call(new Uint8Array(1)); });\n\n  var $toLocaleString = function toLocaleString() {\n    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);\n  };\n\n  var proto = {\n    copyWithin: function copyWithin(target, start /* , end */) {\n      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);\n    },\n    every: function every(callbackfn /* , thisArg */) {\n      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    fill: function fill(value /* , start, end */) { // eslint-disable-line no-unused-vars\n      return arrayFill.apply(validate(this), arguments);\n    },\n    filter: function filter(callbackfn /* , thisArg */) {\n      return speciesFromList(this, arrayFilter(validate(this), callbackfn,\n        arguments.length > 1 ? arguments[1] : undefined));\n    },\n    find: function find(predicate /* , thisArg */) {\n      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    findIndex: function findIndex(predicate /* , thisArg */) {\n      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    forEach: function forEach(callbackfn /* , thisArg */) {\n      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    indexOf: function indexOf(searchElement /* , fromIndex */) {\n      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    includes: function includes(searchElement /* , fromIndex */) {\n      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    join: function join(separator) { // eslint-disable-line no-unused-vars\n      return arrayJoin.apply(validate(this), arguments);\n    },\n    lastIndexOf: function lastIndexOf(searchElement /* , fromIndex */) { // eslint-disable-line no-unused-vars\n      return arrayLastIndexOf.apply(validate(this), arguments);\n    },\n    map: function map(mapfn /* , thisArg */) {\n      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    reduce: function reduce(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars\n      return arrayReduce.apply(validate(this), arguments);\n    },\n    reduceRight: function reduceRight(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars\n      return arrayReduceRight.apply(validate(this), arguments);\n    },\n    reverse: function reverse() {\n      var that = this;\n      var length = validate(that).length;\n      var middle = Math.floor(length / 2);\n      var index = 0;\n      var value;\n      while (index < middle) {\n        value = that[index];\n        that[index++] = that[--length];\n        that[length] = value;\n      } return that;\n    },\n    some: function some(callbackfn /* , thisArg */) {\n      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    sort: function sort(comparefn) {\n      return arraySort.call(validate(this), comparefn);\n    },\n    subarray: function subarray(begin, end) {\n      var O = validate(this);\n      var length = O.length;\n      var $begin = toAbsoluteIndex(begin, length);\n      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(\n        O.buffer,\n        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,\n        toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin)\n      );\n    }\n  };\n\n  var $slice = function slice(start, end) {\n    return speciesFromList(this, arraySlice.call(validate(this), start, end));\n  };\n\n  var $set = function set(arrayLike /* , offset */) {\n    validate(this);\n    var offset = toOffset(arguments[1], 1);\n    var length = this.length;\n    var src = toObject(arrayLike);\n    var len = toLength(src.length);\n    var index = 0;\n    if (len + offset > length) throw RangeError(WRONG_LENGTH);\n    while (index < len) this[offset + index] = src[index++];\n  };\n\n  var $iterators = {\n    entries: function entries() {\n      return arrayEntries.call(validate(this));\n    },\n    keys: function keys() {\n      return arrayKeys.call(validate(this));\n    },\n    values: function values() {\n      return arrayValues.call(validate(this));\n    }\n  };\n\n  var isTAIndex = function (target, key) {\n    return isObject(target)\n      && target[TYPED_ARRAY]\n      && typeof key != 'symbol'\n      && key in target\n      && String(+key) == String(key);\n  };\n  var $getDesc = function getOwnPropertyDescriptor(target, key) {\n    return isTAIndex(target, key = toPrimitive(key, true))\n      ? propertyDesc(2, target[key])\n      : gOPD(target, key);\n  };\n  var $setDesc = function defineProperty(target, key, desc) {\n    if (isTAIndex(target, key = toPrimitive(key, true))\n      && isObject(desc)\n      && has(desc, 'value')\n      && !has(desc, 'get')\n      && !has(desc, 'set')\n      // TODO: add validation descriptor w/o calling accessors\n      && !desc.configurable\n      && (!has(desc, 'writable') || desc.writable)\n      && (!has(desc, 'enumerable') || desc.enumerable)\n    ) {\n      target[key] = desc.value;\n      return target;\n    } return dP(target, key, desc);\n  };\n\n  if (!ALL_CONSTRUCTORS) {\n    $GOPD.f = $getDesc;\n    $DP.f = $setDesc;\n  }\n\n  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {\n    getOwnPropertyDescriptor: $getDesc,\n    defineProperty: $setDesc\n  });\n\n  if (fails(function () { arrayToString.call({}); })) {\n    arrayToString = arrayToLocaleString = function toString() {\n      return arrayJoin.call(this);\n    };\n  }\n\n  var $TypedArrayPrototype$ = redefineAll({}, proto);\n  redefineAll($TypedArrayPrototype$, $iterators);\n  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);\n  redefineAll($TypedArrayPrototype$, {\n    slice: $slice,\n    set: $set,\n    constructor: function () { /* noop */ },\n    toString: arrayToString,\n    toLocaleString: $toLocaleString\n  });\n  addGetter($TypedArrayPrototype$, 'buffer', 'b');\n  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');\n  addGetter($TypedArrayPrototype$, 'byteLength', 'l');\n  addGetter($TypedArrayPrototype$, 'length', 'e');\n  dP($TypedArrayPrototype$, TAG, {\n    get: function () { return this[TYPED_ARRAY]; }\n  });\n\n  // eslint-disable-next-line max-statements\n  module.exports = function (KEY, BYTES, wrapper, CLAMPED) {\n    CLAMPED = !!CLAMPED;\n    var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';\n    var GETTER = 'get' + KEY;\n    var SETTER = 'set' + KEY;\n    var TypedArray = global[NAME];\n    var Base = TypedArray || {};\n    var TAC = TypedArray && getPrototypeOf(TypedArray);\n    var FORCED = !TypedArray || !$typed.ABV;\n    var O = {};\n    var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];\n    var getter = function (that, index) {\n      var data = that._d;\n      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);\n    };\n    var setter = function (that, index, value) {\n      var data = that._d;\n      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;\n      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);\n    };\n    var addElement = function (that, index) {\n      dP(that, index, {\n        get: function () {\n          return getter(this, index);\n        },\n        set: function (value) {\n          return setter(this, index, value);\n        },\n        enumerable: true\n      });\n    };\n    if (FORCED) {\n      TypedArray = wrapper(function (that, data, $offset, $length) {\n        anInstance(that, TypedArray, NAME, '_d');\n        var index = 0;\n        var offset = 0;\n        var buffer, byteLength, length, klass;\n        if (!isObject(data)) {\n          length = toIndex(data);\n          byteLength = length * BYTES;\n          buffer = new $ArrayBuffer(byteLength);\n        } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n          buffer = data;\n          offset = toOffset($offset, BYTES);\n          var $len = data.byteLength;\n          if ($length === undefined) {\n            if ($len % BYTES) throw RangeError(WRONG_LENGTH);\n            byteLength = $len - offset;\n            if (byteLength < 0) throw RangeError(WRONG_LENGTH);\n          } else {\n            byteLength = toLength($length) * BYTES;\n            if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);\n          }\n          length = byteLength / BYTES;\n        } else if (TYPED_ARRAY in data) {\n          return fromList(TypedArray, data);\n        } else {\n          return $from.call(TypedArray, data);\n        }\n        hide(that, '_d', {\n          b: buffer,\n          o: offset,\n          l: byteLength,\n          e: length,\n          v: new $DataView(buffer)\n        });\n        while (index < length) addElement(that, index++);\n      });\n      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);\n      hide(TypedArrayPrototype, 'constructor', TypedArray);\n    } else if (!fails(function () {\n      TypedArray(1);\n    }) || !fails(function () {\n      new TypedArray(-1); // eslint-disable-line no-new\n    }) || !$iterDetect(function (iter) {\n      new TypedArray(); // eslint-disable-line no-new\n      new TypedArray(null); // eslint-disable-line no-new\n      new TypedArray(1.5); // eslint-disable-line no-new\n      new TypedArray(iter); // eslint-disable-line no-new\n    }, true)) {\n      TypedArray = wrapper(function (that, data, $offset, $length) {\n        anInstance(that, TypedArray, NAME);\n        var klass;\n        // `ws` module bug, temporarily remove validation length for Uint8Array\n        // https://github.com/websockets/ws/pull/645\n        if (!isObject(data)) return new Base(toIndex(data));\n        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n          return $length !== undefined\n            ? new Base(data, toOffset($offset, BYTES), $length)\n            : $offset !== undefined\n              ? new Base(data, toOffset($offset, BYTES))\n              : new Base(data);\n        }\n        if (TYPED_ARRAY in data) return fromList(TypedArray, data);\n        return $from.call(TypedArray, data);\n      });\n      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {\n        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);\n      });\n      TypedArray[PROTOTYPE] = TypedArrayPrototype;\n      if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;\n    }\n    var $nativeIterator = TypedArrayPrototype[ITERATOR];\n    var CORRECT_ITER_NAME = !!$nativeIterator\n      && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);\n    var $iterator = $iterators.values;\n    hide(TypedArray, TYPED_CONSTRUCTOR, true);\n    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);\n    hide(TypedArrayPrototype, VIEW, true);\n    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);\n\n    if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {\n      dP(TypedArrayPrototype, TAG, {\n        get: function () { return NAME; }\n      });\n    }\n\n    O[NAME] = TypedArray;\n\n    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);\n\n    $export($export.S, NAME, {\n      BYTES_PER_ELEMENT: BYTES\n    });\n\n    $export($export.S + $export.F * fails(function () { Base.of.call(TypedArray, 1); }), NAME, {\n      from: $from,\n      of: $of\n    });\n\n    if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);\n\n    $export($export.P, NAME, proto);\n\n    setSpecies(NAME);\n\n    $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });\n\n    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);\n\n    if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;\n\n    $export($export.P + $export.F * fails(function () {\n      new TypedArray(1).slice();\n    }), NAME, { slice: $slice });\n\n    $export($export.P + $export.F * (fails(function () {\n      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();\n    }) || !fails(function () {\n      TypedArrayPrototype.toLocaleString.call([1, 2]);\n    })), NAME, { toLocaleString: $toLocaleString });\n\n    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;\n    if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);\n  };\n} else module.exports = function () { /* empty */ };\n","'use strict';\nvar global = require('./_global');\nvar DESCRIPTORS = require('./_descriptors');\nvar LIBRARY = require('./_library');\nvar $typed = require('./_typed');\nvar hide = require('./_hide');\nvar redefineAll = require('./_redefine-all');\nvar fails = require('./_fails');\nvar anInstance = require('./_an-instance');\nvar toInteger = require('./_to-integer');\nvar toLength = require('./_to-length');\nvar toIndex = require('./_to-index');\nvar gOPN = require('./_object-gopn').f;\nvar dP = require('./_object-dp').f;\nvar arrayFill = require('./_array-fill');\nvar setToStringTag = require('./_set-to-string-tag');\nvar ARRAY_BUFFER = 'ArrayBuffer';\nvar DATA_VIEW = 'DataView';\nvar PROTOTYPE = 'prototype';\nvar WRONG_LENGTH = 'Wrong length!';\nvar WRONG_INDEX = 'Wrong index!';\nvar $ArrayBuffer = global[ARRAY_BUFFER];\nvar $DataView = global[DATA_VIEW];\nvar Math = global.Math;\nvar RangeError = global.RangeError;\n// eslint-disable-next-line no-shadow-restricted-names\nvar Infinity = global.Infinity;\nvar BaseBuffer = $ArrayBuffer;\nvar abs = Math.abs;\nvar pow = Math.pow;\nvar floor = Math.floor;\nvar log = Math.log;\nvar LN2 = Math.LN2;\nvar BUFFER = 'buffer';\nvar BYTE_LENGTH = 'byteLength';\nvar BYTE_OFFSET = 'byteOffset';\nvar $BUFFER = DESCRIPTORS ? '_b' : BUFFER;\nvar $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;\nvar $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;\n\n// IEEE754 conversions based on https://github.com/feross/ieee754\nfunction packIEEE754(value, mLen, nBytes) {\n  var buffer = new Array(nBytes);\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;\n  var i = 0;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  var e, m, c;\n  value = abs(value);\n  // eslint-disable-next-line no-self-compare\n  if (value != value || value === Infinity) {\n    // eslint-disable-next-line no-self-compare\n    m = value != value ? 1 : 0;\n    e = eMax;\n  } else {\n    e = floor(log(value) / LN2);\n    if (value * (c = pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * pow(2, eBias - 1) * pow(2, mLen);\n      e = 0;\n    }\n  }\n  for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);\n  e = e << mLen | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);\n  buffer[--i] |= s * 128;\n  return buffer;\n}\nfunction unpackIEEE754(buffer, mLen, nBytes) {\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = eLen - 7;\n  var i = nBytes - 1;\n  var s = buffer[i--];\n  var e = s & 127;\n  var m;\n  s >>= 7;\n  for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : s ? -Infinity : Infinity;\n  } else {\n    m = m + pow(2, mLen);\n    e = e - eBias;\n  } return (s ? -1 : 1) * m * pow(2, e - mLen);\n}\n\nfunction unpackI32(bytes) {\n  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];\n}\nfunction packI8(it) {\n  return [it & 0xff];\n}\nfunction packI16(it) {\n  return [it & 0xff, it >> 8 & 0xff];\n}\nfunction packI32(it) {\n  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];\n}\nfunction packF64(it) {\n  return packIEEE754(it, 52, 8);\n}\nfunction packF32(it) {\n  return packIEEE754(it, 23, 4);\n}\n\nfunction addGetter(C, key, internal) {\n  dP(C[PROTOTYPE], key, { get: function () { return this[internal]; } });\n}\n\nfunction get(view, bytes, index, isLittleEndian) {\n  var numIndex = +index;\n  var intIndex = toIndex(numIndex);\n  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\n  var store = view[$BUFFER]._b;\n  var start = intIndex + view[$OFFSET];\n  var pack = store.slice(start, start + bytes);\n  return isLittleEndian ? pack : pack.reverse();\n}\nfunction set(view, bytes, index, conversion, value, isLittleEndian) {\n  var numIndex = +index;\n  var intIndex = toIndex(numIndex);\n  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\n  var store = view[$BUFFER]._b;\n  var start = intIndex + view[$OFFSET];\n  var pack = conversion(+value);\n  for (var i = 0; i < bytes; i++) store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];\n}\n\nif (!$typed.ABV) {\n  $ArrayBuffer = function ArrayBuffer(length) {\n    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);\n    var byteLength = toIndex(length);\n    this._b = arrayFill.call(new Array(byteLength), 0);\n    this[$LENGTH] = byteLength;\n  };\n\n  $DataView = function DataView(buffer, byteOffset, byteLength) {\n    anInstance(this, $DataView, DATA_VIEW);\n    anInstance(buffer, $ArrayBuffer, DATA_VIEW);\n    var bufferLength = buffer[$LENGTH];\n    var offset = toInteger(byteOffset);\n    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');\n    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);\n    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);\n    this[$BUFFER] = buffer;\n    this[$OFFSET] = offset;\n    this[$LENGTH] = byteLength;\n  };\n\n  if (DESCRIPTORS) {\n    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');\n    addGetter($DataView, BUFFER, '_b');\n    addGetter($DataView, BYTE_LENGTH, '_l');\n    addGetter($DataView, BYTE_OFFSET, '_o');\n  }\n\n  redefineAll($DataView[PROTOTYPE], {\n    getInt8: function getInt8(byteOffset) {\n      return get(this, 1, byteOffset)[0] << 24 >> 24;\n    },\n    getUint8: function getUint8(byteOffset) {\n      return get(this, 1, byteOffset)[0];\n    },\n    getInt16: function getInt16(byteOffset /* , littleEndian */) {\n      var bytes = get(this, 2, byteOffset, arguments[1]);\n      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;\n    },\n    getUint16: function getUint16(byteOffset /* , littleEndian */) {\n      var bytes = get(this, 2, byteOffset, arguments[1]);\n      return bytes[1] << 8 | bytes[0];\n    },\n    getInt32: function getInt32(byteOffset /* , littleEndian */) {\n      return unpackI32(get(this, 4, byteOffset, arguments[1]));\n    },\n    getUint32: function getUint32(byteOffset /* , littleEndian */) {\n      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;\n    },\n    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {\n      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);\n    },\n    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {\n      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);\n    },\n    setInt8: function setInt8(byteOffset, value) {\n      set(this, 1, byteOffset, packI8, value);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      set(this, 1, byteOffset, packI8, value);\n    },\n    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\n    },\n    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\n    },\n    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\n    },\n    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\n    },\n    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packF32, value, arguments[2]);\n    },\n    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {\n      set(this, 8, byteOffset, packF64, value, arguments[2]);\n    }\n  });\n} else {\n  if (!fails(function () {\n    $ArrayBuffer(1);\n  }) || !fails(function () {\n    new $ArrayBuffer(-1); // eslint-disable-line no-new\n  }) || fails(function () {\n    new $ArrayBuffer(); // eslint-disable-line no-new\n    new $ArrayBuffer(1.5); // eslint-disable-line no-new\n    new $ArrayBuffer(NaN); // eslint-disable-line no-new\n    return $ArrayBuffer.name != ARRAY_BUFFER;\n  })) {\n    $ArrayBuffer = function ArrayBuffer(length) {\n      anInstance(this, $ArrayBuffer);\n      return new BaseBuffer(toIndex(length));\n    };\n    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];\n    for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {\n      if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);\n    }\n    if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;\n  }\n  // iOS Safari 7.x bug\n  var view = new $DataView(new $ArrayBuffer(2));\n  var $setInt8 = $DataView[PROTOTYPE].setInt8;\n  view.setInt8(0, 2147483648);\n  view.setInt8(1, 2147483649);\n  if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {\n    setInt8: function setInt8(byteOffset, value) {\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    }\n  }, true);\n}\nsetToStringTag($ArrayBuffer, ARRAY_BUFFER);\nsetToStringTag($DataView, DATA_VIEW);\nhide($DataView[PROTOTYPE], $typed.VIEW, true);\nexports[ARRAY_BUFFER] = $ArrayBuffer;\nexports[DATA_VIEW] = $DataView;\n","const createHmac = require('create-hmac')\n\nconst ONE1 = Buffer.alloc(1, 1)\nconst ZERO1 = Buffer.alloc(1, 0)\n\n// https://tools.ietf.org/html/rfc6979#section-3.2\nfunction deterministicGenerateK (hash, x, checkSig, isPrivate, extraEntropy) {\n  // Step A, ignored as hash already provided\n  // Step B\n  // Step C\n  let k = Buffer.alloc(32, 0)\n  let v = Buffer.alloc(32, 1)\n\n  // Step D\n  k = createHmac('sha256', k)\n    .update(v)\n    .update(ZERO1)\n    .update(x)\n    .update(hash)\n    .update(extraEntropy || '')\n    .digest()\n\n  // Step E\n  v = createHmac('sha256', k).update(v).digest()\n\n  // Step F\n  k = createHmac('sha256', k)\n    .update(v)\n    .update(ONE1)\n    .update(x)\n    .update(hash)\n    .update(extraEntropy || '')\n    .digest()\n\n  // Step G\n  v = createHmac('sha256', k).update(v).digest()\n\n  // Step H1/H2a, ignored as tlen === qlen (256 bit)\n  // Step H2b\n  v = createHmac('sha256', k).update(v).digest()\n\n  let T = v\n\n  // Step H3, repeat until T is within the interval [1, n - 1] and is suitable for ECDSA\n  while (!isPrivate(T) || !checkSig(T)) {\n    k = createHmac('sha256', k)\n      .update(v)\n      .update(ZERO1)\n      .digest()\n\n    v = createHmac('sha256', k).update(v).digest()\n\n    // Step H1/H2a, again, ignored as tlen === qlen (256 bit)\n    // Step H2b again\n    v = createHmac('sha256', k).update(v).digest()\n    T = v\n  }\n\n  return T\n}\n\nmodule.exports = deterministicGenerateK\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_to-index.js","webpack:///./node_modules/core-js/modules/_typed.js","webpack:///./node_modules/generate-password/main.js","webpack:///./node_modules/core-js/modules/es6.regexp.split.js","webpack:///./node_modules/core-js/modules/es6.typed.uint8-array.js","webpack:///./node_modules/core-js/modules/_array-fill.js","webpack:///sdkWallet.ts","webpack:///./node_modules/generate-password/src/generate.js","webpack:///./node_modules/core-js/modules/_array-copy-within.js","webpack:///./node_modules/core-js/modules/_typed-array.js","webpack:///./node_modules/core-js/modules/_typed-buffer.js"],"names":["toInteger","__webpack_require__","toLength","module","exports","it","undefined","number","length","RangeError","Typed","global","hide","uid","TYPED","VIEW","ABV","ArrayBuffer","DataView","CONSTR","i","l","TypedArrayConstructors","split","prototype","isRegExp","anObject","speciesConstructor","advanceStringIndex","callRegExpExec","regexpExec","fails","$min","Math","min","$push","push","$SPLIT","LENGTH","LAST_INDEX","MAX_UINT32","SUPPORTS_Y","RegExp","defined","SPLIT","$split","maybeCallNative","internalSplit","separator","limit","string","String","this","call","match","lastIndex","lastLength","output","flags","ignoreCase","multiline","unicode","sticky","lastLastIndex","splitLimit","separatorCopy","source","slice","index","apply","test","O","splitter","regexp","res","done","value","rx","S","C","unicodeMatching","lim","p","q","A","e","z","init","data","byteOffset","toObject","toAbsoluteIndex","aLen","arguments","end","endPos","_this","generator","walletInterface","loginWallet","params","tslib__WEBPACK_IMPORTED_MODULE_1__","name","privateKey","networkType","password","nem2_sdk__WEBPACK_IMPORTED_MODULE_2__","generate","numbers","symbols","createFromPrivateKey","wallet","_a","sent","account","publicAccount","createFromPublicKey","publicKey","mosaics","node","accountHttp","getAccountInfo","address","toPromise","accountInfo","result","createWallet","generateNewAccount","getWallet","getKeys","open","crypto","self","RANDOM_BATCH_SIZE","randomIndex","randomBytes","getNextRandomValue","randomNumber","max","rand","lowercase","uppercase","similarCharacters","strictRules","rule","options","pool","optionsLength","poolLength","strict","fitsRules","reduce","hasOwnProperty","exclude","excludeSimilarCharacters","minStrictLength","TypeError","replace","generateMultiple","amount","passwords","copyWithin","target","start","len","to","from","count","inc","LIBRARY","$export","$typed","$buffer","ctx","anInstance","propertyDesc","redefineAll","toIndex","toPrimitive","has","classof","isObject","isArrayIter","create","getPrototypeOf","gOPN","f","getIterFn","wks","createArrayMethod","createArrayIncludes","ArrayIterators","Iterators","$iterDetect","setSpecies","arrayFill","arrayCopyWithin","$DP","$GOPD","dP","gOPD","Uint8Array","ARRAY_BUFFER","SHARED_BUFFER","BYTES_PER_ELEMENT","PROTOTYPE","ArrayProto","Array","$ArrayBuffer","$DataView","arrayForEach","arrayFilter","arraySome","arrayEvery","arrayFind","arrayFindIndex","arrayIncludes","arrayIndexOf","arrayValues","values","arrayKeys","keys","arrayEntries","entries","arrayLastIndexOf","lastIndexOf","arrayReduce","arrayReduceRight","reduceRight","arrayJoin","join","arraySort","sort","arraySlice","arrayToString","toString","arrayToLocaleString","toLocaleString","ITERATOR","TAG","TYPED_CONSTRUCTOR","DEF_CONSTRUCTOR","ALL_CONSTRUCTORS","TYPED_ARRAY","WRONG_LENGTH","$map","allocate","LITTLE_ENDIAN","Uint16Array","buffer","FORCED_SET","set","toOffset","BYTES","offset","validate","speciesFromList","list","fromList","addGetter","key","internal","get","_d","$from","step","iterator","mapfn","mapping","iterFn","next","$of","TO_LOCALE_BUG","$toLocaleString","proto","every","callbackfn","fill","filter","find","predicate","findIndex","forEach","indexOf","searchElement","includes","map","reverse","that","middle","floor","some","comparefn","subarray","begin","$begin","$slice","$set","arrayLike","src","$iterators","isTAIndex","$getDesc","$setDesc","desc","configurable","writable","enumerable","F","getOwnPropertyDescriptor","defineProperty","$TypedArrayPrototype$","constructor","KEY","wrapper","CLAMPED","NAME","GETTER","SETTER","TypedArray","Base","TAC","FORCED","TypedArrayPrototype","getter","v","o","setter","round","addElement","$offset","$length","byteLength","klass","$len","b","iter","Function","concat","$nativeIterator","CORRECT_ITER_NAME","$iterator","G","W","of","P","DESCRIPTORS","setToStringTag","DATA_VIEW","WRONG_INDEX","Infinity","BaseBuffer","abs","pow","log","LN2","BUFFER","BYTE_LENGTH","BYTE_OFFSET","$BUFFER","$LENGTH","$OFFSET","packIEEE754","mLen","nBytes","m","c","eLen","eMax","eBias","rt","s","unpackIEEE754","nBits","NaN","unpackI32","bytes","packI8","packI16","packI32","packF64","packF32","view","isLittleEndian","numIndex","intIndex","store","_b","pack","conversion","ArrayBufferProto","j","$setInt8","setInt8","getInt8","setUint8","bufferLength","getUint8","getInt16","getUint16","getInt32","getUint32","getFloat32","getFloat64","setInt16","setUint16","setInt32","setUint32","setFloat32","setFloat64"],"mappings":"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","file":"static/js/chunk-7864dbeb.e610d3f7.js","sourcesContent":["// https://tc39.github.io/ecma262/#sec-toindex\nvar toInteger = require('./_to-integer');\nvar toLength = require('./_to-length');\nmodule.exports = function (it) {\n  if (it === undefined) return 0;\n  var number = toInteger(it);\n  var length = toLength(number);\n  if (number !== length) throw RangeError('Wrong length!');\n  return length;\n};\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar uid = require('./_uid');\nvar TYPED = uid('typed_array');\nvar VIEW = uid('view');\nvar ABV = !!(global.ArrayBuffer && global.DataView);\nvar CONSTR = ABV;\nvar i = 0;\nvar l = 9;\nvar Typed;\n\nvar TypedArrayConstructors = (\n  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'\n).split(',');\n\nwhile (i < l) {\n  if (Typed = global[TypedArrayConstructors[i++]]) {\n    hide(Typed.prototype, TYPED, true);\n    hide(Typed.prototype, VIEW, true);\n  } else CONSTR = false;\n}\n\nmodule.exports = {\n  ABV: ABV,\n  CONSTR: CONSTR,\n  TYPED: TYPED,\n  VIEW: VIEW\n};\n","module.exports = require('./src/generate');\n","'use strict';\n\nvar isRegExp = require('./_is-regexp');\nvar anObject = require('./_an-object');\nvar speciesConstructor = require('./_species-constructor');\nvar advanceStringIndex = require('./_advance-string-index');\nvar toLength = require('./_to-length');\nvar callRegExpExec = require('./_regexp-exec-abstract');\nvar regexpExec = require('./_regexp-exec');\nvar fails = require('./_fails');\nvar $min = Math.min;\nvar $push = [].push;\nvar $SPLIT = 'split';\nvar LENGTH = 'length';\nvar LAST_INDEX = 'lastIndex';\nvar MAX_UINT32 = 0xffffffff;\n\n// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError\nvar SUPPORTS_Y = !fails(function () { RegExp(MAX_UINT32, 'y'); });\n\n// @@split logic\nrequire('./_fix-re-wks')('split', 2, function (defined, SPLIT, $split, maybeCallNative) {\n  var internalSplit;\n  if (\n    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||\n    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||\n    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||\n    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||\n    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||\n    ''[$SPLIT](/.?/)[LENGTH]\n  ) {\n    // based on es5-shim implementation, need to rework it\n    internalSplit = function (separator, limit) {\n      var string = String(this);\n      if (separator === undefined && limit === 0) return [];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) return $split.call(string, separator, limit);\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      var splitLimit = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var match, lastIndex, lastLength;\n      while (match = regexpExec.call(separatorCopy, string)) {\n        lastIndex = separatorCopy[LAST_INDEX];\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));\n          lastLength = match[0][LENGTH];\n          lastLastIndex = lastIndex;\n          if (output[LENGTH] >= splitLimit) break;\n        }\n        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string[LENGTH]) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;\n    };\n  // Chakra, V8\n  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {\n    internalSplit = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : $split.call(this, separator, limit);\n    };\n  } else {\n    internalSplit = $split;\n  }\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = defined(this);\n      var splitter = separator == undefined ? undefined : separator[SPLIT];\n      return splitter !== undefined\n        ? splitter.call(separator, O, limit)\n        : internalSplit.call(String(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (regexp, limit) {\n      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== $split);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var C = speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                  (rx.multiline ? 'm' : '') +\n                  (rx.unicode ? 'u' : '') +\n                  (SUPPORTS_Y ? 'y' : 'g');\n\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = SUPPORTS_Y ? q : 0;\n        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));\n        var e;\n        if (\n          z === null ||\n          (e = $min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          A.push(S.slice(p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            A.push(z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      A.push(S.slice(p));\n      return A;\n    }\n  ];\n});\n","require('./_typed-array')('Uint8', 1, function (init) {\n  return function Uint8Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","var _this = this;\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Password, SimpleWallet, Account, PublicAccount, AccountHttp } from 'nem2-sdk';\r\nvar generator = require('generate-password');\r\nexport var walletInterface = {\r\n    loginWallet: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n        var name, privateKey, networkType, password, wallet, account, publicAccount, mosaics, accountHttp, accountInfo;\r\n        return tslib_1.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    name = params.name;\r\n                    privateKey = params.privateKey;\r\n                    networkType = params.networkType;\r\n                    password = new Password(generator.generate({ length: 50, numbers: true, symbols: true, }));\r\n                    return [4 /*yield*/, SimpleWallet.createFromPrivateKey(name, password, privateKey, networkType)];\r\n                case 1:\r\n                    wallet = _a.sent();\r\n                    account = Account.createFromPrivateKey(privateKey, networkType);\r\n                    publicAccount = PublicAccount.createFromPublicKey(account.publicKey, networkType);\r\n                    mosaics = [];\r\n                    if (!params.node) return [3 /*break*/, 3];\r\n                    accountHttp = new AccountHttp(params.node);\r\n                    return [4 /*yield*/, accountHttp.getAccountInfo(account.address).toPromise()];\r\n                case 2:\r\n                    accountInfo = _a.sent();\r\n                    mosaics = accountInfo.mosaics;\r\n                    _a.label = 3;\r\n                case 3: return [2 /*return*/, {\r\n                        result: {\r\n                            wallet: wallet,\r\n                            password: password,\r\n                            publicAccount: publicAccount,\r\n                            account: account,\r\n                            mosaics: mosaics\r\n                        }\r\n                    }];\r\n            }\r\n        });\r\n    }); },\r\n    createWallet: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n        var name, networkType, privateKey, password, wallet;\r\n        return tslib_1.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    name = params.name;\r\n                    networkType = params.networkType;\r\n                    privateKey = Account.generateNewAccount(networkType).privateKey;\r\n                    password = new Password(generator.generate({ length: 50, numbers: true, symbols: true, }));\r\n                    return [4 /*yield*/, SimpleWallet.createFromPrivateKey(name, password, privateKey, networkType)];\r\n                case 1:\r\n                    wallet = _a.sent();\r\n                    return [2 /*return*/, {\r\n                            result: {\r\n                                wallet: wallet,\r\n                                privateKey: privateKey,\r\n                                password: password\r\n                            }\r\n                        }];\r\n            }\r\n        });\r\n    }); },\r\n    getWallet: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n        var name, privateKey, networkType, password, wallet;\r\n        return tslib_1.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    name = params.name;\r\n                    privateKey = params.privateKey;\r\n                    networkType = params.networkType;\r\n                    password = new Password(generator.generate({ length: 50, numbers: true, symbols: true, }));\r\n                    return [4 /*yield*/, SimpleWallet.createFromPrivateKey(name, password, privateKey, networkType)];\r\n                case 1:\r\n                    wallet = _a.sent();\r\n                    return [2 /*return*/, {\r\n                            result: {\r\n                                wallet: wallet,\r\n                                privateKey: privateKey,\r\n                                password: password\r\n                            }\r\n                        }];\r\n            }\r\n        });\r\n    }); },\r\n    getKeys: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n        var password, wallet, account;\r\n        return tslib_1.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    password = params.password;\r\n                    wallet = params.wallet;\r\n                    return [4 /*yield*/, wallet.open(password)];\r\n                case 1:\r\n                    account = _a.sent();\r\n                    return [2 /*return*/, {\r\n                            result: {\r\n                                account: account\r\n                            }\r\n                        }];\r\n            }\r\n        });\r\n    }); },\r\n};\r\n//# sourceMappingURL=sdkWallet.js.map","var crypto = require('crypto');\n\nvar self = module.exports;\n\nconst RANDOM_BATCH_SIZE = 256;\n\nvar randomIndex;\nvar randomBytes;\n\nvar getNextRandomValue = function() {\n\tif (randomIndex === undefined || randomIndex >= randomBytes.length) {\n\t\trandomIndex = 0;\n\t\trandomBytes = crypto.randomBytes(RANDOM_BATCH_SIZE);\n\t}\n\n\tvar result = randomBytes[randomIndex];\n\trandomIndex += 1;\n\n\treturn result;\n};\n\n// Generates a random number\nvar randomNumber = function(max) {\n\t// gives a number between 0 (inclusive) and max (exclusive)\n\tvar rand = getNextRandomValue();\n\twhile (rand >= 256 - (256 % max)) {\n\t\trand = getNextRandomValue();\n\t}\n\treturn rand % max;\n};\n\n// Possible combinations\nvar lowercase = 'abcdefghijklmnopqrstuvwxyz',\n\tuppercase = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\n\tnumbers = '0123456789',\n\tsymbols = '!@#$%^&*()+_-=}{[]|:;\"/?.><,`~',\n\tsimilarCharacters = /[ilLI|`oO0]/g,\n\tstrictRules = [\n\t\t{ name: 'lowercase', rule: /[a-z]/ },\n\t\t{ name: 'uppercase', rule: /[A-Z]/ },\n\t\t{ name: 'numbers', rule: /[0-9]/ },\n\t\t{ name: 'symbols', rule: /[!@#$%^&*()+_\\-=}{[\\]|:;\"/?.><,`~]/ }\n\t];\n\nvar generate = function(options, pool) {\n\tvar password = '',\n\t\toptionsLength = options.length,\n\t\tpoolLength = pool.length;\n\n\tfor (var i = 0; i < optionsLength; i++) {\n\t\tpassword += pool[randomNumber(poolLength)];\n\t}\n\n\tif (options.strict) {\n\t\t// Iterate over each rule, checking to see if the password works.\n\t\tvar fitsRules = strictRules.reduce(function(result, rule) {\n\t\t\t// Skip checking the rule if we know it doesn't match.\n\t\t\tif (result == false) return false;\n\n\t\t\t// If the option is not checked, ignore it.\n\t\t\tif (options[rule.name] == false) return result;\n\n\t\t\t// Run the regex on the password and return whether\n\t\t\t// or not it matches.\n\t\t\treturn rule.rule.test(password);\n\t\t}, true);\n\n\t\t// If it doesn't fit the rules, generate a new one (recursion).\n\t\tif (!fitsRules) return generate(options, pool);\n\t}\n\n\treturn password;\n};\n\n// Generate a random password.\nself.generate = function(options) {\n\t// Set defaults.\n\toptions = options || {};\n\tif (!options.hasOwnProperty('length')) options.length = 10;\n\tif (!options.hasOwnProperty('numbers')) options.numbers = false;\n\tif (!options.hasOwnProperty('symbols')) options.symbols = false;\n\tif (!options.hasOwnProperty('exclude')) options.exclude = '';\n\tif (!options.hasOwnProperty('uppercase')) options.uppercase = true;\n\tif (!options.hasOwnProperty('excludeSimilarCharacters')) options.excludeSimilarCharacters = false;\n\tif (!options.hasOwnProperty('strict')) options.strict = false;\n\n\tif (options.strict) {\n\t\tvar minStrictLength = 1 + (options.numbers ? 1 : 0) + (options.symbols ? 1 : 0) + (options.uppercase ? 1 : 0);\n\t\tif (minStrictLength > options.length) {\n\t\t\tthrow new TypeError('Length must correlate with strict guidelines');\n\t\t}\n\t}\n\n\t// Generate character pool\n\tvar pool = lowercase;\n\n\t// uppercase\n\tif (options.uppercase) {\n\t\tpool += uppercase;\n\t}\n\t// numbers\n\tif (options.numbers) {\n\t\tpool += numbers;\n\t}\n\t// symbols\n\tif (options.symbols) {\n\t\tpool += symbols;\n\t}\n\n\t// similar characters\n\tif (options.excludeSimilarCharacters) {\n\t\tpool = pool.replace(similarCharacters, '');\n\t}\n\n\t// excludes characters from the pool\n\tvar i = options.exclude.length;\n\twhile (i--) {\n\t\tpool = pool.replace(options.exclude[i], '');\n\t}\n\n\tvar password = generate(options, pool);\n\n\treturn password;\n};\n\n// Generates multiple passwords at once with the same options.\nself.generateMultiple = function(amount, options) {\n\tvar passwords = [];\n\n\tfor (var i = 0; i < amount; i++) {\n\t\tpasswords[i] = self.generate(options);\n\t}\n\n\treturn passwords;\n};\n","// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\n\nmodule.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {\n  var O = toObject(this);\n  var len = toLength(O.length);\n  var to = toAbsoluteIndex(target, len);\n  var from = toAbsoluteIndex(start, len);\n  var end = arguments.length > 2 ? arguments[2] : undefined;\n  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);\n  var inc = 1;\n  if (from < to && to < from + count) {\n    inc = -1;\n    from += count - 1;\n    to += count - 1;\n  }\n  while (count-- > 0) {\n    if (from in O) O[to] = O[from];\n    else delete O[to];\n    to += inc;\n    from += inc;\n  } return O;\n};\n","'use strict';\nif (require('./_descriptors')) {\n  var LIBRARY = require('./_library');\n  var global = require('./_global');\n  var fails = require('./_fails');\n  var $export = require('./_export');\n  var $typed = require('./_typed');\n  var $buffer = require('./_typed-buffer');\n  var ctx = require('./_ctx');\n  var anInstance = require('./_an-instance');\n  var propertyDesc = require('./_property-desc');\n  var hide = require('./_hide');\n  var redefineAll = require('./_redefine-all');\n  var toInteger = require('./_to-integer');\n  var toLength = require('./_to-length');\n  var toIndex = require('./_to-index');\n  var toAbsoluteIndex = require('./_to-absolute-index');\n  var toPrimitive = require('./_to-primitive');\n  var has = require('./_has');\n  var classof = require('./_classof');\n  var isObject = require('./_is-object');\n  var toObject = require('./_to-object');\n  var isArrayIter = require('./_is-array-iter');\n  var create = require('./_object-create');\n  var getPrototypeOf = require('./_object-gpo');\n  var gOPN = require('./_object-gopn').f;\n  var getIterFn = require('./core.get-iterator-method');\n  var uid = require('./_uid');\n  var wks = require('./_wks');\n  var createArrayMethod = require('./_array-methods');\n  var createArrayIncludes = require('./_array-includes');\n  var speciesConstructor = require('./_species-constructor');\n  var ArrayIterators = require('./es6.array.iterator');\n  var Iterators = require('./_iterators');\n  var $iterDetect = require('./_iter-detect');\n  var setSpecies = require('./_set-species');\n  var arrayFill = require('./_array-fill');\n  var arrayCopyWithin = require('./_array-copy-within');\n  var $DP = require('./_object-dp');\n  var $GOPD = require('./_object-gopd');\n  var dP = $DP.f;\n  var gOPD = $GOPD.f;\n  var RangeError = global.RangeError;\n  var TypeError = global.TypeError;\n  var Uint8Array = global.Uint8Array;\n  var ARRAY_BUFFER = 'ArrayBuffer';\n  var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;\n  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';\n  var PROTOTYPE = 'prototype';\n  var ArrayProto = Array[PROTOTYPE];\n  var $ArrayBuffer = $buffer.ArrayBuffer;\n  var $DataView = $buffer.DataView;\n  var arrayForEach = createArrayMethod(0);\n  var arrayFilter = createArrayMethod(2);\n  var arraySome = createArrayMethod(3);\n  var arrayEvery = createArrayMethod(4);\n  var arrayFind = createArrayMethod(5);\n  var arrayFindIndex = createArrayMethod(6);\n  var arrayIncludes = createArrayIncludes(true);\n  var arrayIndexOf = createArrayIncludes(false);\n  var arrayValues = ArrayIterators.values;\n  var arrayKeys = ArrayIterators.keys;\n  var arrayEntries = ArrayIterators.entries;\n  var arrayLastIndexOf = ArrayProto.lastIndexOf;\n  var arrayReduce = ArrayProto.reduce;\n  var arrayReduceRight = ArrayProto.reduceRight;\n  var arrayJoin = ArrayProto.join;\n  var arraySort = ArrayProto.sort;\n  var arraySlice = ArrayProto.slice;\n  var arrayToString = ArrayProto.toString;\n  var arrayToLocaleString = ArrayProto.toLocaleString;\n  var ITERATOR = wks('iterator');\n  var TAG = wks('toStringTag');\n  var TYPED_CONSTRUCTOR = uid('typed_constructor');\n  var DEF_CONSTRUCTOR = uid('def_constructor');\n  var ALL_CONSTRUCTORS = $typed.CONSTR;\n  var TYPED_ARRAY = $typed.TYPED;\n  var VIEW = $typed.VIEW;\n  var WRONG_LENGTH = 'Wrong length!';\n\n  var $map = createArrayMethod(1, function (O, length) {\n    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);\n  });\n\n  var LITTLE_ENDIAN = fails(function () {\n    // eslint-disable-next-line no-undef\n    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;\n  });\n\n  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {\n    new Uint8Array(1).set({});\n  });\n\n  var toOffset = function (it, BYTES) {\n    var offset = toInteger(it);\n    if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');\n    return offset;\n  };\n\n  var validate = function (it) {\n    if (isObject(it) && TYPED_ARRAY in it) return it;\n    throw TypeError(it + ' is not a typed array!');\n  };\n\n  var allocate = function (C, length) {\n    if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {\n      throw TypeError('It is not a typed array constructor!');\n    } return new C(length);\n  };\n\n  var speciesFromList = function (O, list) {\n    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);\n  };\n\n  var fromList = function (C, list) {\n    var index = 0;\n    var length = list.length;\n    var result = allocate(C, length);\n    while (length > index) result[index] = list[index++];\n    return result;\n  };\n\n  var addGetter = function (it, key, internal) {\n    dP(it, key, { get: function () { return this._d[internal]; } });\n  };\n\n  var $from = function from(source /* , mapfn, thisArg */) {\n    var O = toObject(source);\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var iterFn = getIterFn(O);\n    var i, length, values, result, step, iterator;\n    if (iterFn != undefined && !isArrayIter(iterFn)) {\n      for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {\n        values.push(step.value);\n      } O = values;\n    }\n    if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);\n    for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {\n      result[i] = mapping ? mapfn(O[i], i) : O[i];\n    }\n    return result;\n  };\n\n  var $of = function of(/* ...items */) {\n    var index = 0;\n    var length = arguments.length;\n    var result = allocate(this, length);\n    while (length > index) result[index] = arguments[index++];\n    return result;\n  };\n\n  // iOS Safari 6.x fails here\n  var TO_LOCALE_BUG = !!Uint8Array && fails(function () { arrayToLocaleString.call(new Uint8Array(1)); });\n\n  var $toLocaleString = function toLocaleString() {\n    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);\n  };\n\n  var proto = {\n    copyWithin: function copyWithin(target, start /* , end */) {\n      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);\n    },\n    every: function every(callbackfn /* , thisArg */) {\n      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    fill: function fill(value /* , start, end */) { // eslint-disable-line no-unused-vars\n      return arrayFill.apply(validate(this), arguments);\n    },\n    filter: function filter(callbackfn /* , thisArg */) {\n      return speciesFromList(this, arrayFilter(validate(this), callbackfn,\n        arguments.length > 1 ? arguments[1] : undefined));\n    },\n    find: function find(predicate /* , thisArg */) {\n      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    findIndex: function findIndex(predicate /* , thisArg */) {\n      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    forEach: function forEach(callbackfn /* , thisArg */) {\n      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    indexOf: function indexOf(searchElement /* , fromIndex */) {\n      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    includes: function includes(searchElement /* , fromIndex */) {\n      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    join: function join(separator) { // eslint-disable-line no-unused-vars\n      return arrayJoin.apply(validate(this), arguments);\n    },\n    lastIndexOf: function lastIndexOf(searchElement /* , fromIndex */) { // eslint-disable-line no-unused-vars\n      return arrayLastIndexOf.apply(validate(this), arguments);\n    },\n    map: function map(mapfn /* , thisArg */) {\n      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    reduce: function reduce(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars\n      return arrayReduce.apply(validate(this), arguments);\n    },\n    reduceRight: function reduceRight(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars\n      return arrayReduceRight.apply(validate(this), arguments);\n    },\n    reverse: function reverse() {\n      var that = this;\n      var length = validate(that).length;\n      var middle = Math.floor(length / 2);\n      var index = 0;\n      var value;\n      while (index < middle) {\n        value = that[index];\n        that[index++] = that[--length];\n        that[length] = value;\n      } return that;\n    },\n    some: function some(callbackfn /* , thisArg */) {\n      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    sort: function sort(comparefn) {\n      return arraySort.call(validate(this), comparefn);\n    },\n    subarray: function subarray(begin, end) {\n      var O = validate(this);\n      var length = O.length;\n      var $begin = toAbsoluteIndex(begin, length);\n      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(\n        O.buffer,\n        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,\n        toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin)\n      );\n    }\n  };\n\n  var $slice = function slice(start, end) {\n    return speciesFromList(this, arraySlice.call(validate(this), start, end));\n  };\n\n  var $set = function set(arrayLike /* , offset */) {\n    validate(this);\n    var offset = toOffset(arguments[1], 1);\n    var length = this.length;\n    var src = toObject(arrayLike);\n    var len = toLength(src.length);\n    var index = 0;\n    if (len + offset > length) throw RangeError(WRONG_LENGTH);\n    while (index < len) this[offset + index] = src[index++];\n  };\n\n  var $iterators = {\n    entries: function entries() {\n      return arrayEntries.call(validate(this));\n    },\n    keys: function keys() {\n      return arrayKeys.call(validate(this));\n    },\n    values: function values() {\n      return arrayValues.call(validate(this));\n    }\n  };\n\n  var isTAIndex = function (target, key) {\n    return isObject(target)\n      && target[TYPED_ARRAY]\n      && typeof key != 'symbol'\n      && key in target\n      && String(+key) == String(key);\n  };\n  var $getDesc = function getOwnPropertyDescriptor(target, key) {\n    return isTAIndex(target, key = toPrimitive(key, true))\n      ? propertyDesc(2, target[key])\n      : gOPD(target, key);\n  };\n  var $setDesc = function defineProperty(target, key, desc) {\n    if (isTAIndex(target, key = toPrimitive(key, true))\n      && isObject(desc)\n      && has(desc, 'value')\n      && !has(desc, 'get')\n      && !has(desc, 'set')\n      // TODO: add validation descriptor w/o calling accessors\n      && !desc.configurable\n      && (!has(desc, 'writable') || desc.writable)\n      && (!has(desc, 'enumerable') || desc.enumerable)\n    ) {\n      target[key] = desc.value;\n      return target;\n    } return dP(target, key, desc);\n  };\n\n  if (!ALL_CONSTRUCTORS) {\n    $GOPD.f = $getDesc;\n    $DP.f = $setDesc;\n  }\n\n  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {\n    getOwnPropertyDescriptor: $getDesc,\n    defineProperty: $setDesc\n  });\n\n  if (fails(function () { arrayToString.call({}); })) {\n    arrayToString = arrayToLocaleString = function toString() {\n      return arrayJoin.call(this);\n    };\n  }\n\n  var $TypedArrayPrototype$ = redefineAll({}, proto);\n  redefineAll($TypedArrayPrototype$, $iterators);\n  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);\n  redefineAll($TypedArrayPrototype$, {\n    slice: $slice,\n    set: $set,\n    constructor: function () { /* noop */ },\n    toString: arrayToString,\n    toLocaleString: $toLocaleString\n  });\n  addGetter($TypedArrayPrototype$, 'buffer', 'b');\n  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');\n  addGetter($TypedArrayPrototype$, 'byteLength', 'l');\n  addGetter($TypedArrayPrototype$, 'length', 'e');\n  dP($TypedArrayPrototype$, TAG, {\n    get: function () { return this[TYPED_ARRAY]; }\n  });\n\n  // eslint-disable-next-line max-statements\n  module.exports = function (KEY, BYTES, wrapper, CLAMPED) {\n    CLAMPED = !!CLAMPED;\n    var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';\n    var GETTER = 'get' + KEY;\n    var SETTER = 'set' + KEY;\n    var TypedArray = global[NAME];\n    var Base = TypedArray || {};\n    var TAC = TypedArray && getPrototypeOf(TypedArray);\n    var FORCED = !TypedArray || !$typed.ABV;\n    var O = {};\n    var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];\n    var getter = function (that, index) {\n      var data = that._d;\n      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);\n    };\n    var setter = function (that, index, value) {\n      var data = that._d;\n      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;\n      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);\n    };\n    var addElement = function (that, index) {\n      dP(that, index, {\n        get: function () {\n          return getter(this, index);\n        },\n        set: function (value) {\n          return setter(this, index, value);\n        },\n        enumerable: true\n      });\n    };\n    if (FORCED) {\n      TypedArray = wrapper(function (that, data, $offset, $length) {\n        anInstance(that, TypedArray, NAME, '_d');\n        var index = 0;\n        var offset = 0;\n        var buffer, byteLength, length, klass;\n        if (!isObject(data)) {\n          length = toIndex(data);\n          byteLength = length * BYTES;\n          buffer = new $ArrayBuffer(byteLength);\n        } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n          buffer = data;\n          offset = toOffset($offset, BYTES);\n          var $len = data.byteLength;\n          if ($length === undefined) {\n            if ($len % BYTES) throw RangeError(WRONG_LENGTH);\n            byteLength = $len - offset;\n            if (byteLength < 0) throw RangeError(WRONG_LENGTH);\n          } else {\n            byteLength = toLength($length) * BYTES;\n            if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);\n          }\n          length = byteLength / BYTES;\n        } else if (TYPED_ARRAY in data) {\n          return fromList(TypedArray, data);\n        } else {\n          return $from.call(TypedArray, data);\n        }\n        hide(that, '_d', {\n          b: buffer,\n          o: offset,\n          l: byteLength,\n          e: length,\n          v: new $DataView(buffer)\n        });\n        while (index < length) addElement(that, index++);\n      });\n      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);\n      hide(TypedArrayPrototype, 'constructor', TypedArray);\n    } else if (!fails(function () {\n      TypedArray(1);\n    }) || !fails(function () {\n      new TypedArray(-1); // eslint-disable-line no-new\n    }) || !$iterDetect(function (iter) {\n      new TypedArray(); // eslint-disable-line no-new\n      new TypedArray(null); // eslint-disable-line no-new\n      new TypedArray(1.5); // eslint-disable-line no-new\n      new TypedArray(iter); // eslint-disable-line no-new\n    }, true)) {\n      TypedArray = wrapper(function (that, data, $offset, $length) {\n        anInstance(that, TypedArray, NAME);\n        var klass;\n        // `ws` module bug, temporarily remove validation length for Uint8Array\n        // https://github.com/websockets/ws/pull/645\n        if (!isObject(data)) return new Base(toIndex(data));\n        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n          return $length !== undefined\n            ? new Base(data, toOffset($offset, BYTES), $length)\n            : $offset !== undefined\n              ? new Base(data, toOffset($offset, BYTES))\n              : new Base(data);\n        }\n        if (TYPED_ARRAY in data) return fromList(TypedArray, data);\n        return $from.call(TypedArray, data);\n      });\n      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {\n        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);\n      });\n      TypedArray[PROTOTYPE] = TypedArrayPrototype;\n      if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;\n    }\n    var $nativeIterator = TypedArrayPrototype[ITERATOR];\n    var CORRECT_ITER_NAME = !!$nativeIterator\n      && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);\n    var $iterator = $iterators.values;\n    hide(TypedArray, TYPED_CONSTRUCTOR, true);\n    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);\n    hide(TypedArrayPrototype, VIEW, true);\n    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);\n\n    if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {\n      dP(TypedArrayPrototype, TAG, {\n        get: function () { return NAME; }\n      });\n    }\n\n    O[NAME] = TypedArray;\n\n    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);\n\n    $export($export.S, NAME, {\n      BYTES_PER_ELEMENT: BYTES\n    });\n\n    $export($export.S + $export.F * fails(function () { Base.of.call(TypedArray, 1); }), NAME, {\n      from: $from,\n      of: $of\n    });\n\n    if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);\n\n    $export($export.P, NAME, proto);\n\n    setSpecies(NAME);\n\n    $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });\n\n    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);\n\n    if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;\n\n    $export($export.P + $export.F * fails(function () {\n      new TypedArray(1).slice();\n    }), NAME, { slice: $slice });\n\n    $export($export.P + $export.F * (fails(function () {\n      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();\n    }) || !fails(function () {\n      TypedArrayPrototype.toLocaleString.call([1, 2]);\n    })), NAME, { toLocaleString: $toLocaleString });\n\n    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;\n    if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);\n  };\n} else module.exports = function () { /* empty */ };\n","'use strict';\nvar global = require('./_global');\nvar DESCRIPTORS = require('./_descriptors');\nvar LIBRARY = require('./_library');\nvar $typed = require('./_typed');\nvar hide = require('./_hide');\nvar redefineAll = require('./_redefine-all');\nvar fails = require('./_fails');\nvar anInstance = require('./_an-instance');\nvar toInteger = require('./_to-integer');\nvar toLength = require('./_to-length');\nvar toIndex = require('./_to-index');\nvar gOPN = require('./_object-gopn').f;\nvar dP = require('./_object-dp').f;\nvar arrayFill = require('./_array-fill');\nvar setToStringTag = require('./_set-to-string-tag');\nvar ARRAY_BUFFER = 'ArrayBuffer';\nvar DATA_VIEW = 'DataView';\nvar PROTOTYPE = 'prototype';\nvar WRONG_LENGTH = 'Wrong length!';\nvar WRONG_INDEX = 'Wrong index!';\nvar $ArrayBuffer = global[ARRAY_BUFFER];\nvar $DataView = global[DATA_VIEW];\nvar Math = global.Math;\nvar RangeError = global.RangeError;\n// eslint-disable-next-line no-shadow-restricted-names\nvar Infinity = global.Infinity;\nvar BaseBuffer = $ArrayBuffer;\nvar abs = Math.abs;\nvar pow = Math.pow;\nvar floor = Math.floor;\nvar log = Math.log;\nvar LN2 = Math.LN2;\nvar BUFFER = 'buffer';\nvar BYTE_LENGTH = 'byteLength';\nvar BYTE_OFFSET = 'byteOffset';\nvar $BUFFER = DESCRIPTORS ? '_b' : BUFFER;\nvar $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;\nvar $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;\n\n// IEEE754 conversions based on https://github.com/feross/ieee754\nfunction packIEEE754(value, mLen, nBytes) {\n  var buffer = new Array(nBytes);\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;\n  var i = 0;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  var e, m, c;\n  value = abs(value);\n  // eslint-disable-next-line no-self-compare\n  if (value != value || value === Infinity) {\n    // eslint-disable-next-line no-self-compare\n    m = value != value ? 1 : 0;\n    e = eMax;\n  } else {\n    e = floor(log(value) / LN2);\n    if (value * (c = pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * pow(2, eBias - 1) * pow(2, mLen);\n      e = 0;\n    }\n  }\n  for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);\n  e = e << mLen | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);\n  buffer[--i] |= s * 128;\n  return buffer;\n}\nfunction unpackIEEE754(buffer, mLen, nBytes) {\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = eLen - 7;\n  var i = nBytes - 1;\n  var s = buffer[i--];\n  var e = s & 127;\n  var m;\n  s >>= 7;\n  for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : s ? -Infinity : Infinity;\n  } else {\n    m = m + pow(2, mLen);\n    e = e - eBias;\n  } return (s ? -1 : 1) * m * pow(2, e - mLen);\n}\n\nfunction unpackI32(bytes) {\n  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];\n}\nfunction packI8(it) {\n  return [it & 0xff];\n}\nfunction packI16(it) {\n  return [it & 0xff, it >> 8 & 0xff];\n}\nfunction packI32(it) {\n  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];\n}\nfunction packF64(it) {\n  return packIEEE754(it, 52, 8);\n}\nfunction packF32(it) {\n  return packIEEE754(it, 23, 4);\n}\n\nfunction addGetter(C, key, internal) {\n  dP(C[PROTOTYPE], key, { get: function () { return this[internal]; } });\n}\n\nfunction get(view, bytes, index, isLittleEndian) {\n  var numIndex = +index;\n  var intIndex = toIndex(numIndex);\n  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\n  var store = view[$BUFFER]._b;\n  var start = intIndex + view[$OFFSET];\n  var pack = store.slice(start, start + bytes);\n  return isLittleEndian ? pack : pack.reverse();\n}\nfunction set(view, bytes, index, conversion, value, isLittleEndian) {\n  var numIndex = +index;\n  var intIndex = toIndex(numIndex);\n  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\n  var store = view[$BUFFER]._b;\n  var start = intIndex + view[$OFFSET];\n  var pack = conversion(+value);\n  for (var i = 0; i < bytes; i++) store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];\n}\n\nif (!$typed.ABV) {\n  $ArrayBuffer = function ArrayBuffer(length) {\n    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);\n    var byteLength = toIndex(length);\n    this._b = arrayFill.call(new Array(byteLength), 0);\n    this[$LENGTH] = byteLength;\n  };\n\n  $DataView = function DataView(buffer, byteOffset, byteLength) {\n    anInstance(this, $DataView, DATA_VIEW);\n    anInstance(buffer, $ArrayBuffer, DATA_VIEW);\n    var bufferLength = buffer[$LENGTH];\n    var offset = toInteger(byteOffset);\n    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');\n    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);\n    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);\n    this[$BUFFER] = buffer;\n    this[$OFFSET] = offset;\n    this[$LENGTH] = byteLength;\n  };\n\n  if (DESCRIPTORS) {\n    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');\n    addGetter($DataView, BUFFER, '_b');\n    addGetter($DataView, BYTE_LENGTH, '_l');\n    addGetter($DataView, BYTE_OFFSET, '_o');\n  }\n\n  redefineAll($DataView[PROTOTYPE], {\n    getInt8: function getInt8(byteOffset) {\n      return get(this, 1, byteOffset)[0] << 24 >> 24;\n    },\n    getUint8: function getUint8(byteOffset) {\n      return get(this, 1, byteOffset)[0];\n    },\n    getInt16: function getInt16(byteOffset /* , littleEndian */) {\n      var bytes = get(this, 2, byteOffset, arguments[1]);\n      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;\n    },\n    getUint16: function getUint16(byteOffset /* , littleEndian */) {\n      var bytes = get(this, 2, byteOffset, arguments[1]);\n      return bytes[1] << 8 | bytes[0];\n    },\n    getInt32: function getInt32(byteOffset /* , littleEndian */) {\n      return unpackI32(get(this, 4, byteOffset, arguments[1]));\n    },\n    getUint32: function getUint32(byteOffset /* , littleEndian */) {\n      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;\n    },\n    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {\n      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);\n    },\n    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {\n      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);\n    },\n    setInt8: function setInt8(byteOffset, value) {\n      set(this, 1, byteOffset, packI8, value);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      set(this, 1, byteOffset, packI8, value);\n    },\n    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\n    },\n    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\n    },\n    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\n    },\n    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\n    },\n    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packF32, value, arguments[2]);\n    },\n    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {\n      set(this, 8, byteOffset, packF64, value, arguments[2]);\n    }\n  });\n} else {\n  if (!fails(function () {\n    $ArrayBuffer(1);\n  }) || !fails(function () {\n    new $ArrayBuffer(-1); // eslint-disable-line no-new\n  }) || fails(function () {\n    new $ArrayBuffer(); // eslint-disable-line no-new\n    new $ArrayBuffer(1.5); // eslint-disable-line no-new\n    new $ArrayBuffer(NaN); // eslint-disable-line no-new\n    return $ArrayBuffer.name != ARRAY_BUFFER;\n  })) {\n    $ArrayBuffer = function ArrayBuffer(length) {\n      anInstance(this, $ArrayBuffer);\n      return new BaseBuffer(toIndex(length));\n    };\n    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];\n    for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {\n      if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);\n    }\n    if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;\n  }\n  // iOS Safari 7.x bug\n  var view = new $DataView(new $ArrayBuffer(2));\n  var $setInt8 = $DataView[PROTOTYPE].setInt8;\n  view.setInt8(0, 2147483648);\n  view.setInt8(1, 2147483649);\n  if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {\n    setInt8: function setInt8(byteOffset, value) {\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    }\n  }, true);\n}\nsetToStringTag($ArrayBuffer, ARRAY_BUFFER);\nsetToStringTag($DataView, DATA_VIEW);\nhide($DataView[PROTOTYPE], $typed.VIEW, true);\nexports[ARRAY_BUFFER] = $ArrayBuffer;\nexports[DATA_VIEW] = $DataView;\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./node_modules/generate-password/main.js","webpack:///./src/components/checkPW-dialog/CheckPWDialog.vue?2d3f","webpack:///./src/components/checkPW-dialog/CheckPWDialog.vue?9537","webpack:///./src/components/checkPW-dialog/CheckPWDialog.vue?85c8","webpack:///./src/components/checkPW-dialog/CheckPWDialog.vue","webpack:///sdkWallet.ts","webpack:///./node_modules/generate-password/src/generate.js","webpack:///./src/components/checkPW-dialog/CheckPWDialog.less","webpack:///./src/components/checkPW-dialog/CheckPWDialog.less?3660","webpack:///sdkMultisig.ts","webpack:///./src/assets/images/window/checkPW.png","webpack:///sdkTransaction.ts"],"names":["module","exports","__webpack_require__","render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","class-name","footer-hide","transfer","on","on-cancel","checkPWDialogCancel","model","value","callback","$$v","show","expression","slot","_v","_s","$t","transactionDetail","_l","key","index","src","wallet","type","required","placeholder","$set","click","checkPWed","staticRenderFns","CheckPWDialogvue_type_script_lang_ts_CheckPWDialog","_super","CheckPWDialog","_this","apply","arguments","stepIndex","password","tslib_es6","Object","defineProperty","prototype","$store","state","account","$emit","saveData","ciphertext","getWallet","iv","data","DeTxt","dist","decrypt","sdkWallet","name","networkType","privateKey","length","then","Wallet","catch","$Notice","error","title","Message","WRONG_PASSWORD_ERROR","onShowCheckPWDialogChange","showCheckPWDialog","vue_property_decorator","default","components","CheckPWDialogvue_type_script_lang_ts_","checkPW_dialog_CheckPWDialogvue_type_script_lang_ts_","component","componentNormalizer","__webpack_exports__","undefined","walletInterface","loginWallet","params","tslib__WEBPACK_IMPORTED_MODULE_1__","nem2_sdk__WEBPACK_IMPORTED_MODULE_2__","generate_password__WEBPACK_IMPORTED_MODULE_3___default","a","generate","numbers","symbols","createFromPrivateKey","_a","sent","publicAccount","createFromPublicKey","publicKey","mosaics","node","accountHttp","getAccountInfo","address","toPromise","accountInfo","result","createWallet","generateNewAccount","getKeys","open","crypto","self","RANDOM_BATCH_SIZE","randomIndex","randomBytes","getNextRandomValue","randomNumber","max","rand","lowercase","uppercase","similarCharacters","strictRules","rule","options","pool","optionsLength","poolLength","i","strict","fitsRules","reduce","test","hasOwnProperty","exclude","excludeSimilarCharacters","minStrictLength","TypeError","replace","generateMultiple","amount","passwords","push","content","locals","add","sourceMap","shadowMode","d","multisigInterface","tslib__WEBPACK_IMPORTED_MODULE_0__","nem2_sdk__WEBPACK_IMPORTED_MODULE_1__","getMultisigAccountInfo","createFromRawAddress","multisigInfo","bondedMultisigTransaction","transaction","multisigPublickey","fee","map","item","toAggregate","aggregateTransaction","createBonded","create","fromUint","completeMultisigTransaction","createComplete","p","transactionInterface","rxjs_operators__WEBPACK_IMPORTED_MODULE_2__","rxjs_operators__WEBPACK_IMPORTED_MODULE_3__","announce","signature","announceStatus","_announce","generationHash","console","log","signedTransaction","sign","accountAddressRestrictionModificationTransaction","propertyType","accountPropertyTransaction","modifyAccountPropertyAddressTransaction","transferTransaction","network","TRANSFER","deadline","MaxFee","receive","MessageType","message","aggregateCompleteTransaction","maxFee","transactions","aggregateBondedTransaction","getTransaction","id","transactionId","transactionInfoThen","getTransactionStatus","hash","transactionStatusThen","transactionStatus","queryParams","incomingTransactions","outgoingTransactions","unconfirmedTransactions","getAggregateBondedTransactions","aggregateBondedTransactions","announceAggregateBonded","aggregateBondedTx","announceBondedWithLock","listener","transactionHttp","hashLockTransaction","hashLockTransactionSigned","subscribe","x","err","confirmed","pipe","transactionInfo","ignored","announcedAggregateBonded"],"mappings":"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","file":"static/js/chunk-b4bfc7c4.9fa15382.js","sourcesContent":["module.exports = require('./src/generate');\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"checkPWDialogWrap\"},[_c('Modal',{attrs:{\"class-name\":\"vertical-center-modal\",\"footer-hide\":true,\"transfer\":false},on:{\"on-cancel\":_vm.checkPWDialogCancel},model:{value:(_vm.show),callback:function ($$v) {_vm.show=$$v},expression:\"show\"}},[_c('div',{staticClass:\"checkPWDialogHeader\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',{staticClass:\"title\"},[_vm._v(_vm._s(_vm.$t('confirm_infomation')))])]),_c('div',{staticClass:\"checkPWDialogBody\"},[_c('div',{staticClass:\"stepItem1\"},[(!_vm.transactionDetail)?_c('div',[_c('div',{staticClass:\"checkPWImg\"},[_c('img',{attrs:{\"src\":require(\"@/assets/images/window/checkPW.png\")}})]),_c('p',{staticClass:\"checkRemind\"},[_vm._v(\"\\n            \"+_vm._s(_vm.$t('please_enter_your_wallet_password_to_ensure_your_own_operation_and_keep_your_wallet_safe')))])]):_c('div',{staticClass:\"info_container\"},_vm._l((_vm.transactionDetail),function(value,key,index){return _c('div',{staticClass:\"info_container_item\"},[_c('span',{staticClass:\"key\"},[_vm._v(_vm._s(_vm.$t(key)))]),(index == 0)?_c('span',{staticClass:\"value orange\"},[_vm._v(_vm._s(_vm.$t(value)))]):_c('span',{staticClass:\"value\"},[_vm._v(_vm._s(value))])])}),0),_c('Form',{attrs:{\"model\":_vm.wallet}},[_c('FormItem',[_c('Input',{attrs:{\"type\":\"password\",\"required\":\"\",\"placeholder\":_vm.$t('please_enter_your_wallet_password')},model:{value:(_vm.wallet.password),callback:function ($$v) {_vm.$set(_vm.wallet, \"password\", $$v)},expression:\"wallet.password\"}})],1),_c('FormItem',[_c('Button',{attrs:{\"type\":\"success\"},on:{\"click\":_vm.checkPWed}},[_vm._v(\" \"+_vm._s(_vm.$t('confirm')))])],1)],1)],1)])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {Component, Vue, Prop, Watch} from 'vue-property-decorator'\nimport {walletInterface} from \"@/interface/sdkWallet\"\nimport Message from \"@/message/Message\"\nimport {Crypto} from 'nem2-sdk'\nimport \"./CheckPWDialog.less\"\n\n\n@Component({\n    components: {},\n})\nexport default class CheckPWDialog extends Vue {\n    stepIndex = 0\n    show = false\n    wallet = {\n        password: ''\n    }\n\n    @Prop()\n    showCheckPWDialog: boolean\n\n    @Prop({default: ''})\n    transactionDetail: any\n\n    get getWallet() {\n        return this.$store.state.account.wallet\n    }\n\n    checkPWDialogCancel() {\n        this.$emit('closeCheckPWDialog')\n    }\n\n    checkPWed() {\n        let saveData = {\n            ciphertext: this.getWallet.ciphertext,\n            iv: this.getWallet.iv.data ? this.getWallet.iv.data : this.getWallet.iv,\n            key: this.wallet.password\n        }\n        const DeTxt = Crypto.decrypt(saveData)\n        walletInterface.getWallet({\n            name: this.getWallet.name,\n            networkType: this.getWallet.networkType,\n            privateKey: DeTxt.length === 64 ? DeTxt : ''\n        }).then(async (Wallet: any) => {\n            this.show = false\n            this.checkPWDialogCancel()\n            this.$emit('checkEnd', DeTxt)\n        }).catch(() => {\n            this.$Notice.error({\n                title: this.$t(Message.WRONG_PASSWORD_ERROR) + ''\n            })\n        })\n    }\n\n    @Watch('showCheckPWDialog')\n    onShowCheckPWDialogChange() {\n        this.wallet.password = ''\n        this.show = this.showCheckPWDialog\n    }\n\n    // @Watch('transactionDetail')\n    // onTransactionDetailChange(){\n    //\n    // }\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CheckPWDialog.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CheckPWDialog.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./CheckPWDialog.vue?vue&type=template&id=53c0bbe6&scoped=true&\"\nimport script from \"./CheckPWDialog.vue?vue&type=script&lang=ts&\"\nexport * from \"./CheckPWDialog.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"53c0bbe6\",\n  null\n  \n)\n\nexport default component.exports","var _this = this;\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Password, SimpleWallet, Account, PublicAccount, AccountHttp } from 'nem2-sdk';\r\nimport generator from 'generate-password';\r\nexport var walletInterface = {\r\n    loginWallet: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n        var name, privateKey, networkType, password, wallet, account, publicAccount, mosaics, accountHttp, accountInfo;\r\n        return tslib_1.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    name = params.name;\r\n                    privateKey = params.privateKey;\r\n                    networkType = params.networkType;\r\n                    password = new Password(generator.generate({ length: 50, numbers: true, symbols: true, }));\r\n                    return [4 /*yield*/, SimpleWallet.createFromPrivateKey(name, password, privateKey, networkType)];\r\n                case 1:\r\n                    wallet = _a.sent();\r\n                    account = Account.createFromPrivateKey(privateKey, networkType);\r\n                    publicAccount = PublicAccount.createFromPublicKey(account.publicKey, networkType);\r\n                    mosaics = [];\r\n                    if (!params.node) return [3 /*break*/, 3];\r\n                    accountHttp = new AccountHttp(params.node);\r\n                    return [4 /*yield*/, accountHttp.getAccountInfo(account.address).toPromise()];\r\n                case 2:\r\n                    accountInfo = _a.sent();\r\n                    mosaics = accountInfo.mosaics;\r\n                    _a.label = 3;\r\n                case 3: return [2 /*return*/, {\r\n                        result: {\r\n                            wallet: wallet,\r\n                            password: password,\r\n                            publicAccount: publicAccount,\r\n                            account: account,\r\n                            mosaics: mosaics\r\n                        }\r\n                    }];\r\n            }\r\n        });\r\n    }); },\r\n    createWallet: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n        var name, networkType, privateKey, password, wallet;\r\n        return tslib_1.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    name = params.name;\r\n                    networkType = params.networkType;\r\n                    privateKey = Account.generateNewAccount(networkType).privateKey;\r\n                    password = new Password(generator.generate({ length: 50, numbers: true, symbols: true, }));\r\n                    return [4 /*yield*/, SimpleWallet.createFromPrivateKey(name, password, privateKey, networkType)];\r\n                case 1:\r\n                    wallet = _a.sent();\r\n                    return [2 /*return*/, {\r\n                            result: {\r\n                                wallet: wallet,\r\n                                privateKey: privateKey,\r\n                                password: password\r\n                            }\r\n                        }];\r\n            }\r\n        });\r\n    }); },\r\n    getWallet: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n        var name, privateKey, networkType, password, wallet;\r\n        return tslib_1.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    name = params.name;\r\n                    privateKey = params.privateKey;\r\n                    networkType = params.networkType;\r\n                    password = new Password(generator.generate({ length: 50, numbers: true, symbols: true, }));\r\n                    return [4 /*yield*/, SimpleWallet.createFromPrivateKey(name, password, privateKey, networkType)];\r\n                case 1:\r\n                    wallet = _a.sent();\r\n                    return [2 /*return*/, {\r\n                            result: {\r\n                                wallet: wallet,\r\n                                privateKey: privateKey,\r\n                                password: password\r\n                            }\r\n                        }];\r\n            }\r\n        });\r\n    }); },\r\n    getKeys: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n        var password, wallet, account;\r\n        return tslib_1.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    password = params.password;\r\n                    wallet = params.wallet;\r\n                    return [4 /*yield*/, wallet.open(password)];\r\n                case 1:\r\n                    account = _a.sent();\r\n                    return [2 /*return*/, {\r\n                            result: {\r\n                                account: account\r\n                            }\r\n                        }];\r\n            }\r\n        });\r\n    }); },\r\n};\r\n//# sourceMappingURL=sdkWallet.js.map","var crypto = require('crypto');\n\nvar self = module.exports;\n\nconst RANDOM_BATCH_SIZE = 256;\n\nvar randomIndex;\nvar randomBytes;\n\nvar getNextRandomValue = function() {\n\tif (randomIndex === undefined || randomIndex >= randomBytes.length) {\n\t\trandomIndex = 0;\n\t\trandomBytes = crypto.randomBytes(RANDOM_BATCH_SIZE);\n\t}\n\n\tvar result = randomBytes[randomIndex];\n\trandomIndex += 1;\n\n\treturn result;\n};\n\n// Generates a random number\nvar randomNumber = function(max) {\n\t// gives a number between 0 (inclusive) and max (exclusive)\n\tvar rand = getNextRandomValue();\n\twhile (rand >= 256 - (256 % max)) {\n\t\trand = getNextRandomValue();\n\t}\n\treturn rand % max;\n};\n\n// Possible combinations\nvar lowercase = 'abcdefghijklmnopqrstuvwxyz',\n\tuppercase = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\n\tnumbers = '0123456789',\n\tsymbols = '!@#$%^&*()+_-=}{[]|:;\"/?.><,`~',\n\tsimilarCharacters = /[ilLI|`oO0]/g,\n\tstrictRules = [\n\t\t{ name: 'lowercase', rule: /[a-z]/ },\n\t\t{ name: 'uppercase', rule: /[A-Z]/ },\n\t\t{ name: 'numbers', rule: /[0-9]/ },\n\t\t{ name: 'symbols', rule: /[!@#$%^&*()+_\\-=}{[\\]|:;\"/?.><,`~]/ }\n\t];\n\nvar generate = function(options, pool) {\n\tvar password = '',\n\t\toptionsLength = options.length,\n\t\tpoolLength = pool.length;\n\n\tfor (var i = 0; i < optionsLength; i++) {\n\t\tpassword += pool[randomNumber(poolLength)];\n\t}\n\n\tif (options.strict) {\n\t\t// Iterate over each rule, checking to see if the password works.\n\t\tvar fitsRules = strictRules.reduce(function(result, rule) {\n\t\t\t// Skip checking the rule if we know it doesn't match.\n\t\t\tif (result == false) return false;\n\n\t\t\t// If the option is not checked, ignore it.\n\t\t\tif (options[rule.name] == false) return result;\n\n\t\t\t// Run the regex on the password and return whether\n\t\t\t// or not it matches.\n\t\t\treturn rule.rule.test(password);\n\t\t}, true);\n\n\t\t// If it doesn't fit the rules, generate a new one (recursion).\n\t\tif (!fitsRules) return generate(options, pool);\n\t}\n\n\treturn password;\n};\n\n// Generate a random password.\nself.generate = function(options) {\n\t// Set defaults.\n\toptions = options || {};\n\tif (!options.hasOwnProperty('length')) options.length = 10;\n\tif (!options.hasOwnProperty('numbers')) options.numbers = false;\n\tif (!options.hasOwnProperty('symbols')) options.symbols = false;\n\tif (!options.hasOwnProperty('exclude')) options.exclude = '';\n\tif (!options.hasOwnProperty('uppercase')) options.uppercase = true;\n\tif (!options.hasOwnProperty('excludeSimilarCharacters')) options.excludeSimilarCharacters = false;\n\tif (!options.hasOwnProperty('strict')) options.strict = false;\n\n\tif (options.strict) {\n\t\tvar minStrictLength = 1 + (options.numbers ? 1 : 0) + (options.symbols ? 1 : 0) + (options.uppercase ? 1 : 0);\n\t\tif (minStrictLength > options.length) {\n\t\t\tthrow new TypeError('Length must correlate with strict guidelines');\n\t\t}\n\t}\n\n\t// Generate character pool\n\tvar pool = lowercase;\n\n\t// uppercase\n\tif (options.uppercase) {\n\t\tpool += uppercase;\n\t}\n\t// numbers\n\tif (options.numbers) {\n\t\tpool += numbers;\n\t}\n\t// symbols\n\tif (options.symbols) {\n\t\tpool += symbols;\n\t}\n\n\t// similar characters\n\tif (options.excludeSimilarCharacters) {\n\t\tpool = pool.replace(similarCharacters, '');\n\t}\n\n\t// excludes characters from the pool\n\tvar i = options.exclude.length;\n\twhile (i--) {\n\t\tpool = pool.replace(options.exclude[i], '');\n\t}\n\n\tvar password = generate(options, pool);\n\n\treturn password;\n};\n\n// Generates multiple passwords at once with the same options.\nself.generateMultiple = function(amount, options) {\n\tvar passwords = [];\n\n\tfor (var i = 0; i < amount; i++) {\n\t\tpasswords[i] = self.generate(options);\n\t}\n\n\treturn passwords;\n};\n","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".checkPWDialogWrap .vertical-center-modal{width:10rem!important;margin:0 auto}.checkPWDialogWrap .vertical-center-modal .ivu-modal{width:10rem!important}.checkPWDialogWrap .checkPWDialogHeader{height:.74rem;line-height:.74rem;font-size:.28rem;font-weight:400;color:#222}.checkPWDialogWrap .checkPWDialogHeader .title{padding-left:.64rem}.checkPWDialogWrap .ivu-modal-content .ivu-modal-close{top:.3rem;right:.4rem}.checkPWDialogWrap .ivu-modal-content .ivu-modal-close .ivu-icon-ios-close{font-size:.4rem;color:#666;font-weight:400}.checkPWDialogWrap .checkPWDialogBody{padding:.4rem 0 .4rem}.checkPWDialogWrap .checkPWDialogBody .steps{height:.54rem;text-align:center}.checkPWDialogWrap .checkPWDialogBody .steps .stepItem{display:inline-block;width:1rem;height:.5rem;line-height:.5rem;font-size:.16rem;font-weight:400;white-space:nowrap;color:#999;text-align:center;margin-right:.93rem;position:relative}.checkPWDialogWrap .checkPWDialogBody .steps .stepItem:last-of-type{margin-right:0}.checkPWDialogWrap .checkPWDialogBody .steps .stepItem:after{content:\\\"\\\";display:inline-block;width:1rem;height:4Px;background:#ccc;position:absolute;left:0;bottom:-4Px}.checkPWDialogWrap .checkPWDialogBody .steps .stepItem.active{font-size:.2rem;color:#20b5ac;font-weight:700}.checkPWDialogWrap .checkPWDialogBody .steps .stepItem.active:after{background:#20b5ac}.checkPWDialogWrap .checkPWDialogBody .stepItem1{padding-top:.2rem}.checkPWDialogWrap .checkPWDialogBody .stepItem1 .checkPWImg{width:1.24rem;height:1.24rem;margin:0 auto .39rem}.checkPWDialogWrap .checkPWDialogBody .stepItem1 .checkPWImg img{display:block;width:100%;height:100%}.checkPWDialogWrap .checkPWDialogBody .stepItem1 .checkRemind{font-size:.2rem;font-weight:400;color:#222;text-align:center;margin-bottom:.3rem}.checkPWDialogWrap .checkPWDialogBody .stepItem1 input{display:block;width:6.2rem;height:.6rem;font-size:.14rem;font-weight:400;color:#999;padding-left:.4rem;border:.01rem solid #ccc;border-radius:.08rem;margin:0 auto}.checkPWDialogWrap .checkPWDialogBody .stepItem1 button{display:block;width:2rem;height:.6rem;line-height:.5rem;font-size:.16rem;font-weight:400;text-align:center;color:#fff;background:#20b5ac;border:none;border-radius:.3rem;margin:.4rem auto 0;position:relative}.checkPWDialogWrap .info_container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;margin-bottom:.5rem}.checkPWDialogWrap .info_container .info_container_item{width:6rem;margin:.15rem 0}.checkPWDialogWrap .info_container .info_container_item .orange{font-size:.16rem!important;font-weight:700!important;color:#f15f23!important}.checkPWDialogWrap .info_container .info_container_item span{display:inline-block;text-align:left}.checkPWDialogWrap .info_container .info_container_item .key{width:1.5rem;font-size:.14rem;font-weight:400;color:#666}.checkPWDialogWrap .info_container .info_container_item .value{width:auto;font-size:.16rem;font-weight:400;color:#222}\", \"\"]);\n\n// exports\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js??ref--10-oneOf-3-1!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-3-2!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-3-3!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-3-4!./CheckPWDialog.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"7de7a99d\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","var _this = this;\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Deadline, UInt64, PublicAccount, AggregateTransaction, AccountHttp, Address } from 'nem2-sdk';\r\nexport var multisigInterface = {\r\n    getMultisigAccountInfo: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n        var address, node, accountHttp, multisigInfo;\r\n        return tslib_1.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    address = params.address, node = params.node;\r\n                    accountHttp = new AccountHttp(node);\r\n                    return [4 /*yield*/, accountHttp.getMultisigAccountInfo(Address.createFromRawAddress(address)).toPromise()];\r\n                case 1:\r\n                    multisigInfo = _a.sent();\r\n                    return [2 /*return*/, {\r\n                            result: {\r\n                                multisigInfo: multisigInfo\r\n                            }\r\n                        }];\r\n            }\r\n        });\r\n    }); },\r\n    bondedMultisigTransaction: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n        var transaction, multisigPublickey, networkType, account, fee, aggregateTransaction;\r\n        return tslib_1.__generator(this, function (_a) {\r\n            transaction = params.transaction, multisigPublickey = params.multisigPublickey, networkType = params.networkType, account = params.account, fee = params.fee;\r\n            transaction = transaction.map(function (item) {\r\n                item.toAggregate(PublicAccount.createFromPublicKey(multisigPublickey, networkType));\r\n                return item;\r\n            });\r\n            aggregateTransaction = AggregateTransaction.createBonded(Deadline.create(), transaction, networkType, [], UInt64.fromUint(fee));\r\n            return [2 /*return*/, {\r\n                    result: {\r\n                        aggregateTransaction: aggregateTransaction\r\n                    }\r\n                }];\r\n        });\r\n    }); },\r\n    completeMultisigTransaction: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n        var transaction, multisigPublickey, networkType, fee, aggregateTransaction;\r\n        return tslib_1.__generator(this, function (_a) {\r\n            transaction = params.transaction, multisigPublickey = params.multisigPublickey, networkType = params.networkType, fee = params.fee;\r\n            transaction = transaction.map(function (item) {\r\n                item = item.toAggregate(PublicAccount.createFromPublicKey(multisigPublickey, networkType));\r\n                return item;\r\n            });\r\n            aggregateTransaction = AggregateTransaction.createComplete(Deadline.create(), transaction, networkType, [], UInt64.fromUint(fee));\r\n            return [2 /*return*/, {\r\n                    result: {\r\n                        aggregateTransaction: aggregateTransaction\r\n                    }\r\n                }];\r\n        });\r\n    }); },\r\n};\r\n//# sourceMappingURL=sdkMultisig.js.map","module.exports = __webpack_public_path__ + \"static/img/checkPW.21d73757.png\";","var _this = this;\r\nimport * as tslib_1 from \"tslib\";\r\nimport { TransactionHttp, AccountHttp, TransferTransaction, Deadline, Address, UInt64, Message, AggregateTransaction, TransactionType, HashLockTransaction, Mosaic, MosaicId, ModifyAccountPropertyAddressTransaction } from 'nem2-sdk';\r\nimport { filter, mergeMap } from \"rxjs/operators\";\r\nexport var transactionInterface = {\r\n    announce: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n        var signature, node, announceStatus;\r\n        return tslib_1.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    signature = params.signature;\r\n                    node = params.node;\r\n                    return [4 /*yield*/, new TransactionHttp(node).announce(signature)];\r\n                case 1:\r\n                    announceStatus = _a.sent();\r\n                    return [2 /*return*/, {\r\n                            result: {\r\n                                announceStatus: announceStatus\r\n                            }\r\n                        }];\r\n            }\r\n        });\r\n    }); },\r\n    _announce: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n        var transaction, node, account, generationHash, signedTransaction, announceStatus;\r\n        return tslib_1.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    transaction = params.transaction, node = params.node, account = params.account, generationHash = params.generationHash;\r\n                    console.log(account, transaction);\r\n                    signedTransaction = account.sign(transaction, generationHash);\r\n                    return [4 /*yield*/, new TransactionHttp(node).announce(signedTransaction)];\r\n                case 1:\r\n                    announceStatus = _a.sent();\r\n                    console.log(signedTransaction);\r\n                    return [2 /*return*/, {\r\n                            result: {\r\n                                announceStatus: announceStatus\r\n                            }\r\n                        }];\r\n            }\r\n        });\r\n    }); },\r\n    // todo Account Restriction  after updating sdk\r\n    accountAddressRestrictionModificationTransaction: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n        var propertyType, accountPropertyTransaction, networkType, fee, modifyAccountPropertyAddressTransaction;\r\n        return tslib_1.__generator(this, function (_a) {\r\n            propertyType = params.propertyType, accountPropertyTransaction = params.accountPropertyTransaction, networkType = params.networkType, fee = params.fee;\r\n            modifyAccountPropertyAddressTransaction = ModifyAccountPropertyAddressTransaction.create(Deadline.create(), propertyType, accountPropertyTransaction, networkType, UInt64.fromUint(fee));\r\n            return [2 /*return*/, {\r\n                    result: {\r\n                        modifyAccountPropertyAddressTransaction: modifyAccountPropertyAddressTransaction\r\n                    }\r\n                }];\r\n        });\r\n    }); },\r\n    transferTransaction: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n        var network, transactionType, deadline, MaxFee, receive, mosaics, MessageType, message, transferTransaction;\r\n        return tslib_1.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    network = params.network;\r\n                    transactionType = TransactionType.TRANSFER;\r\n                    deadline = Deadline.create();\r\n                    MaxFee = UInt64.fromUint(params.MaxFee);\r\n                    receive = Address.createFromRawAddress(params.receive);\r\n                    mosaics = params.mosaics;\r\n                    MessageType = params.MessageType;\r\n                    return [4 /*yield*/, new Message(MessageType, params.message)];\r\n                case 1:\r\n                    message = _a.sent();\r\n                    return [4 /*yield*/, TransferTransaction.create(deadline, receive, mosaics, message, network, MaxFee)];\r\n                case 2:\r\n                    transferTransaction = _a.sent();\r\n                    return [2 /*return*/, {\r\n                            result: {\r\n                                transferTransaction: transferTransaction\r\n                            }\r\n                        }];\r\n            }\r\n        });\r\n    }); },\r\n    aggregateCompleteTransaction: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n        var network, deadline, maxFee, transactions, aggregateCompleteTransaction;\r\n        return tslib_1.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    network = params.network;\r\n                    deadline = Deadline.create();\r\n                    maxFee = UInt64.fromUint(params.MaxFee);\r\n                    transactions = params.transactions;\r\n                    return [4 /*yield*/, AggregateTransaction.createComplete(deadline, transactions, network, [], maxFee)];\r\n                case 1:\r\n                    aggregateCompleteTransaction = _a.sent();\r\n                    return [2 /*return*/, {\r\n                            result: {\r\n                                aggregateCompleteTransaction: aggregateCompleteTransaction\r\n                            }\r\n                        }];\r\n            }\r\n        });\r\n    }); },\r\n    aggregateBondedTransaction: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n        var network, deadline, transactions, aggregateBondedTransaction;\r\n        return tslib_1.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    network = params.network;\r\n                    deadline = Deadline.create();\r\n                    transactions = params.transactions;\r\n                    return [4 /*yield*/, AggregateTransaction.createBonded(deadline, transactions, network)];\r\n                case 1:\r\n                    aggregateBondedTransaction = _a.sent();\r\n                    return [2 /*return*/, {\r\n                            result: {\r\n                                aggregateBondedTransaction: aggregateBondedTransaction\r\n                            }\r\n                        }];\r\n            }\r\n        });\r\n    }); },\r\n    getTransaction: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n        var id, node, transactionInfoThen;\r\n        return tslib_1.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    id = params.transactionId;\r\n                    node = params.node;\r\n                    return [4 /*yield*/, new TransactionHttp(node).getTransaction(id)];\r\n                case 1:\r\n                    transactionInfoThen = _a.sent();\r\n                    return [2 /*return*/, {\r\n                            result: {\r\n                                transactionInfoThen: transactionInfoThen\r\n                            }\r\n                        }];\r\n            }\r\n        });\r\n    }); },\r\n    getTransactionStatus: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n        var hash, node, transactionStatusThen;\r\n        return tslib_1.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    hash = params.hash;\r\n                    node = params.node;\r\n                    return [4 /*yield*/, new TransactionHttp(node).getTransactionStatus(hash)];\r\n                case 1:\r\n                    transactionStatusThen = _a.sent();\r\n                    return [2 /*return*/, {\r\n                            result: {\r\n                                transactionStatus: transactionStatusThen\r\n                            }\r\n                        }];\r\n            }\r\n        });\r\n    }); },\r\n    transactions: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n        var publicAccount, queryParams, node, transactions;\r\n        return tslib_1.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    publicAccount = params.publicAccount;\r\n                    queryParams = params.queryParams;\r\n                    node = params.node;\r\n                    return [4 /*yield*/, new AccountHttp(node).transactions(publicAccount, queryParams)];\r\n                case 1:\r\n                    transactions = _a.sent();\r\n                    return [2 /*return*/, {\r\n                            result: {\r\n                                transactions: transactions\r\n                            }\r\n                        }];\r\n            }\r\n        });\r\n    }); },\r\n    incomingTransactions: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n        var publicAccount, queryParams, node, incomingTransactions;\r\n        return tslib_1.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    publicAccount = params.publicAccount;\r\n                    queryParams = params.queryParams;\r\n                    node = params.node;\r\n                    return [4 /*yield*/, new AccountHttp(node).incomingTransactions(publicAccount, queryParams)];\r\n                case 1:\r\n                    incomingTransactions = _a.sent();\r\n                    return [2 /*return*/, {\r\n                            result: {\r\n                                incomingTransactions: incomingTransactions\r\n                            }\r\n                        }];\r\n            }\r\n        });\r\n    }); },\r\n    outgoingTransactions: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n        var publicAccount, queryParams, node, outgoingTransactions;\r\n        return tslib_1.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    publicAccount = params.publicAccount;\r\n                    queryParams = params.queryParams;\r\n                    node = params.node;\r\n                    return [4 /*yield*/, new AccountHttp(node).outgoingTransactions(publicAccount, queryParams)];\r\n                case 1:\r\n                    outgoingTransactions = _a.sent();\r\n                    return [2 /*return*/, {\r\n                            result: {\r\n                                outgoingTransactions: outgoingTransactions\r\n                            }\r\n                        }];\r\n            }\r\n        });\r\n    }); },\r\n    unconfirmedTransactions: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n        var publicAccount, queryParams, node, unconfirmedTransactions;\r\n        return tslib_1.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    publicAccount = params.publicAccount;\r\n                    queryParams = params.queryParams;\r\n                    node = params.node;\r\n                    return [4 /*yield*/, new AccountHttp(node).unconfirmedTransactions(publicAccount, queryParams)];\r\n                case 1:\r\n                    unconfirmedTransactions = _a.sent();\r\n                    return [2 /*return*/, {\r\n                            result: {\r\n                                unconfirmedTransactions: unconfirmedTransactions\r\n                            }\r\n                        }];\r\n            }\r\n        });\r\n    }); },\r\n    getAggregateBondedTransactions: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n        var publicAccount, queryParams, node, aggregateBondedTransactions;\r\n        return tslib_1.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    publicAccount = params.publicAccount;\r\n                    queryParams = params.queryParams;\r\n                    node = params.node;\r\n                    return [4 /*yield*/, new AccountHttp(node).aggregateBondedTransactions(publicAccount, queryParams)];\r\n                case 1:\r\n                    aggregateBondedTransactions = _a.sent();\r\n                    return [2 /*return*/, {\r\n                            result: {\r\n                                aggregateBondedTransactions: aggregateBondedTransactions\r\n                            }\r\n                        }];\r\n            }\r\n        });\r\n    }); },\r\n    announceAggregateBonded: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n        var signedTransaction, node, aggregateBondedTx;\r\n        return tslib_1.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    signedTransaction = params.signedTransaction;\r\n                    node = params.node;\r\n                    return [4 /*yield*/, new TransactionHttp(node).announceAggregateBonded(signedTransaction)];\r\n                case 1:\r\n                    aggregateBondedTx = _a.sent();\r\n                    return [2 /*return*/, {\r\n                            result: {\r\n                                aggregateBondedTx: aggregateBondedTx\r\n                            }\r\n                        }];\r\n            }\r\n        });\r\n    }); },\r\n    announceBondedWithLock: function (params) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n        var aggregateTransaction, account, listener, node, generationHash, networkType, fee, transactionHttp, signedTransaction, hashLockTransaction, hashLockTransactionSigned;\r\n        return tslib_1.__generator(this, function (_a) {\r\n            aggregateTransaction = params.aggregateTransaction, account = params.account, listener = params.listener, node = params.node, generationHash = params.generationHash, networkType = params.networkType, fee = params.fee;\r\n            transactionHttp = new TransactionHttp(node);\r\n            signedTransaction = account.sign(aggregateTransaction, generationHash);\r\n            hashLockTransaction = HashLockTransaction.create(Deadline.create(), \r\n            // todo repalce mosaic id\r\n            new Mosaic(new MosaicId([853116887, 2007078553]), UInt64.fromUint(10000000)), UInt64.fromUint(480), signedTransaction, networkType, UInt64.fromUint(fee));\r\n            hashLockTransactionSigned = account.sign(hashLockTransaction, generationHash);\r\n            listener.open().then(function () {\r\n                transactionHttp\r\n                    .announce(hashLockTransactionSigned)\r\n                    .subscribe(function (x) { return console.log(x); }, function (err) { return console.error(err); });\r\n                listener\r\n                    .confirmed(account.address)\r\n                    .pipe(filter(function (transaction) { return transaction.transactionInfo !== undefined\r\n                    && transaction.transactionInfo.hash === hashLockTransactionSigned.hash; }), mergeMap(function (ignored) { return transactionHttp.announceAggregateBonded(signedTransaction); }))\r\n                    .subscribe(function (announcedAggregateBonded) { return console.log(announcedAggregateBonded); }, function (err) { return console.error(err); });\r\n            });\r\n            console.log(hashLockTransactionSigned);\r\n            console.log(signedTransaction);\r\n            return [2 /*return*/, {\r\n                    result: {\r\n                        aggregateBondedTx: ''\r\n                    }\r\n                }];\r\n        });\r\n    }); },\r\n};\r\n//# sourceMappingURL=sdkTransaction.js.map"],"sourceRoot":""}